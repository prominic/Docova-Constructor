---
# tasks file for Docova Deployment
- name: Create webroot
  file:
    state: directory
    path: /var/html/www/
    owner: www-data
    group: www-data
    mode: 0755
  become: yes
- 
  name: Check if Docova directory exists in /var/html/www/docova
  stat: path=/var/html/www/docova
  register: check_path  
- 
  name: Copying Docova Bundle Zip
  copy:
    src: /vagrant/roles/www-data/templates/docova.zip
    dest: /tmp/docova.zip 
- 
  name: Extract Docova
  unarchive:
    src: /tmp/docova.zip
    dest: /tmp
    owner: www-data
    group: www-data
    copy: no
  become: yes
  when: not check_path.stat.exists
- 
  name: Move Docova install files
  command: mv /tmp/docova /var/html/www/docova
  become: yes
  when: not check_path.stat.exists
  notify:
    - restart nginx
- 
  name: Set Docova Document Permissions
  file:
    state: directory
    path: { item }
    owner: www-data
    group: www-data
    mode: 0755
    items:
     - /var/html/www/docova/web/upload-attachments
  become: yes
- 
  name: Update Docova config file
  lineinfile:
    dest: "/var/html/www/docova/app/config/parameters.yml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "database_driver:", 'line': "    database_driver: pdo_mysql"}
    - {'regexp': "database_port:", 'line': "    database_port: 3306"}
    - {'regexp': "database_name:", 'line': "    database_name: {{docova_db_name}}"}
    - {'regexp': "database_user:", 'line': "    database_user: {{docova_db_user}}"}
    - {'regexp': "database_password:", 'line': "    database_password: {{docova_db_password}}"}
  notify:
    - restart nginx
