---
# tasks file for Docova Deployment
- name: Create webroot
  file:
    state: directory
    path: /var/html/www/
    owner: www-data
    group: www-data
    mode: 0755
  become: yes
- 
  name: Check if Docova directory exists in /var/html/www/docova
  stat: path=/var/html/www/docova
  register: check_path  
- 
  name: Copying Docova Bundle Zip
  copy:
    src: /vagrant/roles/www-data/templates/docova.zip
    dest: /tmp/docova.zip 
- 
  name: Extract Docova
  unarchive:
    src: /tmp/docova.zip
    dest: /tmp
    owner: www-data
    group: www-data
    copy: no
  become: yes
  when: not check_path.stat.exists
- 
  name: Move Docova install files
  command: mv /tmp/docova /var/html/www/docova
  become: yes
  when: not check_path.stat.exists
  notify:
    - restart nginx
- 
  name: Check if Docova directory exists in /var/html/www/docova/web/attachments
  stat: path=/var/html/www/docova/web/attachments
  register: check_path  
- 
  name: Set Docova Document Permissions
  file:
    state: directory
    path: { item }
    owner: www-data
    group: www-data
    mode: 0755
  with_items:
     - /var/html/www/docova/src/Docova/DocovaBundle/Agents
     - /var/html/www/docova/src/Docova/DocovaBundle/Resources/public/css/custom
     - /var/html/www/docova/src/Docova/DocovaBundle/Resources/images
     - /var/html/www/docova/src/Docova/DocovaBundle/Resources/public/js/custom
     - /var/html/www/docova/src/Docova/DocovaBundle/Resources/views/DesignElements
     - /var/html/www/docova/var/logs
     - /var/html/www/docova/var/sessions
     - /var/html/www/docova/var/cache
     - /var/html/www/docova/web/upload
     - {{ document_root }}
  become: yes
- 
  name: Update Docova config file
  lineinfile:
    dest: "/var/html/www/docova/app/config/parameters.yml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - {'regexp': "database_driver:", 'line': "    database_driver: pdo_mysql"}
    - {'regexp': "database_port:", 'line': "    database_port: 3306"}
    - {'regexp': "database_name:", 'line': "    database_name: {{database_name}}"}
    - {'regexp': "database_user:", 'line': "    database_user: {{database_user}}"}
    - {'regexp': "database_password:", 'line': "    database_password: {{database_password}}"}
  notify:
    - restart nginx
    - restart php-fpm
- 
  name: Setting Autoindex Cron Job
  cron:
    name: "Autoindex"
    minute: "*/5"
    job: "sudo bash /var/html/www/docova/autoindex.sc"
- 
  name: Setting DailyLifeCycle Cron Job
  cron:
    name: "DailyLifeCycle"
    minute: "0"
    job: "sudo bash /var/html/www/docova/dailylifecycle.sc"
- 
  name: "Running setUpDOCOVA"
  shell: |
      sudo bash /var/html/www/docova/setUpDOCOVA.sc <<EOF
      y
      EOF
