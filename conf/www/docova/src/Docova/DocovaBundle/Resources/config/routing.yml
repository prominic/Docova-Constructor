docova_workspaceframe:
    path: /wWorkspaceFrame
    defaults: { _controller: DocovaBundle:Workspace:openWsFrame }
docova_wsoptions:
    path: /WorkspaceOptions
    defaults: { _controller: DocovaBundle:Workspace:workspaceOptions }
docova_workspace:
    path: /Workspace
    defaults: { _controller: DocovaBundle:Workspace:showWorkspace }
docova_loadworkspace:
    path: /loadWorkspace/{wkey}
    defaults: { _controller: DocovaBundle:Workspace:loadWorkspace }
docova_workspaceservices:
    path: /WorkspaceServices
    defaults: { _controller: DocovaBundle:Workspace:workspaceServices }
docova_dlgWSproperties:
    path: /dlgWSPanelProperties
    defaults: { _controller: DocovaBundle:Workspace:openPanelProperties }
docova_dlgaddapp:
    path: /dlgAddApp
    defaults: { _controller: DocovaBundle:Workspace:openDlgAddApp }
docova_dlgcreateapp:
    path: /dlgCreateApp
    defaults: { _controller: DocovaBundle:Workspace:openCreateApp }
docova_dlgcreateappgroup:
    path: /dlgCreateAppGroup
    defaults: { _controller: DocovaBundle:Workspace:openCreateAppGroup }
docova_dlgmanageappgroups:
    path: /dlgManageAppGroup
    defaults: { _controller: DocovaBundle:Workspace:manageAppGroups }
docova_dlgappproperties:
    path: /dlgAppProperties
    defaults: { _controller: DocovaBundle:Workspace:openAppProperties }
docova_dlgaboutworkspace:
    path: /dlgAboutWorkspace
    defaults: { _controller: DocovaBundle:Workspace:openAboutWorkspaceDlg }
docova_dlgcopyapp:
    path: /dlgCopyApp
    defaults: { _controller: DocovaBundle:Workspace:openCopyAppDlg }
docova_appdata:
    path: /appdata.xml
    defaults: { _controller: DocovaBundle:Workspace:appDataXml }
docova_openapp:
    path: /openApp/{appid}
    defaults: { _controller: DocovaBundle:Workspace:openApplication }
docova_apploader:
    path: /AppLoader/{appid}
    defaults: { _controller: DocovaBundle:Workspace:appLoader }
docova_emptycontent:
    path: /EmptyContent
    defaults: { _controller: DocovaBundle:Workspace:emptyContent }
docova_dlglibrarygroups:
    path: /dlgManageLibraryGroup
    defaults: { _controller: DocovaBundle:Workspace:openDlgLibraryGroups }
docova_getlibgroups:
    path: /getLibraryGroupLibraries.xml
    defaults: { _controller: DocovaBundle:Workspace:getLibraryGroup }
docova_templatedata:
    path: /templatedata.xml
    defaults: { _controller: DocovaBundle:Workspace:getTemplateData }
docova_modernworkspace:
    path: /docovaWorkspace
    defaults: { _controller: DocovaBundle:Workspace:openDocovaWorkspace }
docova_searchapp:
    path: /searchapp
    defaults: { _controller: DocovaBundle:Workspace:searchApp }
    requirements:
       _method: post
docova_getapps:
    path: /getapps
    defaults: { _controller: DocovaBundle:Workspace:getApps }
docova_changelayout:
    path: /dlgChangeLayout
    defaults: { _controller: DocovaBundle:Workspace:openChangeLayout }

docova_appbuilderframes:
    path: /wAppbuilderFrame
    defaults: { _controller: DocovaBundle:AppBuilder:appBuilderFrame }
docova_appbuilderleftnav:
    path: /wAppBuilderLeftNav
    defaults: { _controller: DocovaBundle:AppBuilder:appBuilderLeftNav }
docova_tabbedtablebuilder:
    path: /TabbedTableAppBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:tabbedTableAppBuilder }
docova_appbuilderhome:
    path: /AppBuilderDefault
    defaults: { _controller: DocovaBundle:AppBuilder:appBuilderHomePage }
docova_dlgimportapp:
    path: /dlgImportApp
    defaults: { _controller: DocovaBundle:AppBuilder:openImportAppDlg }
docova_dlgimportdesignelementdxl:
    path: /dlgImportDesignElementDXL
    defaults: { _controller: DocovaBundle:AppBuilder:openImportDesignElementDXLDlg }
docova_dlgaddexistingapp:
    path: /dlgAddExistingApp
    defaults: { _controller: DocovaBundle:AppBuilder:openAddExistingAppDlg }
docova_inheritappdlg:
    path: /dlgInheritApp
    defaults: { _controller: DocovaBundle:AppBuilder:openIneritAppDlg }
docova_appproperties:
    path: /ApplicationDocKey/{appid}
    defaults: { _controller: DocovaBundle:AppBuilder:applicationDocKey }
docova_dlgacladdrole:
    path: /dlgACLAddRole
    defaults: { _controller: DocovaBundle:AppBuilder:openAclAddRoleDlg }
docova_dlgaclremoverole:
    path: /dlgACLRemoveRole
    defaults: { _controller: DocovaBundle:AppBuilder:openAclRemoveRoleDlg }
docova_dlgacladdentry:
    path: /dlgACLAddEntry
    defaults: { _controller: DocovaBundle:AppBuilder:openAclAddEntryDlg }
docova_notesview:
    path: /NotesView/{viewid}
    defaults: { _controller: DocovaBundle:AppBuilder:notesView, viewid : null }
docova_widgetsview:
    path: /WidgetsView
    defaults: { _controller: DocovaBundle:AppBuilder:widgetsView }
docova_appdataview:
    path: /loadView/{viewname}/{appid}
    defaults: { _controller: DocovaBundle:AppBuilder:getAppViewEntries }
docova_appbuilderform:
    path: /AppFormBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:AppFormBuilder }
docova_applookup:
    path: /luApplication/{viewname}
    defaults: { _controller: DocovaBundle:AppBuilder:applicationLookups }
docova_applayout:
    path: /AppLayout
    defaults: { _controller: DocovaBundle:AppBuilder:AppLayout }
docova_applayoutcontainer:
    path: /applayoutContainer/{layout}
    defaults: { _controller: DocovaBundle:AppBuilder:appLayoutContainer, layout : null }
docova_nocontentlayout:
    path: /noContent
    defaults: { _controller: DocovaBundle:AppBuilder:noContentLayout }
docova_dlginsertlayout:
    path: /dlgInsertLayout
    defaults: { _controller: DocovaBundle:AppBuilder:openDlgInsertLayout }
docova_apppagebuilder:
    path: /AppPageBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appPageBuilder }
docova_subformbuilder:
    path: /AppSubformBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appSubformBuilder }
docova_outlinebuilder:
    path: /OutlineBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:outlineBuilder }
docova_iconpicker:
    path: /dlgJQIconPicker
    defaults: { _controller: DocovaBundle:AppBuilder:openDlgIconPicker }
docova_appjsbuilder:
    path: /AppJSBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appJSBuilder }
docova_appagentbuilder:
    path: /AppAgentBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appAgentBuilder }
docova_appscriptlibbuilder:
    path: /AppScriptLibraryBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appScriptLibraryBuilder }
docova_appimages:
    path: /AppFile
    defaults: { _controller: DocovaBundle:AppBuilder:appFile }
docova_cssbuilder:
    path: /AppCSSBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appCSSBuilder }
docova_workflowbuilder:
    path: /WorkflowBuilder
    defaults: { _controller: DocovaBundle:AppBuilder:appWorkflowBuilder }
docova_blankoutline:
    path: /BlankOutline
    defaults: { _controller: DocovaBundle:AppBuilder:blankOutline }
docova_readcontent:
    path: /ReadContent/{document}
    defaults: { _controller: DocovaBundle:AppBuilder:readContent }
docova_previewform:
    path: /PreviewForm/{formid}
    defaults: { _controller: DocovaBundle:AppBuilder:previewForm }
docova_appworkflowservices:
    path: /AppWorkflowServices
    defaults: { _controller: DocovaBundle:AppBuilder:appWorkflowServices }
docova_dlgaddabapp:
    path: /dlgAddABApp
    defaults: { _controller: DocovaBundle:AppBuilder:openAddAppDlg }
docova_dlgimportdata:
    path: /dlgImportAppData
    defaults: { _controller: DocovaBundle:AppBuilder:openImportDataDlg }
docova_dlgimportprogressbar:
    path: /dlgImportProgressBar
    defaults: { _controller: DocovaBundle:AppBuilder:openImportProgressBar }
docova_importstatus:
    path: /getImportStatus
    defaults: { _controller: DocovaBundle:AppBuilder:getImportDataStatus }
docova_importviews:
    path: /synchViewsData/{appid}
    defaults: { _controller: DocovaBundle:AppBuilder:importViewsData }
docova_importacl:
    path: /importAppAcl/{appid}
    defaults: { _controller: DocovaBundle:AppBuilder:importAppAcl  }
docova_builddoclink:
    path: /buildDocLinks/{appid}
    defaults: { _controller: DocovaBundle:AppBuilder:buildDocLinks }
docova_loadlayout:
    path: /wLoadLayout/{layoutname}
    defaults: { _controller: DocovaBundle:AppBuilder:loadLayout }
docova_widgetbuilder:
    path: /AppWidgetBuilder/{widgetid}
    defaults: { _controller: DocovaBundle:AppBuilder:appWidgetBuilder, widgetid : null }


docova_viewoutlines:
    path: /wViewOutline/{outline}
    defaults: { _controller: DocovaBundle:Applications:viewOutline }
docova_viewpage:
    path: /wViewPage/{page}
    defaults: { _controller: DocovaBundle:Applications:viewAppPage, page : null }
docova_viewframe:
    path: /wViewFrame
    defaults: { _controller: DocovaBundle:Applications:viewFrame }
docova_tabtableview:
    path: /TabbedTableView
    defaults: { _controller: DocovaBundle:Applications:tabbedTableView }
docova_appviewall:
    path: /AppViewsAll/{viewname}
    defaults: { _controller: DocovaBundle:Applications:appViewsAll }
docova_openform:
    path: /wViewForm/{formname}/{docid}
    defaults: { _controller: DocovaBundle:Applications:appOpenForm, formname : null, docid : null }
docova_readappdocument:
    path: /wReadDocument/{docid}
    defaults: { _controller: DocovaBundle:Applications:readDocument, docid : null }
docova_openprofile:
    path: /wViewProfile/{profile}
    defaults: { _controller: DocovaBundle:Applications:appOpenProfile }
docova_submitforrefresh:
    path: /SubmitForRefresh/{formname}/{docid}
    defaults: { _controller: DocovaBundle:Applications:submitRefresh, docid : null  }
    requirements:
       _method: post
docova_loadappview:
    path: /wLoadView/{viewname}/{appid}
    defaults: { _controller: DocovaBundle:Applications:appLoadView }
docova_loadappviewmobile:
    path: /wLoadViewMobile/{viewname}/{appid}
    defaults: { _controller: DocovaBundle:Applications:appLoadViewMobile, viewname : null, appid : null}    
docova_loadapptoolbar:
    path: /wLoadAppToolbar/{appid}/{elementname}
    defaults: { _controller: DocovaBundle:Applications:appLoadToolbar, appid : null, elementname : null}    
docova_getchartdata:
    path: /getchartdata
    defaults: { _controller: DocovaBundle:Applications:getChartData }
    requirements:
       _method: post
docova_runagent:
    path: /runagent/{agent}
    defaults: { _controller: DocovaBundle:Applications:runAppAgent }
docova_pluginservices:
    path: /PlugInServices
    defaults: { _controller: DocovaBundle:Applications:plugInServices }
# to load dynaic form scripts
docova_load_script:
    path: /LoadJScript/{appid}/{scriptname}
    defaults: { _controller: DocovaBundle:Applications:loadJScript }
docova_dlgPicklist:
    path: /dlgPickList
    defaults: { _controller: DocovaBundle:Applications:popupPickList }
docova_embeddedimages:
    path: /embeddedImage/{docid}/{imagename}
    defaults: { _controller: DocovaBundle:Applications:embeddedImageLoad }
docova_embeddedimages2:
    path: /embeddedImage/{docid}
    defaults: { _controller: DocovaBundle:Applications:embeddedImageLoad }    
docova_applicationservices:
    path: /ApplicationServices
    defaults: { _controller: DocovaBundle:Applications:appServices }
    requirements:
        _method: post
docova_getmenudata:
    path: /getmenudata}
    defaults: { _controller: DocovaBundle:Applications:getMenuData }

docova_homepage:
    path: /
    defaults: { _controller: DocovaBundle:Default:index }
docova_mainpage:
    path: /HomeFrame
    defaults: { _controller: DocovaBundle:Default:openMainPage }
docova_defaultpage:
    path: /HomePage
    defaults: { _controller: DocovaBundle:Default:homepage }
docova_hometop:
    path: /HomeTop
    defaults: { _controller: DocovaBundle:Default:homeTop }
docova_dashboard:
    path: /DocovaDashboard
    defaults: { _controller: DocovaBundle:Default:dashboard }
docova_userpanel:
    path: /UserPanelTabs
    defaults: { _controller: DocovaBundle:Default:userPanelTabs }
docova_mydocova:
    path: /MyDocova
    defaults: { _controller: DocovaBundle:Default:myDocova }
docova_libraries:
    path: /wLibrariesFrame
    defaults: { _controller: DocovaBundle:Default:librariesFrame }
docova_dlglibraryproperties:
     path: /dlgLibraryProperties
     defaults: { _controller: DocovaBundle:Default:libraryProperties }
docova_tabbedtable:
    path: /TabbedTable
    defaults: { _controller: DocovaBundle:Default:showTabbedTable }
docova_blankcontent:
    path: /BlankContent
    defaults: { _controller: DocovaBundle:Default:blankContent }    
docova_leftnav:
    path: /leftNav
    defaults: { _controller: DocovaBundle:Default:leftNav }
docova_librarywelcome:
    path: /wLibraryWelcome
    defaults: { _controller: DocovaBundle:Default:libraryWelcome }
docova_blankfolderselected:
    path: /BlankFolderSelected
    defaults: { _controller: DocovaBundle:Default:blankFolderSelected }
docova_redirectto:
    path: /wRedirect
    defaults: { _controller: DocovaBundle:Default:redirectTo }
docova_workflowtasks:
    path: /WorkflowTasks
    defaults: { _controller: DocovaBundle:Default:getWorkflowTasks }
docova_tasks:
    path: /Tasks
    defaults: { _controller: DocovaBundle:Default:getTasks }
docova_watchlists:
    path: /Watchlists
    defaults: { _controller: DocovaBundle:Default:getWatchLists }
docova_search:
    path: /wSearch
    defaults: { _controller: DocovaBundle:Default:search }
docova_searchFrame:
    path: /wSearchFrame
    defaults: { _controller: DocovaBundle:Default:searchFrame }
docova_TabbedTable:
    path: /TabbedTableSearch
    defaults: { _controller: DocovaBundle:Default:tabbedTableSearch }
docova_blankfolder:
    path: /BlankFolder
    defaults: { _controller: DocovaBundle:Default:blankFolderSelected }
docova_uploaderscript:
    path: /loaderUploaderDocSection.js
    defaults: { _controller: DocovaBundle:Default:getUploaderScript }
docova_uploaderintlscript:
    path: /loaderUploaderIntlDocSection.js
    defaults: { _controller: DocovaBundle:Default:getUploaderIntlScript }
docova_loaderFolderControlRelatedDoc:
    path: /loaderFolderControlRelatedDoc.js
    defaults: { _controller: DocovaBundle:Default:getFolderControlRelatedDoc }
docova_homeframe:
    path: /wHomeFrame
    defaults: { _controller: DocovaBundle:Default:openHomeFrame }
docova_homeframe2:
    path: /wHomeFrame2
    defaults: { _controller: DocovaBundle:Default:openSecondFrame }
docova_keepalive:
    path: /LoginConfirmation.xml
    defaults: { _controller: DocovaBundle:Default:loginConfirmation }
docova_dashboardservices:
    path: /DashboardServices
    defaults: { _controller: DocovaBundle:Default:dashboardServices }
    requirements:
       _method: post
docova_dlgsharepanel:
    path: /_dlgSharePanel
    defaults: { _controller: DocovaBundle:Default:showDlgSharePanel }
docova_dlgcreatepanel:
    path: /_dlgCreatePanel
    defaults: { _controller: DocovaBundle:Default:showDlgCreatePanel }
docova_dlgchangepanel:
    path: /_dlgChangePanel
    defaults: { _controller: DocovaBundle:Default:showDlgChangePanel }
docova_dlgaddpanel:
    path: /_dlgAddPanel
    defaults: { _controller: DocovaBundle:Default:showDlgAddPanel }
docova_namespicker:
    path: /_dlgSelectNamesMulti
    defaults: { _controller: DocovaBundle:Default:getNamesList }
docova_selectwidget:
    path: /_dlgSelectWidget
    defaults: { _controller: DocovaBundle:Default:showDlgSelectWidget }
docova_removesharedpanel:
    path: /_dlgRemoveDeleteSharedPanel
    defaults: { _controller: DocovaBundle:Default:showDlgRemoveSharedPanel }
docova_panelmanaged:
    path: /luPanelManaged
    defaults: { _controller: DocovaBundle:Default:getManagedPanels }
docova_panelsbyid:
    path: /luPanelByUNID
    defaults: { _controller: DocovaBundle:Default:getPanelsListById }
docova_publicpanels:
    path: /luPanelAddList
    defaults: { _controller: DocovaBundle:Default:getPublicPanels }
docova_widgetsdesc:
    path: /luWidgetsByKey
    defaults: { _controller: DocovaBundle:Default:getWidgetByKey }
docova_dlesystemconfig:
    path: /DLESystemConfiguration
    defaults: { _controller: DocovaBundle:Default:getDLESystemConfiguration }
docova_dlecreateinstance:
    path: /DLECreateInstance
    defaults: { _controller: DocovaBundle:Default:getDLECreateInstance }
docova_licenseguide:
    path: /DocovaLicenseInstructions
    defaults: { _controller: DocovaBundle:Default:docovaLicenseInstaructions }
docova_foldercontroller:
    path: /loaderFolderControl.js
    defaults: { _controller: DocovaBundle:Default:loadFolderControlJS }
docova_dlextensions:
    path: /loaderDLExtensions.js
    defaults: { _controller: DocovaBundle:Default:loadDLExtensionsJS }
docova_xViewData:
    path: /xViewData.xml
    defaults: { _controller: DocovaBundle:Default:getXMLViewData }
docova_reldoclinks:
    path: /RelDocLinks.xml
    defaults: { _controller: DocovaBundle:Default:getRelatedDocLinks }
docova_xactivitydata:
    path: /activitydata.xml
    defaults: { _controller: DocovaBundle:Default:getActivityData }
docova_activitydocdata:
    path: /activitydocdata.xml
    defaults: { _controller: DocovaBundle:Default:getActivityDocData }
docova_colorpicker:
    path: /colorPicker.html
    defaults: { _controller: DocovaBundle:Default:showColorPicker }
docova_aboutus:
    path: /dlgAboutDocova
    defaults: { _controller: DocovaBundle:Default:openDlgAboutDocova }


docova_libraryaccess:
    path: /xLibraryAccess.xml
    defaults: { _controller: DocovaBundle:User:getLibraryAccess }
    requirements:
        _method: get
docova_userlibraries:
    path: /GetUserLibraries
    defaults: { _controller: DocovaBundle:User:getUserLibraries }
docova_xFolderAccess:
    path: /xFolderAccess.xml
    defaults: { _controller: DocovaBundle:User:folderAccess }
docova_subscriptions:
    path: /dlgSubscriptions
    defaults: { _controller: DocovaBundle:User:popupSubscriptions }
docova_availablelibraries:
    path: /getavailablelibraries.xml
    defaults: { _controller: DocovaBundle:User:getAvailableLibraries }
docova_selectedlibrary:
    path: /LibrarySelected.xsl
    defaults: { _controller: DocovaBundle:User:getLibrarySelectedXSL }
docova_usersubscriptions:
    path: /ReadUserSubscription
    defaults: { _controller: DocovaBundle:User:getUserSubscriptions }
docova_usernamelookup:
    path: /dlgNameLookup
    defaults: { _controller: DocovaBundle:User:getUsernamesList }

docova_usernamelookup_json:
    path: /getSearchNames
    defaults: { _controller: DocovaBundle:User:getUsernamesListJSON }

docova_usernamelookup_xml:
    path: /getNabXml
    defaults: { _controller: DocovaBundle:User:getUsernamesListXml }
docova_subscriptionlist:
    path: /userLibraries/{output}
    defaults: { _controller: DocovaBundle:User:getSubscribedLibraries }


docova_getfoldersdoe:
    path: /GetFolders
    defaults: { _controller: DocovaBundle:Folder:getFoldersDoe }
docova_getfolders:
    path: /GetFolders.json
    defaults: { _controller: DocovaBundle:Folder:getFolders }
docova_getpartialfolders:
    path: /FolderDataByParentID.json
    defaults: { _controller: DocovaBundle:Folder:getPartialFolders }
docova_folderservices:
    path: /FolderServices
    defaults: { _controller: DocovaBundle:Folder:folderServices }
docova_allbydockey:
    path: /luAllByDocKey/{key}
    defaults: { _controller: DocovaBundle:Folder:allByDocKey }
docova_foldercontentdoe:
    path: /wfolder2/{key}
    defaults: { _controller: DocovaBundle:Folder:getwFolderContentDoe }
docova_documentbyfolder:
    path: /ludocumentsbyfolder
    defaults: { _controller: DocovaBundle:Folder:docsByFolder }
docova_documentsbyfoldercount:
    path: /getEntriesCount
    defaults: { _controller: DocovaBundle:Folder:getDocumentsByFolderCount }
docova_folderproperties:
    path: /dlgFolderProperties
    defaults: { _controller: DocovaBundle:Folder:getFolderProperties }
docova_folderlogs:
    path: /luLogsByFullKeyWeb/{folder}
    defaults: { _controller: DocovaBundle:Folder:getFolderLogs }
docova_folderinfo:
    path: /wFolderInfo
    defaults: { _controller: DocovaBundle:Folder:getFolderInfo }
docova_folderselect:
    path: /dlgFolderSelect
    defaults: { _controller: DocovaBundle:Folder:openFolderSelect }
docova_recyclebinview:
    path: /readrecycledataview.xml
    defaults: { _controller: DocovaBundle:Folder:getRecycleBinDataView }
docova_getfolderfiles:
    path: /GetFolderFiles
    defaults: { _controller: DocovaBundle:Folder:getFolderFiles }
docova_xfolderproperties:
    path: /xFolderProperties.xml
    defaults: { _controller: DocovaBundle:Folder:getDOEFolderProperties }
docova_createrootfolder:
    path: /cancreaterootfolder/{library}
    defaults: { _controller: DocovaBundle:Folder:canCreateRootFolder }
docova_loaddocsinfolder:
    path: /DocumentDataByParentID.json
    defaults: { _controller: DocovaBundle:Folder:getDocsInFolder }
docova_dlgfolderimport:
    path: /dlgFolderImport
    defaults: { _controller: DocovaBundle:Folder:openFolderImportDialog }

docova_library_members:
    path: /LibraryMembers.xml
    defaults: { _controller: DocovaBundle:Library:getLibraryMembers }
docova_doctypeinfo:
    path: /LibraryServices
    defaults: { _controller: DocovaBundle:Library:getDocTypeInfo }
    requirements:
        _method: post
docova_libactivity:
    path: /LibraryActivity
    defaults: { _controller: DocovaBundle:Library:getLibraryActivity }

docova_popupdoctypes:
    path: /dlgSelectDocType/{xmobile}
    defaults: { _controller: DocovaBundle:Document:showDocType, xmobile : null }
    requirements:
        _method: get
docova_documentpage:
    path: /Document/{mobile}
    defaults: { _controller: DocovaBundle:Document:createDocument, mobile : null }
docova_readdocument:
    path: /ReadDocument/{doc_id}
    defaults: { _controller: DocovaBundle:Document:readDocument, doc_id : null }
docova_documentservices:
    path: /DocumentServices
    defaults: { _controller: DocovaBundle:Document:documentServices }
    requirements:
        _method: post
docova_documentservicesext:
    path: /DocumentServicesExt
    defaults: { _controller: DocovaBundle:DocumentServices:documentServicesExt }
    requirements:
       _method: post
docova_progressbar:
    path: /dlgSubmitProgress
    defaults: { _controller: DocovaBundle:DocumentServices:openProgressBar }
docova_editdocument:
    path: /EditDocument/{doc_id}
    defaults: { _controller: DocovaBundle:Document:editDocument, doc_id : null }
docova_filetemplates:
    path: /luFileTemplatesByKey/{file_id}/{file_name}
    defaults: { _controller: DocovaBundle:Document:openFileTemplate }
docova_opendocfile:
    path: /openDocFile/{file_name}
    defaults: { _controller: DocovaBundle:Document:openDocFile }
    requirements:
        _method: get
docova_viewservices:
    path: /ViewServices
    defaults: { _controller: DocovaBundle:Document:viewServices }
    requirements:
        _method: post
docova_documentlogs:
    path: /luDocLogsByFullKeyWeb/{document}/{filter}
    defaults: { _controller: DocovaBundle:Document:getDocumentLogs }
docova_workflowsevices:
    path: /WorkflowServices
    defaults: { _controller: DocovaBundle:Document:WorkflowServices }
docova_workflowcomment:
    path: /dlgWorkflowComment
    defaults: { _controller: DocovaBundle:Document:workflowComment }
docova_documentcomments:
    path: /documentcomments.xml
    defaults: { _controller: DocovaBundle:Document:getDocumentComments }
docova_advancedcomments:
    path: /dlgAdvComment
    defaults: { _controller: DocovaBundle:Document:advancedCommentDialog }
docova_workflowselectstep:
    path: /dlgWorkflowSelectStep
    defaults: { _controller: DocovaBundle:Document:workflowSelectStep }
docova_wfselectprocess:
    path: /dlgWorkflowSelectProcess
    defaults: { _controller: DocovaBundle:Document:showWfSelectProcess }
docova_relateddocselect:
    path: /dlgRelatedDocSelect
    defaults: { _controller: DocovaBundle:Document:opendlgRelatedDocSelect }
docova_folderdocuments:
    path: /wFolderDocuments
    defaults: { _controller: DocovaBundle:Document:getFolderDocuments }
docova_createtmpxml:
    path: /CreateTempXML
    defaults: { _controller: DocovaBundle:Document:createTempXML }
docova_columnproperties:
    path: /dlgViewColumnProperties
    defaults: { _controller: DocovaBundle:Document:showViewColumnProperties }
docova_saveperspective:
    path: /dlgSavePerspective
    defaults: { _controller: DocovaBundle:Document:savePerspective }
docova_facetmapbyidxml:
    path: /facetMapFieldsByFacetID.xml
    defaults: { _controller: DocovaBundle:Document:getFacetMapsByID }
docova_facetmapbyperspective:
    path: /facetMapFieldsByPerspectiveID.xml
    defaults: { _controller: DocovaBundle:Document:getFacetMapByPerspective }
docova_perspective:
    path: /perspectives.xml
    defaults: { _controller: DocovaBundle:Document:getPerspectivesXML }
docova_deleteperspective:
    path: /dlgDeletePerspective
    defaults: { _controller: DocovaBundle:Document:deletePerspective }
docova_dataservices:
    path: /UserDataServices
    defaults: { _controller: DocovaBundle:Document:getUserDataServices }
    requirements:
       _method: post
docova_simplefilesharing:
    path: /SimpleFileSharingServices
    defaults: { _controller: DocovaBundle:Document:simpleFileSharing }
    requirements:
       _method: post
docova_userwatchlists:
    path: /xUserWatchlists.xml
    defaults: { _controller: DocovaBundle:Document:getUserWatchlists }
docvoa_embeddedviews:
    path: /embeddedView.xml
    defaults: { _controller: DocovaBundle:Document:getEmbeddedView }
docova_fileimport:
    path: /dlgFileImport
    defaults: { _controller: DocovaBundle:Document:openFileImport }
docova_fileexport:
    path: /dlgFileExport
    defaults: { _controller: DocovaBundle:Document:openFileExport }
docova_importfromfile:
    path: /dlgImportFromFile
    defaults: { _controller: DocovaBundle:Document:openImportFromFile }    
docova_selectforcompare:
    path: /dlgSelectDocsForCompare
    defaults: { _controller: DocovaBundle:Document:openSelectForCompare }
docova_documentproperties:
    path: /dlgDocumentProperties
    defaults: { _controller: DocovaBundle:Document:openDocumentProperties }
docova_scantype:
    path: /dlgSelectScanType
    defaults: { _controller: DocovaBundle:Document:popupSelectScanType }
docova_customsearch:
    path: /dlgCustomSearch
    defaults: { _controller: DocovaBundle:Document:popupCustomSearch }
docova_dlgactivity:
    path: /dlgActivity
    defaults: { _controller: DocovaBundle:Document:popupActivity }
docova_dlgopenactivity:
    path: /openActivity/{activity}
    defaults: { _controller: DocovaBundle:Document:openActivityDialog }
docova_luactivity:
    path: /luActivities
    defaults: { _controller: DocovaBundle:Document:lookupActivity }
docova_editactivity:
    path: /EditActivity/{activity}
    defaults: { _controller: DocovaBundle:Document:editActivity }
docova_versionlog:
    path: /documentreleasedata.xml
    defaults: { _controller: DocovaBundle:Document:getDataVersionLog }
docova_releasedialog:
    path: /dlgWorkflowDocRelease
    defaults: { _controller: DocovaBundle:Document:popupReleaseDialog }
docova_retractdialog:
    path: /dlgRetractRelease
    defaults: { _controller: DocovaBundle:Document:popupRetractDialog }
docova_wfrequestdialog:
    path: /dlgWorkflowInfoRequest
    defaults: { _controller: DocovaBundle:Document:popupWFRequestInfoDialog }
docova_archiveddocuments:
    path: /dlgFolderArchive
    defaults: { _controller: DocovaBundle:Document:showArchivedDocuments }
docova_folder_archivedocs:
    path: /DocumentsByFolderBasic.xml
    defaults: { _controller: DocovaBundle:Document:getFolderArchivedDocument }
docova_discussion:
    path: /DiscussionTopic
    defaults: { _controller: DocovaBundle:Document:discussionTopic }
docova_opentopic:
    path: /OpenTopic/{topic}
    defaults: { _controller: DocovaBundle:Document:openTopic }
docova_discussionthread:
    path: /discussionthread.xsl
    defaults: { _controller: DocovaBundle:Document:getDiscussionThread }
docova_discussionparentxml:
    path: /discussionbyparent.xml
    defaults: { _controller: DocovaBundle:Document:getDiscussionByParent }
docova_checkinfilesdialog:
    path: /dlgCheckInFiles
    defaults: { _controller: DocovaBundle:Document:showCheckInFilesDialog }
docova_xdocumentproperties:
    path: /xDocumentProperties.xml
    defaults: { _controller: DocovaBundle:Document:getDocumentPropertiesXML }
docova_checkinupload:
    path: /CheckInFile/{document}
    defaults: { _controller: DocovaBundle:Document:checkInFileAndUpload }
    requirements:
       _method: post
docova_relatedemail:
    path: /RelatedEmail/{mail}
    defaults: { _controller: DocovaBundle:Document:openRelatedEmail }
docova_linksdialog:
    path: /dlgGetRelatedLink
    defaults: { _controller: DocovaBundle:Document:showRelatedLinksDialog }
docova_editedattachments:
    path: /dlgEditedAttachments
    defaults: { _controller: DocovaBundle:Document:popupEditAttachments }
docova_selectattachments:
    path: /dlgSelectAttachments
    defaults: { _controller: DocovaBundle:Document:showSelectAttachment }
docova_dlgdelegate:
    path: /dlgDelegate/{delegateid}
    defaults: { _controller: DocovaBundle:Document:popupDlgDelegate, delegateid: null }

docova_accessservice:
    path: /AccessServices
    defaults: { _controller: DocovaBundle:Access:getAccessService }
    requirements:
       _method: post

docova_mailacquire:
    path: /dlgMailAcquire
    defaults: { _controller: DocovaBundle:Mail:openMailAcquire }
docova_mailacquiremessages:
    path: /dlgMailAcquireMessages
    defaults: { _controller: DocovaBundle:Mail:openMailAcquireMessages }
docova_outlookmailacquire:
    path: /dlgOutlookMailAcquire
    defaults: { _controller: DocovaBundle:Mail:openOutlookMailAcquire }
docova_outlookacquiremessages:
    path: /dlgOutlookMailAcquireMessages
    defaults: { _controller: DocovaBundle:Mail:openOutlookAcquireMessages }
docova_encryptpass:
    path: /encryptPass
    defaults: { _controller: DocovaBundle:Mail:encryptPass }
docova_mailservices:
    path: /MailServices
    defaults: { _controller: DocovaBundle:Mail:mailServices }
docova_sendlinkmessage:
    path: /dlgSendLinkMessage
    defaults: { _controller: DocovaBundle:Mail:sendLinkMessage }
docova_messagingservices:
    path: /MessagingServices
    defaults: { _controller: DocovaBundle:Mail:messagingServices }
docova_forwarddocument:
    path: /dlgForwardDocument
    defaults: { _controller: DocovaBundle:Mail:openForwardDocumentDialog }
docova_fieldvalue:
    path: /getBody/{document}
    defaults: { _controller: DocovaBundle:Mail:getDocumentBody }


docova_designer:
    path: /wDesignerFrame
    defaults: { _controller: DocovaBundle:Designer:openDesigner }
docova_designer_leftnav:
    path: /wDesignerMenu
    defaults: { _controller: DocovaBundle:Designer:designerLeftNav }
docova_designer_init:
    path: /wDesignerInit
    defaults: { _controller: DocovaBundle:Designer:designerInit }
docova_designer_subform:
    path: /wDesignerSubform
    defaults: { _controller: DocovaBundle:Designer:subformDesigner }
docova_designer_editsubform:
    path: /editSubform
    defaults: { _controller: DocovaBundle:Designer:editSubform }
docova_submit_subform:
    path: /saveDesignedSubform
    defaults: { _controller: DocovaBundle:Designer:saveDesignedSubform }
docova_save_updates:
    path: /saveSubformUpdates/{subform}
    defaults: { _controller: DocovaBundle:Designer:saveEditedSubform }
docova_delete_subform:
    path: /deleteSuform
    defaults: { _controller: DocovaBundle:Designer:deleteSubform }
    requirements:
       _method: post
docova_aceeditor:
    path: /aceeditor/{mode}
    defaults: { _controller: DocovaBundle:Designer:openAceEditor }
docova_designservice:
    path: /DesignServices
    defaults: { _controller: DocovaBundle:Designer:designServices }
    requirements:
       _method: post

docova_pushtoserver:
    path: /PushService
    defaults: { _controller: DocovaBundle:Deployment:pushAppToServer }
    requirements:
       _method: post
docova_appupdatestatus:
    path: /ServerUpdateStatus
    defaults: { _controller: DocovaBundle:Deployment:getServerUpdateStatus }
    requirements:
       _method: post
docova_deployservices:
    path: /DeployServices
    defaults: { _controller: DocovaBundle:Deployment:deployServices }
    requirements:
       _method: post


docova_login:
    path: /login
    defaults: { _controller: DocovaBundle:Security:login }
docova_login_check:
    path: /login_check
docova_logout:
    path: /logout
docova_logout_redirect:
    path: /loggedOut
    defaults: { _controller: DocovaBundle:Security:loggedOut }
docova_mobile_auth:
    path: /auth/mobile
    defaults: { _controller: DocovaBundle:Security:mobileAuthorize }
docova_mobile_login:
    path: /auth/mobile/login
    defaults: { _controller: DocovaBundle:Security:login }
docova_mobile_login_check:
    path: /auth/mobile/login_check
    defaults: { _controller: DocovaBundle:Security:loginCheck }
docova_oauth:
    path: /oauth
    defaults: { _controller: DocovaBundle:Security:oauthLogin }



docova_scriptservices:
    path: /customServices/{scriptfilename}
    defaults: { _controller: DocovaBundle:CustomServices:loadScript }


#-----------------------------------------------------------------------------------------    
#                                Mobile mappings   
#-----------------------------------------------------------------------------------------
# docova lite
docova_mobile:
    path: /mobile.htm
    defaults: { _controller: DocovaBundle:Mobile:mobile }
# mobile app starter page    
docova_mobile_app:
    path: /mobileApp.htm
    defaults: { _controller: DocovaBundle:Mobile:mobileApp }   
docova_mobile_workflow_screen_redirect:
    path: /mobileWorkflowScreenRedirect.htm
    defaults: { _controller: DocovaBundle:Mobile:mobileWorkflowScreenRedirect }   
        
# used by mobile app workflow
docova_mobile_data_services:
    path: /MobileDataServices.xml
    defaults: { _controller: DocovaBundle:Mobile:mobileDataServices }      

# mapping for login from Android/iOS App
docova_android_login_xml:
    path: /mobileAuthenticateUser.xml
    defaults: { _controller: DocovaBundle:Mobile:loginXml }       
#-----------------------------------------------------------------------------------------    
#                                DOCOVA Admin Page Mappings   
#-----------------------------------------------------------------------------------------
docova_admin:
    path: /Admin
    defaults: { _controller: DocovaBundle:Admin:admin }
docova_admin_leftNav:
    path: /AdminLeftNav
    defaults: { _controller: DocovaBundle:Admin:adminLeftNav }
docova_admin_wAdminContent:
    path: /wAdminContent
    defaults: { _controller: DocovaBundle:Admin:wAdminContent } 
docova_admin_wAdminBlankContent:
    path: /wAdminBlankContent
    defaults: { _controller: DocovaBundle:Admin:wAdminBlankContent } 
docova_admin_profile:
    path: /AdminProfile
    defaults: { _controller: DocovaBundle:Admin:wAdminProfile }
docova_admin_workflowdefinition:
    path: /WorkflowDefinition
    defaults: { _controller: DocovaBundle:Admin:workflowDefinition }
docova_admin_workflowitem:
    path: /WorkflowDefinitionItem
    defaults: { _controller: DocovaBundle:Admin:workflowDefinitionItem }
docova_admin_reviewpolicy:
    path: /ReviewPolicy
    defaults: { _controller: DocovaBundle:Admin:createReviewPolicy }
docova_admin_systemmessage:
    path: /SystemMessage
    defaults: { _controller: DocovaBundle:Admin:systemMessage }
docova_templatesbytype:
    path: /luFileTemplatesByType
    defaults: { _controller: DocovaBundle:Admin:getFileTemplatesByType }
docova_admin_userprofile:
    path: /UserProfile
    defaults: { _controller: DocovaBundle:Admin:createUserProfile }
docova_admin_group:
    path: /Group
    defaults: { _controller: DocovaBundle:Admin:createGroup }
docova_admin_groupservices:
    path: /GroupServices
    defaults: { _controller: DocovaBundle:Admin:groupServices }
docova_importgroups:
    path: /importLDAPGroup
    defaults: { _controller: DocovaBundle:Admin:popupImportGroups }
docova_grouplookup:
    path: /luAdGroups
    defaults: { _controller: DocovaBundle:Admin:lookupGroups }
docova_admin_userprofile_check:
    path: /CheckUserProfile
    defaults: { _controller: DocovaBundle:Admin:userProfileCheck }
        
      
#-----------------  mappings to read/edit documents-----------------------------------------
# read document
docova_admin_readdocument:
    path: /adminReadDocument/{view_name}/{doc_id}
    defaults: { _controller: DocovaBundle:Admin:readDocument }
# edit document   
docova_admin_editdocument:
    path: /adminEditDocument/{view_name}/{doc_id}
    defaults: { _controller: DocovaBundle:Admin:editDocument }
docova_admin_usersubscription:
    path: /userSubscription.xml
    defaults: { _controller: DocovaBundle:Admin:getUserSubscription }
docova_createmember:
    path: /dlgCreateMember
    defaults: { _controller: DocovaBundle:Admin:openCreateMemberDlg }
#--------------------- Mapping to Create web admin documents -----------
# to create library
docova_admin_library:
    path: /Library
    defaults: { _controller: DocovaBundle:Admin:library }
    
# to create file template    
docova_admin_fileTemplate:
    path: /FileTemplate
    defaults: { _controller: DocovaBundle:Admin:fileTemplate }

# to create View Column    
docova_admin_viewColumn:
    path: /ViewColumn
    defaults: { _controller: DocovaBundle:Admin:viewColumn }    

# Document Types
docova_admin_documentType:
    path: /DocumentType
    defaults: { _controller: DocovaBundle:Admin:documentType }  
    
docova_admin_archivepolicy:
    path: /ArchivingPolicy
    defaults: { _controller: DocovaBundle:Admin:createArchivePolicy }
# HTML Resources
docova_admin_htmlResources:
    path: /HTMLResource
    defaults: { _controller: DocovaBundle:Admin:createHtmlResource }
    
# HTML Resources
docova_admin_customSearchField:
    path: /CustomSearchField
    defaults: { _controller: DocovaBundle:Admin:createCustomSearchField }
 
# Activity
docova_admin_activity:
    path: /Activity
    defaults: { _controller: DocovaBundle:Admin:createActivity }
    
#########################################################################
docova_admin_toptabs:
    path: /adminTopTabs
    defaults: { _controller: DocovaBundle:Admin:showTopTabs }

#--------------------------- ALL FANCY PAGES -------------------------------
docova_systemmessagesadmin:
    path: /SystemMessages
    defaults: { _controller: DocovaBundle:Admin:newSystemMessages }
docova_admincontent:
    path: /wFancyAdminContent
    defaults: { _controller: DocovaBundle:Admin:showAdminContent }
docova_adminwfstep:
    path: /WorkflowStep/{step}
    defaults: { _controller: DocovaBundle:Admin:workflowStep }
docova_workflowitemread:
    path: /WorkflowStepRead
    defaults: { _controller: DocovaBundle:Admin:workflowRead }
#--------------------------- ALL FANCY PAGES -------------------------------
    
#-----------------------------------------------------------------------------------------    
#                                DOCOVA Admin Data Mappings   
#-----------------------------------------------------------------------------------------

# this get xml data for clicked left navigation item e.g Libraries, Document Types
docova_admin_wAdminContent_xml_data:
    path: /OpenFolderView.xml
    defaults: { _controller: DocovaBundle:Admin:openFolderView }    

docova_admin_viewservices:
    path: /AdminViewServices
    defaults: { _controller: DocovaBundle:Admin:adminViewServices }  
 
docova_admin_filetemplate:
    path: /FileTemplate/{file_name}
    defaults: { _controller: DocovaBundle:Admin:openAdminFileTemplate }

docova_admin_html_resource_path:
    path: /HTMLResource/{file_name}
    defaults: { _controller: DocovaBundle:Document:openAdminHtmlResource }
 
#---------------------------- search mapping ------------------------
docova_search_lookup:
    path: /readfolderdataview.xml
    defaults: { _controller: DocovaBundle:Search:folderSearch }
docova_view_search:
    path: /searchview.xml
    defaults: { _controller: DocovaBundle:Search:viewSearch }    
docova_full_search:
    path: /search.xml
    defaults: { _controller: DocovaBundle:Search:fullSearch }
docova_dlgsearch:
    path: /dlgSaveSearch
    defaults: { _controller: DocovaBundle:Search:showSaveSearchDlg }
docova_lusavedsearches:
    path: /luSavedSearches
    defaults: { _controller: DocovaBundle:Search:lookUpSavedSearches }

# DOE alias for XML response
docova_getfolders1:
    path: /GetFolders
    defaults: { _controller: DocovaBundle:Folder:getFoldersXML }

# Public access resources
docova_public_access:
    path: /publicAccess
    defaults: { _controller: DocovaBundle:PublicAccess:publicAccess }
docova_public_access_se:
    path: /publicAccessSE
    defaults: { _controller: DocovaBundle:PublicAccess:publicAccessSE }
docova_public_access_admin:
    path: /PublicAccessAdmin
    defaults: { _controller: DocovaBundle:PublicAccess:publicAccessAdmin }
#Note this resource has moved
docova_publicaccesssettings:
    path: /dlgPublicAccessSettings
    defaults: { _controller: DocovaBundle:PublicAccess:opendPublicAccessSettings }

docova_resourcesbytype:
    path: /luFileResourcesByType
    defaults: { _controller: DocovaBundle:Admin:getFileResourcesByType }
# to create file resource
docova_admin_fileResource:
    path: /FileResource
    defaults: { _controller: DocovaBundle:Admin:fileResource }
docova_admin_fileresource:
    path: /FileResource/{file_name}
    defaults: { _controller: DocovaBundle:Admin:openAdminFileResource }
# to create data source    
docova_admin_dataSource:
    path: /DataSource
    defaults: { _controller: DocovaBundle:Admin:dataSource }
# to create data view   
docova_admin_dataView:
    path: /DataView
    defaults: { _controller: DocovaBundle:Admin:dataView }
# to test debugging of parser
docova_test_parser:
    path: /ScriptParser
    defaults: { _controller: DocovaBundle:Admin:scriptParser }
