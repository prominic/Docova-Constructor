<!DOCTYPE html>
<html>
<head>
<TITLE></TITLE>
<META charset="utf-8">
<META content="0" http-equiv="expires">
<META content="0" http-equiv="cache-control">
<META content="no-cache" http-equiv="Pragma">
<style type='text/css'>
body {
	margin: 0px;
	padding: 0px;
	border: 0px;
	overflow: hidden;
}
</style>
<link rel="stylesheet" href="{{ asset('bundles/docova/font-awesome/css/all.min.css') }}" type="text/css" />
<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script type="text/javascript">
var redirect = false;
var rows = 48;
var info = {
	"isAppSettingsExist" : "",
	"isAppSettingsUnidExist" : "",
	"systemKey" : "{{ settings.getSystemKey }}",
	"redirectMobileReader" : "No",
	"browserType" : "Chrome",
	"mobileUrl" : "{{ path('docova_mobile') }}",
    "appSettingsUrl" : "{{ path('docova_homepage') }}AdminProfileInitialSetup?StartUpPage=Yes",
    "gotoReaderUrl" : "{{ path('docova_mobile') }}",
    "licenseIssueUrl" : "{{ path('docova_licenseguide') }}?OpenPage",
    "finalUrl" : "{{ path('docova_mainpage') }}",
	"expired" : "{{ settings.getExpiryDate ? (settings.getExpiryDate.diff(date('now')).format('%R%a')|number_format >= 0 ? 'true' : 0) : 0 }}",
	"license" : "{{ settings.getLicenseCode }}",
	"mode" : "edit"
};
function getinfovar(){
	return info;
}

function getElementOffset(element, property) {
	//Calculate the actual property name
	
	if (property == "offsetLeft" || property == "offsetTop") {
		var actualOffset = element[property];
		var current = element.parentElement;

		//Look up the node tree to add up all the offset value
		while (current != null) {
			actualOffset += current[property];
			current = current.parentElement;
		}

		return actualOffset;
	} else if (property == "offsetHeight" || property == "offsetWidth") {
		return element[property];
	}

	return false;
}

function recurseFrameset( infrmst, prev)
{
	var framehtml = "";

	var totalwidth = $(window).width();
	var totalheight = $(window).height();
	$(infrmst).children().each ( function ( index, element ) 
	{
		if ( this.nodeName == "FRAME" ) 
		{
			
				var total = $(this).parent().children().length;
				var isrows = $(this).parent().attr("rows") && $(this).parent().attr("rows") != "" ? true : false;
				var iscolumns = $(this).parent().attr("cols") && $(this).parent().attr("cols") != "" ? true : false;
				var frmst = $(this).parent();
				

				var frameheight = Math.round ((this.clientHeight/ totalheight )* rows);
				var framewidth = Math.round ((this.clientWidth/ totalwidth )* rows);

				var fx = frmst.attr("fx");
				var fy = frmst.attr("fy");
				var fwidth = frmst.attr('fwidth');
				var fheight = frmst.attr("fheight");


			

				if ( index == 0)
				{
					var framex = getElementOffset(this,"offsetLeft");
					if ( framex > 0 )	
					{
						framex = Math.round(( framex/totalwidth ) * rows );
						
					}
					var framey=  getElementOffset(this,"offsetTop");
					if ( framey > 0 )	
					{

						framey = Math.round(( framey/totalheight ) * rows );
					
					}

					
					
					

				}else if ( index +1 == total ) //last column
				{

					if ( isrows ){
						framex = fx
						framey = parseInt(fy) + parseInt(fheight);
						fwidth =  framewidth;
						frameheight =  rows - framey;
					}else {
						framex = parseInt(fx) + parseInt(fwidth);
						framey = fy;
						framewidth =  rows- framex;
						fheight =  frameheight;
					}


				}else
				{

					if ( isrows ){
						framex = fx
						framey = parseInt(fy) + parseInt(fheight);
						fwidth =  framewidth;
						fheight =  frameheight;
					}else {
						framex = parseInt(fx) + parseInt(fwidth);
						framey = fy;
						fwidth =  framewidth;
						fheight =  frameheight;
					}

					



				}

				frmst.attr("fx", framex);
				frmst.attr("fy", framey);
				frmst.attr('fwidth', framewidth);
				frmst.attr('fheight', frameheight);
				
				frmst.parent().each ( function () {
					$(this).attr("fx", framex);
					$(this).attr("fy", framey);
					$(this).attr('fwidth', framewidth);
					$(this).attr('fheight', frameheight);
					
				});
				

				framehtml += '<div id="' + $(this).attr("id") + '" class="grid-stack-item selectable"';
				framehtml += $(this).attr("dnoresize") ? ' dnoresize="' + $(this).attr("dnoresize") + '" ' : "";
				framehtml += $(this).attr("target") ? ' target="' + $(this).attr("target") + '" ' : "";
				framehtml += $(this).attr("content") ? ' content="' + $(this).attr("content") + '" ' : "";
				framehtml += $(this).attr("dnoscroll") ? ' dnoscroll="' + $(this).attr("dnoscroll") + '" ' : "";
				framehtml += $(this).attr("contenttype") ? ' contenttype="' + $(this).attr("contenttype") + '" ' : "";
				framehtml += $(this).attr("dsrc") ? ' dsrc="' + $(this).attr("dsrc") + '" ' : "";

				framehtml += ' elem="panel" data-gs-x="' + framex + '" data-gs-y="' + framey + '" data-gs-width="'+ framewidth + '" data-gs-height="'+ frameheight +'"><div class="grid-stack-item-content"><iframe class="ifrmcontainer" src="' + $(this).attr("src") + '"></iframe></div></div>';
				
		}else{
			framehtml += recurseFrameset( this)
		}

		
	});
	return framehtml;
}



$(document).ready(function(){
	//Disable context menu
	$(document).on("contextmenu", function(e){ e.preventDefault(); e.stopPropagation();});
	var frmset = $("#dummy");


	var totalwidth = $(window).width();
	var totalheight = $(window).height();
	var framehtml = "";

	var prev = null;

	var html = "<div class='grid-stack'>";
	html += recurseFrameset(frmset.get(0));
	html += "</div>";
	
	window.parent.allDone(html);
	
	


});
</script>
</head>
<frameset id="dummy" rows="*" FRAMESPACING="2" FRAMEBORDER="1" BORDERCOLOR="#CFCFCF">
{% if layouthtml %}
	{{ layouthtml|raw }}
{% else %}
    {% if app.request.query.get('layout') == 'layout1' %}
		<frameset id="toplayout" COLS="20%, 80%">;
			<frame id='fraLeft'  border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
			<frame id='fraRight'  border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
		</frameset>
    {% elseif app.request.query.get('layout') == 'layout2' %}
		<frameset id="toplayout" rows="20%,*" >
			<frame id='fraTop' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
			<frameset id="inner" cols="20%,*" >
				<frame id='fraLeft' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
				<frame id='fraRight'  border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
			</frameset>
		</frameset>
    {% elseif app.request.query.get('layout') == 'layout3' %}
		<frameset id="toplayout" cols="20%,*">
			<frameset id="inner" rows="20%,*" >
				<frame id='fraLeftTop' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
				<frame id='fraLeftBottom'  border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
			</frameset>
			<frame id='fraRight' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
		</frameset>
	{% elseif app.request.query.get('layout') == 'layout4' %}
		<frameset id="toplayout" rows="20%,*">
			<frame id='fraTop' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
			<frame id='fraBottom' border=1 src="{{ path('docova_nocontentlayout') }}"></frame>
		</frameset>
    {% else %}
    	<frame src="{{ path('docova_nocontentlayout') }}"></frame>
    {% endif %}
{% endif %}
</frameset>