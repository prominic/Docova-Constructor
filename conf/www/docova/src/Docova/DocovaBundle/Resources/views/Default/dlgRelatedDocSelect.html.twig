<!DOCTYPE html><html>
<head>
<title>{% trans %}Related Documents{% endtrans %}</title>
<META content="0" http-equiv="expires"><META content="0" http-equiv="cache-control"><META content="no-cache" http-equiv="Pragma">
<link rel="stylesheet" type="text/css" href="{{ asset('bundles/docova/js/jstree/themes/style.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleFolderControl.css') }}">
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/json2.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/jstree/jstree.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/folderControl.js') }}" charset="UTF-8"></script>
{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
<script language="JavaScript" type="text/javascript">
var info = {
	"UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'})  }}",
	"UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
	"UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
	"UserRoles" : "$$WebClient;[User]",
	"HTTP_Referer" : "",
	"Query_String" : "ReadForm",
	"Query_String_Decoded" : "ReadForm",
	"Path_Info_Decoded" : "{{ path('docova_relateddocselect') }}?ReadForm",
	"ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
	"NsfName" : "Symfony/web/app_dev.php/Docova",
	"ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
	"PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length -1] }}",
	"PortalNsfName" : "{{ path('docova_homepage')[1:] }}"
};
function getinfovar() {
	return info;
}
/*-------------------------------------------------------------------------------------------------------------------------------------------- 
 * Function: FolderClicked
 * Handles folder click event
 *------------------------------------------------------------------------------------------------------------------------------------------- */
 function FolderClicked(){
	//-------- open currently selected folder ---------------	
	LoadCurrentFolder();
	return(true);
}//--end FolderClicked


/*-------------------------------------------------------------------------------------------------------------------------------------------- 
 * Function: LoadCurrentFolder
 * Opens selected folder in right hand pane
 * Returns: boolean - true if successful, false otherwise
 *------------------------------------------------------------------------------------------------------------------------------------------- */
 function LoadCurrentFolder(){
	//-------- get folder control ------------	
	var DlitFolders = DLITFolderView;
	//--------get library url ----------------	
	var LibraryUrl = DlitFolders.CurrentLibraryUrl;
	if (LibraryUrl == ""){
		return(false);
	}
	var currentLibId = DlitFolders.CurrentLibraryID;

	//--------get url to load-----------------	
    var FolderUrl = "";
    var FolderUnid = DlitFolders.CurrentUNID;
	if(DlitFolders.NodeType === "folder"){	    
	        FolderUrl = LibraryUrl + "/wFolderDocuments?ReadForm&folderid=" + FolderUnid;
	}else if(DlitFolders.NodeType === "library"){
		//FolderUrl = LibraryUrl +  "/wLibraryWelcome?lib=" + currentLibId ;	                 
        	FolderUrl = LibraryUrl + "/BlankFolder?OpenPage";
	}else if(DlitFolders.NodeType === "document"){
		   var foldernode = DlitFolders.getParentNodeByType(DlitFolders.selectednode, "folder", false);
	       FolderUrl = LibraryUrl + "/ReadDocument/" + FolderUnid + "?OpenDocument&ParentUNID=" + foldernode.id;
	}else{
	        FolderUrl = LibraryUrl + "/BlankFolder?OpenPage";
	}
	
	
	var obj = jQuery("#fraContent").get(0);
	if (obj == null){
		return;
	}
	obj.src = FolderUrl;

	return(true);
}//--end LoadCurrentFolder



/*-------------------------------------------------------------------------------------------------------------------------------------------- 
 * Function: GetSelectedIdList
 * Retrieves a list of document ids based on selected/marked values in a view/listing
 * Returns: xml string containing the ids along with the library and folder where the documents reside 
 *                 or false if no records selected
 *------------------------------------------------------------------------------------------------------------------------------------------- */
function GetSelectedIdList(){
	var DlitFolders = DLITFolderView;
	if (DlitFolders == null){
		return(false);
	}
	var currentLibId = DlitFolders.CurrentLibraryID;
	var folderID = "";	
	var linkList = "";	
	
	if(DlitFolders.NodeType === "folder"){
		folderID = DlitFolders.CurrentFolderID;
		
		var dataIsland;
		try{
			dataIsland = jQuery("#fraContent").get(0).contentWindow.DocumentList;
		}
		catch (e) {}
		if(!dataIsland ){return false;}

		var recordset = dataIsland.recordset;
		var maxrows = recordset.getRecordCount();
		for(var row=0; row<maxrows; row++){
			recordset.AbsolutePosition(row);
			var selected = recordset.Fields("Selected").getValue();
			if(selected == "1"){
				linkList += "<Unid>" + recordset.Fields("Unid").getValue() + "</Unid>";
			}		
		}
	}else if(DlitFolders.NodeType === "document"){
	    var foldernode = DlitFolders.getParentNodeByType(DlitFolders.selectednode, "folder", false);
	    folderID = foldernode.id;
	    linkList = "<Unid>" + DlitFolders.CurrentUNID + "</Unid>";
	}
		
	if(linkList != ""){
		linkList += "<LibraryKey>" + currentLibId + "</LibraryKey><FolderID>" + folderID + "</FolderID>";
		return linkList;
	}else{
		return false;
	}	
}//--end GetSelectedIdList

var foldercontrolconfig = {
	"MaxHeight" : 414,
	"LoadAllAtStartup" : {{ user.getUserProfile.getLoadLibraryFolders == false ? 'false' : 'true' }},
	"LibraryUrl" : "{{ path('docova_userlibraries') }}",
	"LoadUrl" : "/GetFolders.json?",
	"LoadUrlPartial" : "/FolderDataByParentID.json?",
//	"LoadDocsUrl" : "/DocumentDataByParentID.json?OpenView&RestrictToCategory=",
//	"DocumentService" : "/DocumentServices?OpenAgent",
	"FolderService" : "/FolderServices",
	"FolderAccessUrl" : "/xFolderAccess.xml?ParentUNID=",
	"FolderPropertiesUrl" : "/xFolderProperties.xml?ParentUNID=",
	"FavoritesUrl" : "{{ path('docova_userwatchlists') }}?listid=1",
	"FavoritesService" : "{{ path('docova_dataservices') }}",
	"UrlType" : 0,
	"ReadLimit" : 1000,
	"onFoldersReady" : "",
	"onClick" : "FolderClicked",
	"onDoubleClick" : "",
	"onContextMenu" : "",
	"onBeforeFolderCreate" : "",
	"onFolderCreate" : "",
	"onAfterFolderCreate" : "",
	"onBeforeDocumentCreate" : "",
	"onDocumentCreate" : "",
	"onBeforeFolderRename" : "",
	"onFolderRename" : "",
	"onAfterFolderRename" : "",
	"onBeforeFolderDelete" : "",
	"onFolderDelete" : "",
	"onAfterFolderDelete" : "",
	"onBeforeDocumentDelete" : "",
	"onDocumentDelete" : "",
	"onAfterDocumentDelete" : "",
	"onBeforeAddFavorite" : "",
	"onAddFavorite" : "",
	"onAfterAddFavorite" : "",
	"onBeforeDeleteFavorite" : "",
	"onDeleteFavorite" : "DeleteFavorite",
	"onAfterDeleteFavorite" : "RefreshFavorites",
	"onBeforeOpenInNewTab" : "",
	"onOpenInNewTab" : "",
	"onAfterOpenInNewTab" : "",
	"onBeforeAddFiles" : "",
	"onAddFiles" : "",
	"onAfterAddFiles" : "",
	"onBeforeFileExport" : "",
	"onFileExport" : "",
	"onAfterFileExport" : "",
	"onBeforeFolderCopy" : "",
	"onFolderCopy" : "",
	"onAfterFolderCopy" : "",
	"onBeforeFolderCut" : "",
	"onFolderCut" : "",
	"onAfterFolderCut" : "",
	"onBeforeFolderPaste" : "",
	"onFolderPaste" : "",
	"onAfterFolderPaste" : "",
	"onPropertiesMenu" : "",
	"onSubscriptionClick" : "showSubscriptionDialog",
	"onBeforeExpandAll" : "",
	"onAfterExpandAll" : "",
	"onBeforeCopyFolderLink" : "",
	"onCopyFolderLink" : "",
	"onAfterCopyFolderLink" : ""
}
</script>
<style type="text/css">
table.fixed {
	display: block;
	padding: 0;
	margin: 0;
	table-layout: fixed;
	height: 462px;
	border-radius: 5px;
	border:solid 1px #cfcfcf;
	border-collapse: collapse;
}
table.fixed tr {
	padding: 0;
	margin: 0;
}
table.fixed td {
	padding: 0;
	margin: 0;
	overflow: hidden;
	vertical-align: top;
}
td.folderlistcolumn {
	max-width: 250px;
	width: 250px;
	border-right:solid 1px #cfcfcf;
}
td.foldercontentcolumn {
	width: 524px;
}
#fraContent {
	width:523px;
	height: 460px;
}
</style>
</head>
<body text="#000000" bgcolor="#FFFFFF" onload="Initialize();">
<table class="fixed">
	<tr>
		<td class="folderlistcolumn">
		<!--------------folders------------------------------------------------------------------------->
			<div id="divFolderControl">
				<div id="divFolderControlTabContainer" style="display: none;">
					<div id="divFolderControlTabs">
						<div id="divFolderControlStopWrap">
							<ul>
								<li><a href="#tabs-1" title="Applications and Libraries">{% trans %}Apps &	Libraries{% endtrans %}</a></li>
								<li><a href="#tabs-2" title="Favorites"><span
										class="ui-icon ui-icon-star"></span></a></li>
								<li>
									<button id="btnSubscribe" title="Subscriptions" onclick="DLITFolderView.ShowSubscriptions();return(false);"></button>
									<button id="btnRefreshLibs" title="Refresh" onclick="DLITFolderView.RefreshAllLibraries();return(false);"></button>
								</li>
							</ul>
						</div>
						<div id="tabs-1" style="padding: 2px 4px 2px 4px; width: 100%; height: 100%; position: relative; top: 0px; left: 0px; overflow: auto;">
							<div id="divTreeView"></div>
						</div>
						<div id="tabs-2" style="padding: 0px 0px 0px 0px; width: 100%; height: 100%; position: relative; top: 0px; left: 0px; overflow: auto;">
							<!---------------------- Favorites Data table ------------------------------>
							<div id="divFavorites" style="display:; width: 100%;">
								<table id="tblFavorites" datasrc="#Favorites">
									<thead>
										<tr>
											<td style="width: 24px;" class="ui-widget-header"></td>
											<td class="ui-widget-header">{% trans %}Title{% endtrans %}</td>
											<td class="ui-widget-header">{% trans %}Library{% endtrans %}</td>
										</tr>
									</thead>
									<tbody id="otblFavorites">
										<tr>
											<td><div class="favorite-img" style="display: none;" datafld="rectype"></div></td>
											<td><div datafld="Title"></div></td>
											<td><div datafld="LibraryName"></div></td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>
		</td>
		<td class="foldercontentcolumn">
			<iframe id="fraContent" frameborder="0" src="{{ path('docova_blankfolder') }}?OpenPage"></iframe>
		</td>
	</tr>
</table>
</body>
</html>