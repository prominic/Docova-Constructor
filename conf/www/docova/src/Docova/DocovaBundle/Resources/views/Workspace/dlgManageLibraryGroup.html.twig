<!DOCTYPE html><html>
<head>
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleDialogBase.css') }}" type="text/css" />
<META content="0" http-equiv="expires"><META content="0" http-equiv="cache-control"><META content="no-cache" http-equiv="Pragma">
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa_ieemu_xpath.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/Docova.js') }}"></script>
<script language="JavaScript" type="text/javascript">
var AvailableLibraries = null; //data island object
var SubscribedLibraries = null; //data island object
var parentWin = window.top.Docova.GlobalStorage["divDlgManageLibraries"].sourcewindow;
var params = parentWin.dlgParams;
var info = {
  "UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
  "UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
  "UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
  "ServiceAgent" : "LibraryServices",
  "UserRoles" : "$$WebClient;[Administration]",
  "HTTP_Referer" : "",
  "Query_String" : "OpenForm",
  "Query_String_Decoded" : "OpenForm",
  "Path_Info_Decoded" : "",
  "ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
  "ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
  "NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length - 1] }}",
  "PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "SecureUrl" : "OFF"
};
function getinfovar(){
   return info;
}
InitVars(info);

$(document).ready(function(){
	$("#btnSubscribe").button({icons: {primary: "ui-icon-circle-arrow-s"}, text: true}).css({"height" : 20, "text-align": "center", "width": 100});
	$("#btnSubscribe > .ui-button-text").css({"display": "inline"});
	$("#btnUnsubscribe").button({icons: {primary: "ui-icon-circle-arrow-n"}, text: true}).css({"height" : 20, "text-align": "center", "width": 100});
	$("#btnUnsubscribe > .ui-button-text").css({"display": "inline"});
	$("#LibraryGroupId").val(params[0]);
	
	LoadSubscribedLibraries();

});

function LoadSubscribedLibraries(){
	if(SubscribedLibraries){
		SubscribedLibraries.reload();
	}else{
		SubscribedLibraries = new xmlDataIsland();
		SubscribedLibraries.setSrc ("/" + docInfo.NsfName + "/getLibraryGroupLibraries.xml?OpenAgent&libgroupid=" + $("#LibraryGroupId").val() + "&cache=" +  Math.random());
		SubscribedLibraries.id = "SubscribedLibraries";
		SubscribedLibraries.setTemplateName( "otblSubscribedLibraries");
		SubscribedLibraries.ondatasetcomplete = function() { LoadAvailableLibraries() }
		SubscribedLibraries.process();
	}
}

function LoadAvailableLibraries(){
	if(AvailableLibraries){
		AvailableLibraries.reload();
	}else{
		AvailableLibraries = new xmlDataIsland();
		AvailableLibraries.setSrc ("/" + docInfo.NsfName + "/getavailablelibraries.xml?OpenAgent&for=libgroup&cache=" +  Math.random()) ;
		AvailableLibraries.id = "AvailableLibraries";
		AvailableLibraries.setTemplateName( "otblAvailableLibraries");
		AvailableLibraries.ondatasetcomplete = function() { LibsLoaded(); }
		AvailableLibraries.process();		
	}
}

function SetDataDisplay(obj, nodeQuery){
	var msgSpan = document.getElementById("No" + obj.id + "Msg");
	var dataDiv = document.getElementById("div" + obj.id);
	xmlDom = obj.XMLDocument;
	//-------------------------------------------------------		
	var xpathQuery=(nodeQuery)? nodeQuery : "Libraries/Library";
	var node = xmlDom.selectSingleNode( xpathQuery );
	if (node == null)
		{
			msgSpan.style.display="";
			dataDiv.style.display="none";
		}
		else
		{
			msgSpan.style.display="none";
			dataDiv.style.display="";
		}
}

function LibsLoaded(){

	//--------------------------------------------------------------	
	var xobjUser = SubscribedLibraries.XMLDocument;
	var xobjAvailable = AvailableLibraries.XMLDocument;
	
	var nodesUser = xobjUser.selectSingleNode("Libraries/Library");
	var nodesAvailable = xobjAvailable.selectSingleNode("Libraries/Library");	

	//--- rearrange the lists so already subscribed are not displayed in the available list

	if(nodesAvailable!= null && nodesUser != null)
	{
	var rs = SubscribedLibraries.recordset;
	var availLibs = xobjAvailable.selectSingleNode("Libraries");
	rs.MoveFirst();
	while(rs.EOF() == false)
		{
			var libKey = rs.Fields("DocKey").getValue();
			var availNode = xobjAvailable.selectSingleNode('Libraries/Library[DocKey="' + libKey + '"]');
			if(availNode != null)
				{
					availLibs.removeChild(availNode);
				}
			rs.MoveNext();
		}
	}
//	HideProgressMessage();
	//--------------------------------------------------------------	
	var nodesUser = xobjUser.selectSingleNode("Libraries/Library");
	var nodesAvailable = xobjAvailable.selectSingleNode("Libraries/Library");	
	if(nodesAvailable== null){
		jQuery("#NoAvailableLibrariesMsg").show();	
		jQuery("#divAvailableLibraries").hide();					
	}else{
		jQuery("#NoAvailableLibrariesMsg").hide();
		jQuery("#divAvailableLibraries").show();							
	}
	
	if(nodesUser == null){
		jQuery("#NoSubscribedLibrariesMsg").show();	
		jQuery("#divSubscribedLibraries").hide();					
	}else{
		jQuery("#NoSubscribedLibrariesMsg").hide();
		jQuery("#divSubscribedLibraries").show();							
	}
	
	AvailableLibraries.Refresh();
}


function AddLibrary(){
	var recordset = AvailableLibraries.recordset

	if (recordset == null){
		return;
	}
	
	var LibsSelected = "";
	
	var maxrows = recordset.getRecordCount();
	for(var row=0; row<maxrows; row++){
		recordset.AbsolutePosition(row);
		var selected = recordset.Fields("Selected").getValue();
		if(selected == "1"){
			if(LibsSelected == ""){
				LibsSelected += recordset.Fields("DocKey").getValue();
			}else{
				LibsSelected += "," + recordset.Fields("DocKey").getValue()
			}
		}		
	}
	
	if (LibsSelected == ""){ 
		alert("{% trans %}Please select libraries to add.{% endtrans %}");
		return;
	}

	//---- Build the request-----
	var agentName = "WorkspaceServices"
	
	var request = "<Request><Action>ADDLIBRARYGROUPLIBRARY</Action><UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>"
	request += "<Document>"
	request += "<LibraryGroupId>" + $("#LibraryGroupId").val() + " </LibraryGroupId>"
	request += "<LibsSelected>" +LibsSelected + "</LibsSelected>"
	request += "</Document>"
	request += "</Request>"	

	var resulttext = SubmitRequest(request, agentName);
	if(resulttext == null || resulttext == "undefined"){
		alert("{% trans %}Could not update Library Group with one or more of the libraries selected.{% endtrans %}")
	}
	LoadSubscribedLibraries();	
	return;
}

function RemoveLibrary(){
	var recordset = SubscribedLibraries.recordset

	if (recordset == null){
		return;
	}
	
	var LibsSelected = "";
	
	var maxrows = recordset.getRecordCount();
	for(var row=0; row<maxrows; row++){
		recordset.AbsolutePosition(row);
		var selected = recordset.Fields("Selected").getValue();
		if(selected == "1"){
			if(LibsSelected == ""){
				LibsSelected += recordset.Fields("Unid").getValue();
			}else{
				LibsSelected += "," + recordset.Fields("Unid").getValue()
			}
		}		
	}
	
	if (LibsSelected == ""){ 
		alert("{% trans %}Please select libraries to remove.{% endtrans %}");
		return;
	}

	//---- Build the request-----
	var agentName = "WorkspaceServices"
	
	var request = "<Request><Action>REMOVELIBRARYGROUPLIBRARY</Action><UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>"
	request += "<Document>"
	request += "<LibraryGroupId>" + $("#LibraryGroupId").val() + " </LibraryGroupId>"
	request += "<LibsSelected>" +LibsSelected + "</LibsSelected>"
	request += "</Document>"
	request += "</Request>"	

	var resulttext = SubmitRequest(request, agentName);
	if(resulttext == null || resulttext == "undefined"){
		alert("{% trans %}Could not update Library Group Libraries with one or more of the libraries selected.{% endtrans %}")
	}
	LoadSubscribedLibraries();	
	return;
}

function SubmitRequest(request, agentName){
	//send the request to server
	var processUrl = docInfo.ServerUrl + "/" + docInfo.NsfName + "/" + agentName  + "?OpenAgent"
	var result;
	var resulttext;
	$.ajax({
		type: "POST",
		url: processUrl,
		data: request,
		cache: false,
		async: false,
		dataType: "xml",
		success: function(xml){
			result = true;
			var xmlobj = $(xml);
			var statustext = xmlobj.find("Result").first().text();
			if(statustext == "OK"){
				resulttext = xmlobj.find("Result[ID=Ret1]").text();
			}
		},
		error: function(){
			result = false
			resulttext = "FAILED"
			//provide an error message
		}
	})
	return resulttext;
}
</script>
<style type="text/css">
fieldset {
	padding: 2;
}
table {
	display: block; 
	height: 140px; 
	width: 100%; 
	overflow-y: auto; 
	table-layout:fixed;
	border: 1px solid silver; 
	border-collapse: collapse;
}
td {
	border-bottom: 1px solid #C0C0C0;
}
thead > tr {
}
td.chkbox {
       width: 25px;
}
td.libname {
      width: 300px;
      color: #000080;
}
td.libdesc {
        width: 300px;
}
td.header {
       background-color: #ECE9D8;
       font-weight: bold;
       color: #000000;
}
</style>
</head>
<body text="#000000" bgcolor="#FFFFFF">
    <!------------------------------------------------------------>
    <script id="SubscribedLibraries" type="text/xml"></script>
    <script id="AvailableLibraries" type="text/xml"></script>
    <!------------------------------------------------------------>
	<!-------available libraries content-------------->
	<div style="display:none;">
		{% trans %}Library id{% endtrans %}: 
		<input name="LibraryGroupId" value="" id="LibraryGroupId">
	</div>
	<fieldset>
		<legend>{% trans %}Available Libraries{% endtrans %}&nbsp;</legend>
		<!------------------------------------------------------------>
		<div id="NoAvailableLibrariesMsg" style="display: none;min-height:140px;">{% trans %}There are no libraries available to you at this time.{% endtrans %}</div>
		<div id="divAvailableLibraries" style="display: none;">
    		<!---------- available libraries table header ------>
    		<table id="tblAvailableLibraries" datasrc="#AvailableLibraries">
    		<thead>
    			<tr>
    				<td  class="chkbox header"></td>
    				<td  class="libname header">{% trans %}Name{% endtrans %}</td>
            		<td  class="libdesc header">{% trans %}Description{% endtrans %}</td>
            	</tr>
            </thead>
            <tbody id="otblAvailableLibraries">
            <!---------- available libraries table content ------>
    			<tr>
                    <td  class="chkbox"><input type="checkbox" datafld="Selected"></td>
                    <td  class="libname"><span id=Title datafld="Title"></span></td>
                    <td class="libdesc"><span id="Description" datafld="Description"></span></td>
    			</tr>
    		</tbody>
    		</table>
		</div>
		<!--end available libraries table content ----->
	</fieldset>
	<br><!------------------------------------------------------------>

	<div style="text-align: center;">
		<button id="btnSubscribe" type="button" title="Subscribe to selected items" onClick="AddLibrary();">{% trans %}Add{% endtrans %}</button>
		<button id="btnUnsubscribe" type="button" title="Unsubscribe to selected items" onClick="RemoveLibrary();">{% trans %}Remove{% endtrans %}</button>
	</div>

	<!---subscribed libraries content---------------->
	<fieldset>
		<legend>{% trans %}Libraries in this Group{% endtrans %}&nbsp;</legend>
		<div id="NoSubscribedLibrariesMsg" style="display: none;min-height:140px;">{% trans %}There are currently no Libraries assigned to this Group. Please select one or more libraries above and then click the Add button.{% endtrans %}</div>
		<div id="divSubscribedLibraries" style="display: none;">
			<!----subscribed libraries table header------->
			<table  id="tblSubscribedLibraries" datasrc="#SubscribedLibraries">
            <thead>
            	<tr>
            		<td  class="chkbox header"></td>
            		<td  class="libname header">{% trans %}Name{% endtrans %}</td>
            		<td  class="libdesc header">{% trans %}Description{% endtrans %}</td>
            	</tr>
            </thead>
			<!------ subscribed libraries table content ------>
			<tbody id="otblSubscribedLibraries">
                <tr>
                    <td class="chkbox"><input type="checkbox" datafld="Selected"></td>
                    <td class="libname"><span id=Title datafld="Title"></span></td>
                    <td class="libdesc"><span id="Description" datafld="Description"></span></td>
                </tr>
			</tbody>
			</table>
		</div>
		<!--end subscribed libraries table content ----->
	</fieldset>
</body>
</html>