<!DOCTYPE html><html>
<head>
{% set params = app.request.query.all %}
<title>{{ params.mode is defined and params['mode'] == 'change' ? 'Change Document Type'|trans : 'New Document'|trans }}</title>
<META content="0" http-equiv="expires">
<META content="0" http-equiv="cache-control">
<META content="no-cache" http-equiv="Pragma">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleDialogBase.css') }}" type="text/css" />
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa_ieemu_xpath.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
<script language="JavaScript" type="text/javascript">
var info = {
  "DocType" : "dlgSelectDocType",
  "UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
  "UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
  "UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
  "UserRoles" : "$$WebClient;[User]",
  "isNewDoc" : "true",
  "isDocBeingEdited" : "true",
  "isEditor" : "",
  "isReader" : "",
  "IsApprover" : "",
  "IsSuperuser" : "",
  "HTTP_Referer" : "",
  "Query_String" : "OpenForm&ParentUNID={{ folder.getId }}{% if params.mode is defined and params['mode'] == 'change' %}&mode=change{% endif %}",
  "Query_String_Decoded" : "OpenForm&ParentUNID={{ folder.getId }}{% if params.mode is defined and params['mode'] == 'change' %}&mode=change{% endif %}",
  "Path_Info_Decoded" : "{{ path('docova_popupdoctypes') }}?OpenForm&ParentUNID={{ folder.getId }}{% if params.mode is defined and params['mode'] == 'change' %}&mode=change{% endif %}",
  "ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
  "ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
  "NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length - 1] }}",
  "PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "Date" : "{{ "now"|date('d/m/Y') }}",
  "DateTime" : "{{ "now"|date('d/m/Y H:i:s') }}",
  {% set folder_doctypes = '' %}
  {% if folder.getApplicableDocType|length > 0 %}
  	{% for doctype in folder.getApplicableDocType %}
  		{% set folder_doctypes = folder_doctypes ~ ', ' ~ doctype.getId %}
  	{% endfor %}
  	{% set folder_doctypes = folder_doctypes[2:] %}
  {% endif %}
  "FolderDocTypes" : "{{ folder_doctypes }}",
  "DocumentTypeOption" : "{% if folder.getApplicableDocType|length > 0 %}S{% elseif folder.getApplicableDocType|length == 0 and folder.getDefaultDocType != null %}A{% else %}N{% endif %}",
  "FolderID" : "DK{{ folder.getId }}",
  "DefaultDocumentType" : "{% if folder.getDefaultDocType and folder.getDefaultDocType != -1 %}{{ folder.getDefaultDocType }}{% endif %}",
  "Mode" : "{% if params.mode is defined and params['mode'] == 'change' %}change{% endif %}"
};
function getinfovar() {
	return info;
}
var srcWindow = window.dialogArguments;
var srcDoc = null;

$(function() {
   $(window).keypress(function(e) {
       var key = e.which;
       if(key == "13"){
		window.top.$(':button:contains("Create")').click();
       }
   });
   
   $("#DocumentType").dblclick(function(){
		window.top.$(':button:contains("Create")').click();
	});
});

function completeWizard()
{
	var result = false;
	if(doc.DocumentType.selectedIndex==-1){
		alert("{% trans %}No Document Type selected. Please select a Document Type.{% endtrans %}");
		document.all.DocumentType.focus();
	}else{
		result = {
			"DocumentTypeName" : "",
			"DocumentType" : ""
		};
		result.DocumentTypeName = doc.DocumentType.options[ doc.DocumentType.selectedIndex ].text;	
		result.DocumentType = doc.DocumentType.options[ doc.DocumentType.selectedIndex ].value;			
	}
	return(result);
}//--end completeWizard

function loadTypeDescription()
{
	var view = "luDocumentTypesByKey";
	if(doc.DocumentType.selectedIndex == -1){ //if user clicks on field, but not on a value in the field, just capture the error, no msg needed
		return;
	}	
	var key = doc.DocumentType.options[ doc.DocumentType.selectedIndex ].value;
	if(key == "") {return false;}
	
	var httpObj = new objHTTP();
	var request = "<Request>";
	request += "<Action>GETTYPEINFO</Action>";
	request += "<UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>";
	request += "<TypeKey>" + key + "</TypeKey>";	
	request += "</Request>";	

	var url=  docInfo.ServerUrl + docInfo.PortalWebPath + "/LibraryServices?openAgent";
	if(!httpObj.PostData(request, url)){return false;}	
	if(httpObj.status!="OK"){return false;}
	if(httpObj.resultCount == 0){return false;}
	document.all.docTypeDescription.innerHTML= (httpObj.results[1] ? httpObj.results[1] : "");
}
</script>
</head>
<body text="#000000" bgcolor="white" SCROLL="no" onload="InitVars(info);">
	<p>{% trans %}Document type determines the fields and content sections available within the document.{% endtrans %}</p>
	<b>{% trans %}Select Document Type{% endtrans %}:</b><br>
	<font size="2">
		<select name="DocumentType" onclick="loadTypeDescription()" ondblclick="if (docInfo.Mode != 'change'){ completeWizard(); }" id="DocumentType" size=9;>
	{% if doc_types|length > 0 %}
		{% for item in doc_types %}
		<option value="{{ item.getId }}" {{ item.getId == folder.getDefaultDocType ? 'selected' : '' }}>{{ item.getDocName }}
		{% endfor %}
	{% endif %}
		</select>
	</font><br>
	<p><b>{% trans %}Description{% endtrans %}:</b>
		<div id="docTypeDescription">Select the document type above to see its description.</div>
	</p>
	<script>
	   setTimeout(function() { jQuery("#DocumentType").focus()}, 100);
	</script>
	<!------------------ SUBFORM sfKillCache ------------>
	<!------------------Microsoft suggestion to force no cacheing of documents------------>
	<HEAD>
	<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
	<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="0">
	<META HTTP-EQUIV="EXPIRES" CONTENT="0">
	</HEAD>
	<!------------------END SUBFORM sfKillCache  ------------>
</body>
</html>
