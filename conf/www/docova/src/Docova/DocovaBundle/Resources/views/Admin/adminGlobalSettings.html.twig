<!DOCTYPE HTML>
<html>
<head>
	<title>{% trans %}Application Settings{% endtrans %}</title>
	<META content="0" http-equiv="expires">
	<META content="0" http-equiv="cache-control">
	<META content="no-cache" http-equiv="Pragma">
	<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness/jquery-ui.css') }}">
	<link rel="stylesheet" href="{{ asset('bundles/docova/css/admin/adminBaseForms.css') }}">
	<link rel="stylesheet" href="{{ asset('bundles/docova/font-awesome/css/all.min.css') }}">
	<link rel="stylesheet" href="{{ asset('bundles/docova/css/autoCompleteNamePicker.css') }}" type="text/css" />
	<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
	<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/Docova.js') }}"></script>
	<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
	<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}"></script>
	<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/autoCompleteNamePicker.js') }}"></script>
	<style type="text/css">
.ui-icon-group {
	background-image: url('{{ asset('bundles/docova/images/icons/vwicn004.gif') }}') !important;
	background-repeat: no-repeat !important;
	margin-top: -5px !important;
}
.remove-depsetting { color:red; cursor:pointer; text-align:center; width:19px; font-size:14px; }
	</style>
	{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
	<script language="JavaScript" type="text/javascript">

$(function() {
	$('form').height($(window).height() - 46);
	$('#closeBtn').button({
		icons : {
			primary : 'ui-icon-close'
		}
	})
	.click(function() {
		window.top.Docova.Utils.messageBox({
			prompt : prmptMessages.msgACF004,
			icontype : 2,
			msgboxtype : 3, 
			title : prmptMessages.msgACF005,
			width: 450,
			onYes : function() {
				SaveAndClose(true);
			},
			onNo : function() {
				window.parent.fraLeftFrame.closeAppSettings();
			}
		});
	});

	$('#saveAndCloseBtn').button({
		icons : {
			primary : 'ui-icon-check'
		}
	})
	.click(function() {
		SaveAndClose(true);
	});

	$('#divFormContainer').accordion({
		heightStyle: "content",
		collapsible: true,
		active: false
	});

	$('#btnPrincipal').button({
		text : false,
		icons : {
			primary : 'ui-icon-group'
		}
	})
	.click(function(e) {
		e.preventDefault();
		window.top.Docova.Utils.showAddressDialog({ fieldname: 'Principal', dlgtype: 'multi', sourcedocument: document});
	});

	$('#add_repository_server').button({
		text : 'Add',
		icons : {
			primary : 'ui-icon-plus'
		}
	})
	.click(function(e) {
		e.preventDefault();
		var inputs = $('#setting_template').clone(true);
		inputs.removeAttr('id');
		inputs.css('margin-top', '3px');
		inputs.find('input').val('');
		inputs.appendTo($('#setting_template').parent());
	});

	$('i.remove-depsetting').on('click', function(){
		if($(this).parent().prop('id') != 'setting_template') {
			$(this).parent().remove();
		}
	});

	$('input.namepicker').autoComplete({
		url : '{{ path('docova_usernamelookup_json') }}',
		shortName : true,
		selectionContainer : $('input.namepicker').attr('target'),
		type: 'multiple'
	});

	$('input[name="setupPage"]').click(function() {
		if ($(this).val() == 'E') {
			$('#externalSetup').show();
			$('#defaultSetup').hide();
		}
		else {
			$('#externalSetup').hide();
			$('#defaultSetup').show();
		}
	});

	$('.hideShow').click(function() {
		if ($(this).prop('type').toLowerCase() == 'checkbox')
		{
			if ($(this).prop('checked')) {
				$('.' + $(this).attr('show')).removeClass('hidden');
			}
			else {
				$('.' + $(this).attr('show')).addClass('hidden');
			}
		}
		else {
			var source = $(this);
			$('.' + $(this).attr('show')).each(function() {
				var classes = $(this).attr('class').split(' '),
					visible = true;
				for (var x = 0; x < classes.length; x++) 
				{
					if (classes[x] != 'hidden' && classes[x] != source.attr('show')) {
						visible = ($('input[name="' + classes[x] + '"]') && $('input[name="' + classes[x] + '"]').prop('checked')) ? true : false;
					}
				}
				if (visible) 
				{
					$(this).removeClass('hidden');
				}
			});
			$('.' + $(this).attr('hide')).addClass('hidden');
		}
	});

	$('.hidetoload').removeClass('hidetoload');
});

function SaveAndClose(refreshView)
{
	// only save upton validation
	if (validateDocumentFields() )
	{
		window.top.Docova.Utils.showProgressMessage('Please wait. loading...');
		$('form').submit();
	}
}

//-----------------------validate app settings profile fields -----------------------------
function validateDocumentFields()
{
	var LicenseCode=Docova.Utils.allTrim(Docova.Utils.getField("LicenseCode"));
	var CompanyName=Docova.Utils.allTrim(Docova.Utils.getField("CompanyName"));

	if(LicenseCode != "" && CompanyName != "") {
		if(LicenseCode.length != 29) {
			window.top.Docova.Utils.messageBox({ prompt: "Code must be 5 sets of 5 characters separated by hypens. Please re-enter the code. Contact DOCOVA support if problem persists.", title: "License Code: Invalid License Code length", width:"350" });
			return false;
		}
		var arr = LicenseCode.split("-");
		if(arr.length != 5) {
			window.top.Docova.Utils.messageBox({ prompt: "Code must be 5 sets of 5 characters separated by hypens. Please re-enter the code. Contact DOCOVA support if problem persists.", title: "License Code: Invalid License Code", width:"350" });
			return false;
		}
		var companyCode = crc32(CompanyName);
		if(companyCode.length != 10) {
			var arrLength = 10-(companyCode.toString().length) + 1;
			companyCode = Array(arrLength).join("0") + companyCode;
		}
		if(companyCode != arr[0] + arr[1]) {
			window.top.Docova.Utils.messageBox({ prompt: "The Company Name must be entered exactly as provided with the License Code. Please re-enter the Company Name. Contact DOCOVA support if problem persists.", title: "License Code: Invalid Company Name", width:"350" });
			return false;
		}
	}
	
	return true;
	
}

var makeCRCTable = function(){
    var c;
    var crcTable = [];
    for(var n =0; n < 256; n++){
        c = n;
        for(var k =0; k < 8; k++){
            c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));
        }
        crcTable[n] = c;
    }
    return crcTable;
}

var crc32 = function(str) {
    var crcTable = window.crcTable || (window.crcTable = makeCRCTable());
    var crc = 0 ^ (-1);

    for (var i = 0; i < str.length; i++ ) {
        crc = (crc >>> 8) ^ crcTable[(crc ^ str.charCodeAt(i)) & 0xFF];
    }

    return (crc ^ (-1)) >>> 0;
};
	</script>
	{% include 'DocovaBundle:Admin:sfWebAdminCommonFields.html.twig' with { 
		'document' : global_settings, 
		'view_name' : 'wAdminGlobalSetting', 
		'view_title' : 'Global Settings', 
		'path_info' : path('docova_admin_profile'),
		'mode' : 'edit' 
	} %}
</head>
<body scroll="no">
	<ul class="ui-widget-header actionBar hidetoload">
		<li id="closeBtn">{% trans %}Close{% endtrans %}</li>
		<li id="saveAndCloseBtn">{% trans %}Save and Close{% endtrans %}</li>
	</ul>
	<form method="post" action="{{ path('docova_admin_profile') }}" name="_AdminProfile" class="hidetoload" autocomplete="off">
		<div id="divFormContainer">
			<h3 id="tdTab_1">{% trans %}Basic{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="firstRw">{% trans %}Application title{% endtrans %}:</td>
						<td class="firstRw"><input type="text" class="text ui-widget-content ui-corner-all" name="ApplicationTitle" value="{% if global_settings != '' %}{{ global_settings.getApplicationTitle }}{% endif %}"></td>
					</tr>
					<tr>
						<td>{% trans %}Startup page{% endtrans %}:</td>
						<td>
							<label> <input type="radio" name="StartupOption" value="H" {% if global_settings == '' or global_settings.getStartupOption == true %}checked{% endif %}> {% trans %}Home Page{% endtrans %}</label>
							<label> <input type="radio" name="StartupOption" value="W" {% if global_settings != '' and global_settings.getStartupOption == false %}checked{% endif %}> {% trans %}Application Workspace{% endtrans %}</label>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Default user display name{% endtrans %}:</td>
						<td>
							<label> <input type="radio" name="DisplayDefault" value="0" {% if global_settings == '' or not global_settings.getUserDisplayDefault %}checked{% endif %}>{% trans %}Full username DN abbreviated{% endtrans %}</label>
							<label> <input type="radio" name="DisplayDefault" value="1" {% if global_settings != '' and global_settings.getUserDisplayDefault %}checked{% endif %}>{% trans %}Short user profile name{% endtrans %}</label>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Default date format{% endtrans %}:</td>
						<td>
							<select name="defaultDateFormat" class="text ui-widget-content ui-corner-all">
								<option value="MM/DD/YYYY" {{ global_settings == '' or global_settings.getDefaultDateFormat == 'MM/DD/YYYY' ? 'selected' : '' }}>MM/DD/YYYY</option>
								<option value="DD/MM/YYYY" {{ global_settings != '' and global_settings.getDefaultDateFormat == 'DD/MM/YYYY' ? 'selected' : '' }}>DD/MM/YYYY</option>
								<option value="YYYY/MM/DD" {{ global_settings != '' and global_settings.getDefaultDateFormat == 'YYYY/MM/DD' ? 'selected' : '' }}>YYYY/MM/DD</option>
							</select>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Default sender for system messages{% endtrans %}:</td>
						<td>
						{% set principal = '' %}
						{% set principal_html = '' %}
						{% if global_settings != '' and (global_settings.getDefaultPrincipal.count > 0 or global_settings.getPrincipalGroups|length > 0) %}
							{% if global_settings.getDefaultPrincipal.count > 0 %}
								{% for item in global_settings.getDefaultPrincipal %}
									{% set principal = ',' ~ item.getUserNameDnAbbreviated ~ principal %}
									{% set principal_html = principal_html ~ '<span>'~ item.getUserNameDnAbbreviated ~'<i class="far fa-times removename"></i></span>' %}
								{% endfor %}
							{% endif %}
							{% if global_settings.getPrincipalGroups|length > 0 %}
								{% for item in global_settings.getPrincipalGroups %}
									{% set principal = ',' ~ item ~ principal %}
									{% set principal_html = principal_html ~ '<span>'~ item ~'<i class="far fa-times removename"></i></span>' %}
								{% endfor %}
							{% endif %}
							{% set principal = principal[1:] %}
						{% endif %}
							<input type="text" class="text ui-widget-content ui-corner-all namepicker" target="Principal" value="" />
							<button id="btnPrincipal" type="button"></button>
							<input type="hidden" name="Principal" id="Principal" value="{{ principal }}" />
							{% if principal %}
							<em class="slContainer" id="slContainerprincipal">{{ principal_html }}</em>
							{% endif %}
						</td>
					</tr>
					<tr>
						<td>{% trans %}Event logging{% endtrans %}:</td>
						<td>
							<select class="text ui-widget-content ui-corner-all" name="ErrorLogLevel">
								<option value="0" {% if global_settings != '' and global_settings.getErrorLogLevel == 0 %}selected{% endif %}>{% trans %}No logging{% endtrans %}</option>
								<option value="1" {% if global_settings != '' and global_settings.getErrorLogLevel == 1 %}selected{% endif %}>{% trans %}Log only critical errors{% endtrans %}</option>
								<option value="2" {% if (global_settings != '' and global_settings.getErrorLogLevel == 2) or global_settings == '' %}selected{% endif %}>{% trans %}Log all events{% endtrans %}</option>
							</select>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Email event to Administrators{% endtrans %}:</td>
						<td>
							<select class="text ui-widget-content ui-corner-all" name="ErrorLogEmail">
								<option value="0" {% if global_settings != '' and global_settings.getErrorLogEmail == 0 %}selected{% endif %}>{% trans %}Never{% endtrans %}</option>
								<option value="1" {% if global_settings != '' and global_settings.getErrorLogEmail == 1 %}selected{% endif %}>{% trans %}On critical errors only{% endtrans %}</option>
								<option value="2" {% if (global_settings != '' and global_settings.getErrorLogEmail == 2) or global_settings == '' %}selected{% endif %}>{% trans %}On all events{% endtrans %}</option>
							</select>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Event log retention{% endtrans %}:</td>
						<td><input type="text" class="text ui-widget-content ui-corner-all" name="EventCleanupDelay" value="{% if global_settings != '' %}{{ global_settings.getLogRetention }}{% else %}90{% endif %}"> {% trans %}day(s){% endtrans %}</td>
					</tr>
					<tr>
						<td>{% trans %}User Profile Creation{% endtrans %}:</td>
						<td>
							<label> <input type="checkbox" name="UserProfileCreation" value="1" {% if global_settings != '' or global_settings.getUserProfileCreation %}checked{% endif %}> {% trans %}Create AD authenticated users profile automatically{% endtrans %} </label>
						</td>
					</tr>
					<tr>
						<td>{% trans %}Confirm Browser Close{% endtrans %}: </td>
						<td><label><input type="checkbox" name="PromptToCloseWindow" value="1" {{ global_settings != '' and global_settings.getPromptToClose ? 'checked="checked"' : '' }} > {% trans %}Prompt User{% endtrans %}</label></td>
					</tr>
					<tr>
						<td>{% trans %}Default Folder Pane Width{% endtrans %}</td>
						<td><input type="text" name="DefaultFolderPaneWidth" class="text ui-widget-content ui-corner-all" value="{{ global_settings != '' ? global_settings.getDefaultFolderPaneWidth : '' }}" style="width:80px;"></td>
					</tr>
{% if false %}
					<tr>
						<td>{% trans %}On Logout{% endtrans %}:</td>
						<td>
							<label> <input type="checkbox" class="hideShow" show="redirectTo" name="LogoutRedirect" value="1" {% if global_settings != '' and global_settings.getRedirectTo %}checked{% endif %} > {% trans %}Redirect{% endtrans %} </label><label class="redirectTo{% if global_settings == '' or not global_settings.getRedirectTo %} hidden{% endif %}">{% trans %}To{% endtrans %}: </label>
							<div class="redirectTo{% if global_settings == '' or not global_settings.getRedirectTo %} hidden{% endif %}">
								<input type="text" class="text ui-widget-content ui-corner-all" name="RedirectTo" value="{% if global_settings != '' %}{{ global_settings.getRedirectTo }}{% endif %}">
							</div>
						</td>
					</tr>
{% endif %}
				</table>
			</div>

			<h3 id="tdTab_2">{% trans %}License Key{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="hdr">{% trans %}License key details{% endtrans %}</td>
						<td class="hdr"></td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}Company Name{% endtrans %}:</td>
						<td class="firstRw exc"><input type="text" class="text ui-widget-content ui-corner-all" id="CompanyName" name="CompanyName" value="{% if global_settings != '' %}{{ global_settings.getCompanyName }}{% endif %}"></td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}License Code{% endtrans %}:</td>
						<td class="firstRw exc"><input type="text" class="text ui-widget-content ui-corner-all" id="LicenseCode" name="LicenseCode" value="{% if global_settings != '' %}{{ global_settings.getLicenseCode }}{% endif %}"></td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}Number of Users{% endtrans %}:</td>
						<td class="firstRw exc">{% if global_settings != '' %}{{ global_settings.getNumberOfUsers }}{% endif %}</td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}Expiry Date{% endtrans %}:</td>
						<td class="firstRw">{% if global_settings != '' and global_settings.getExpiryDate %}{{ global_settings.getExpiryDate.Format(global_settings.getDefaultDateFormat|replace({'MM':'m', 'DD':'d', 'YYYY':'Y'})) }}{% else %}N/A{% endif %}</td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}Features{% endtrans %}:</td>
						<td class="firstRw">{% if global_settings != '' %}{{ global_settings.getLicensedFeatures }}{% endif %}</td>
					</tr>
				</table>
			</div>

			<h3 id="tdTab_3">{% trans %}Server and File Paths{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="firstRw hdr">{% trans %}DOCOVA Home Database{% endtrans %}</td>
						<td class="firstRw hdr">{% trans %}Web Path{% endtrans %}</b></td>
					</tr>

					<tr>
						<td class="exc">{% trans %}Server{% endtrans %}:</td>
						<td class="">
							{%  set _server = (global_settings != '' and global_settings.getRunningServer != '' ? global_settings.getRunningServer : (app.request.server.get('HTTP_HOST')|split(':')[0])) %}
							<input type="text" class="text ui-widget-content ui-corner-all" name="HPWebServer" id="HPWebServer" value="{{ _server }}">
							<span class="elNote">{% trans %}Fully qualified domain name{% endtrans %} (eg: host01.domain.com)</span>
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Uses SSL{% endtrans %}</td>
						<td class="">
							{% set _isssl = (global_settings != '' ? global_settings.getSslEnabled : 'https' in app.request.getHttpHost) %}
							<label> <input type="radio" name="SSL" value="1" {{ _isssl ? 'checked' : '' }}> {% trans %}Yes{% endtrans %}</label>
							<label> <input type="radio" name="SSL" value="0" {{ _isssl ? '' : 'checked' }}> {% trans %}No{% endtrans %}</label>
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}HTTP Port{% endtrans %}:</td>
						<td class="">
						    {% set _httpport = (global_settings != '' and global_settings.getHttpPort ? global_settings.getHttpPort : (':' in app.request.server.get('HTTP_HOST') ? app.request.server.get('HTTP_HOST')|split(':')[1] : '')) %}
							<input type="text" class="text ui-widget-content ui-corner-all" name="HTTPPort" value="{{ _httpport }}" style="width: 224px;">
							<span class="elNote">{% trans %}Leave blank if using 80 for non-SSL or 443 for SSL.{% endtrans %}</span>
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Notes mail server URL (if applicable){% endtrans %}:</td>
						<td class="">
							<input type="text" class="text ui-widget-content ui-corner-all" name="notesMailServer" value="{{ global_settings != '' ? global_settings.getNotesMailServer : '' }}">
							<span class="elNote">{% trans %}Leave blank if a different mail server is used. No http:// or https:// is required. Default port is 993, concatenate the port to the url by ":" if different.{% endtrans %}</span>
						</td>
					</tr>
					<tr>
						<td colspan="2" class="firstRw hdr">{% trans %}DOCOVA Deployment Settings{% endtrans %}</td>
					</tr>
					<tr>
						<td class="exc"><button id="add_repository_server" type="button" style="height:24px;">{% trans %}Add{% endtrans %}</button></td>
						<td>
						{% set servers_path = global_settings.getDeployServerPath %}
							<span class="elNote">{% trans %}Type full URL to DOCOVA instance (including http:// or https://){% endtrans %}</span>
							<div id="setting_template">
    							{% trans %}DOCOVA URL in Server{% endtrans %}:
    							<input type="text" class="text ui-widget-content ui-corner-all" value="{{ servers_path|length ? servers_path[0]|split('::')[0] : '' }}" name="DestServerPath[]" style="width:250px;" />
    							{% trans %}Port{% endtrans %}:
    							<input type="text" class="text ui-widget-content ui-corner-all" value="{{ servers_path|length ? servers_path[0]|split('::')[1] : '' }}" name="DestServerPort[]" style="width:110px"/>
    							<i class="remove-depsetting fas fa-minus-circle"></i>
							</div>
						{% if servers_path|length %}
							{% for s in servers_path %}
								{% if loop.index != 1 %}
							<div style="margin-top:3px;">
    							{% trans %}DOCOVA URL in Server{% endtrans %}:
    							<input type="text" class="text ui-widget-content ui-corner-all" value="{{ s|split('::')[0] }}" name="DestServerPath[]" style="width:250px;" />
    							{% trans %}Port{% endtrans %}:
    							<input type="text" class="text ui-widget-content ui-corner-all" value="{{ s|split('::')[1] }}" name="DestServerPort[]" style="width:110px"/>
    							<i class="remove-depsetting fas fa-minus-circle"></i>
							</div>
								{% endif %}
							{% endfor %}
						{% endif %}
						</td>
					</tr>
				</table>
			</div>

			<h3 id="tdTab_4">{% trans %}Application Integration{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="hdr" colspan="2">{% trans %}Domain Index Integration{% endtrans %}:</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Enable Elastic Search Engine{% endtrans %}:</td>
						<td>
							<label><input type="checkbox" name="EnableElasticSearch" value="1" {{ global_settings != '' and global_settings.getEnableElastica ? 'checked' : '' }}> {% trans %}Enable Elastic Search engine for basic searches{% endtrans %}</label> 
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Enable use of domain index for global search{% endtrans %}:</td>
						<td>
							<label><input type="checkbox" name="EnableDomainSearch" value="1" {{ global_settings != '' and global_settings.getEnableDomainSearch ? 'checked' : '' }}> {% trans %}Enable Domain Index Search{% endtrans %}</label> 
						</td>
					</tr>
					<tr>
						<td class="hdr" colspan="2">{% trans %}Attachment Handling{% endtrans %}:</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}File types to view using local applications (rather than browser){% endtrans %}:</td>
						<td><input type="text" class="text ui-widget-content ui-corner-all" name="LaunchLocally" value="{% if global_settings != '' %}{{ global_settings.getLaunchLocally }}{% else %}doc,docx,docm,xls,xlsx,xlsm,ppt,pptx,pptm,csv,tif{% endif %}"></td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Delete files locally after successful upload to DOCOVA{% endtrans %}:</td>
						<td> 
							<label><input type="radio" name="LocalDelete" value="1" {% if global_settings != '' and global_settings.getLocalDelete == true %}checked{% endif %}> {% trans %}Yes{% endtrans %} </label>
							<label><input type="radio" name="LocalDelete" value="0" {% if global_settings == '' or global_settings.getLocalDelete == false %}checked{% endif %}> {% trans %}No{% endtrans %} </label>
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Local file delete exclusion list{% endtrans %}:</td>
						<td>
							<textarea class="text ui-widget-content ui-corner-all" name="entryLocalDeleteExcludes">{% if global_settings != '' %}{{ global_settings.getLocalDeleteExclude }}{% endif %}</textarea> 
							<span class="elNote">({% trans %}enter file path for exact match, or file path followed by * to match the path and any sub folder{% endtrans %})</span> 
							<span class="elNote">{% trans %}ex{% endtrans %}: C:\TEMP\;C:\WINDOWS\*</span>
						</td>
					</tr>
				</table>
			</div>

			<h3 id="tdTab_5">{% trans %}Background Processing{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="firstRw hdr" colspan="2">{% trans %}Scheduled processes{% endtrans %}:</td>
					</tr>
					<tr>
						<td class="firstRw exc">{% trans %}Run cleanup tasks at{% endtrans %}:</td>
						<td>
							<select name="CleanupTimeHour" class="text ui-widget-content ui-corner-all smCombo">
							{% for x in 1..12 %}
								<option {% if global_settings != '' and global_settings.getCleanupTime.format('h') == x %}selected{% endif %}>{{ x }}:00
							{% endfor %}
							</select> 
							<select name="CleanupTimeAMPM" class="text ui-widget-content ui-corner-all smCombo">
								<option {% if global_settings != '' and global_settings.getCleanupTime.format('A') == 'AM' %}selected{% endif %}>{% trans %}AM{% endtrans %}
								<option {% if global_settings != '' and global_settings.getCleanupTime.format('A') == 'PM' %}selected{% endif %}>{% trans %}PM{% endtrans %}
							</select> 
							<span class="elNote">{% trans %}Tasks: trash deletion, expired log deletion, expired archive deletion.{% endtrans %}</span>
						</td>
					</tr>
					<tr>
						<td class="exc">{% trans %}Run archiving tasks at{% endtrans %}:</td>
						<td>
							<select name="ArchiveTimeHour" class="text ui-widget-content ui-corner-all smCombo">
							{% for x in 1..12 %}
								<option {% if global_settings != '' and global_settings.getArchiveTime.format('h') == x %}selected{% endif %}>{{ x }}:00
							{% endfor %}
							</select>
							<select name="ArchiveTimeAMPM" class="text ui-widget-content ui-corner-all smCombo">
								<option {% if global_settings != '' and global_settings.getArchiveTime.format('A') == 'AM' %}selected{% endif %}>{% trans %}AM{% endtrans %}
								<option {% if global_settings != '' and global_settings.getArchiveTime.format('A') == 'PM' %}selected{% endif %}>{% trans %}PM{% endtrans %}
							</select>
							<span class="elNote">{% trans %}Tasks: library archiver.{% endtrans %}</font>
						</td>
					</tr>

					<tr>
						<td class="exc">{% trans %}Run lifecycle and notifications tasks at{% endtrans %}:</td>
						<td>
							<select name="NotificationTimeHour" class="text ui-widget-content ui-corner-all smCombo">
							{% for x in 1..12 %}
								<option {% if global_settings != '' and global_settings.getNotificationTime.format('h') == x %}selected{% endif %}>{{ x }}:00
							{% endfor %}
							</select>
							<select name="NotificationTimeAMPM" class="text ui-widget-content ui-corner-all smCombo">
								<option {% if global_settings != '' and global_settings.getNotificationTime.format('A') == 'AM' %}selected{% endif %}>{% trans %}AM{% endtrans %}
								<option {% if global_settings != '' and global_settings.getNotificationTime.format('A') == 'PM' %}selected{% endif %}>{% trans %}PM{% endtrans %}
							</select> <br> 
							<span class="elNote">{% trans %}Tasks: document review items, escalation email notifications.{% endtrans %}</span> 
						</td>
					</tr>
				</table>
			</div>

			<h3 id="tdTab_6">{% trans %}Advanced{% endtrans %}</h3>
			<div>
				<table class="elmContainer" cellspacing="0">
					<tr>
						<td class="hdr" colspan="2">{% trans %}Folder/File Path Limit{% endtrans %}: </td>
					</tr>
					<tr>
						<td class="firstRw">{% trans %}Limit Path Length{% endtrans %}: </td>
						<td class="firstRw"><label><input type="checkbox" name="LimitFolderPathLength" value="1" {{ global_settings != '' and global_settings.getLimitFolderPathLength ? '' }}> {% trans %}Limit folder path length{% endtrans %}</label></td>
					</tr>
					<tr>
						<td>{% trans %}Path Length Limit{% endtrans %}: </td>
						<td><input type="text" name="FolderPathLength" class="text ui-widget-content ui-corner-all" value="{{ global_settings != '' ? global_settings.getFolderPathLength ? '255' }}" /></td>
					</tr>
					<tr>
						<td>{% trans %}DOCOVA Environment{% endtrans %}: </td>
						<td>
							<label> <input type="radio" name="DocovaEnvironment" show="cloud" hide="internal" class="hideShow" value="Cloud"> {% trans %}Cloud{% endtrans %}</label>
							<label> <input type="radio" name="DocovaEnvironment" show="internal" hide="cloud" class="hideShow" value="Internal" checked> {% trans %}Internal{% endtrans %}</label>
						</td>
					</tr>
					<tr class="internal">
						<td class="hdr" colspan="2">{% trans %}Directory Integration{% endtrans %}</td>
					</tr>
					<tr class="internal">
						<td colspan="2">
							<label><input class="hideShow" {% if global_settings != '' and global_settings.getSsoAuthentication %}checked{% endif %} type="checkbox" name="SSO_Authentication" value="1" /> {% trans %}Enable third party Single Sign On Authentication (Azure){% endtrans %} </label>
						</td>
					</tr>
					<tr class="internal">
						<td colspan="2">
							<label><input class="hideShow" {% if global_settings != '' and global_settings.getLDAPAuthentication %}checked{% endif %} type="checkbox" name="LDAP_Authentication" value="1" show="LDAP_Authentication" /> {% trans %}Use LDAP/AD for user authentication{% endtrans %} </label>
						</td>
					</tr>
					<tr class="internal LDAP_Authentication{% if global_settings == '' or global_settings.getLDAPAuthentication == false %} hidden{% endif %}">
						<td class="exc">{% trans %}LDAP directory path{% endtrans %}: </td>
						<td><input type="text" name="LDAP_Directory" class="text ui-widget-content ui-corner-all" value="{% if global_settings != '' %}{{ global_settings.getLDAPDirectory }}{% endif %}"></td>
					</tr>
					<tr class="internal LDAP_Authentication{% if global_settings == '' or global_settings.getLDAPAuthentication == false %} hidden{% endif %}">
						<td class="exc">{% trans %}Port{% endtrans %}: </td>
						<td><input type="text" class="text ui-widget-content ui-corner-all" name="LDAP_Port" value="{% if global_settings != '' %}{{ global_settings.getLDAPPort() ? global_settings.getLDAPPort() : '389' }}{% else %}389{% endif %}"></td>
					</tr>
					<tr class="internal LDAP_Authentication{% if global_settings == '' or global_settings.getLDAPAuthentication == false %} hidden{% endif %}">
						<td class="exc">{% trans %}LDAP base DN{% endtrans %}: </td>
						<td>
							<input type="text" class="text ui-widget-content ui-corner-all" name="ldap_base_dn" value="{% if global_settings != '' %}{{ global_settings.getLdapBaseDn }}{% endif %}">
							<span class="elNote">{% trans %}LDAP base dn e.g. "O=DLI"{% endtrans %}</span>
						</td>
					</tr>
					<tr class="internal LDAP_Authentication{% if global_settings == '' or global_settings.getLDAPAuthentication == false %} hidden{% endif %}">
						<td class="exc">{% trans %}Directory name presented to users{% endtrans %}: </td>
						<td><input type="text" class="text ui-widget-content ui-corner-all" name="ldapName" value="{{ global_settings != '' ? global_settings.getLdapDirectoryName : 'LDAP/AD' }}"></td>
					</tr>
					<tr class="internal">
						<td colspan="2">
							<label><input class="hideShow" type="checkbox" name="DOCOVA_Authentication" {% if global_settings != '' and global_settings.getDBAuthentication %}checked{% endif %} show="DOCOVA_Authentication" value="1" > {% trans %}Use DOCOVA for user authentication{% endtrans %}</label>
						</td>
					</tr>
					<tr class="internal DOCOVA_Authentication{% if global_settings != '' and not global_settings.getDBAuthentication %} hidden{% endif %}">
						<td class="exc">{% trans %}DOCOVA base DN{% endtrans %}: </td>
						<td>
							<input type="text" class="text ui-widget-content ui-corner-all" name="docova_base_dn" value="{% if global_settings != '' %}{{ global_settings.getDocovaBaseDn }}{% endif %}">
							<span class="elNote">{% trans %}DOCOVA base dn e.g. "/DOCOVA"{% endtrans %}</span>
							<span class="elNote">
								{% trans %}You can use either your own internal LDAP/AD directory to authenticate the users, or you can use DOCOVA to authenticate the users, or you can use both.{% endtrans %}<br >
								{% trans %}For example: authenticate your internal users with LDAP/AD and external users with DOCOVA.{% endtrans %}
							</span>
						</td>
					</tr>
					<tr class="cloud hidden">
						<td class="hdr" colspan="2">{% trans %}Cloud Settings{% endtrans %}:</td>
					</tr>
				</table>
			</div>
		</div>
	</form>
</body>
</html>