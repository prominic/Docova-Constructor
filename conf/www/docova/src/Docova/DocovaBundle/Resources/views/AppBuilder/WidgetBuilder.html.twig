<!doctype html>
<html>
<head>
<META content="0" http-equiv="expires">
<META content="0" http-equiv="cache-control">
<META content="no-cache" http-equiv="Pragma">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness-flat/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleForm.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/admin/styleNewAppBuilder.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/font-awesome/css/all.min.css') }}">
<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/Docova.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jqueryLayouts.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa_ieemu_xpath.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/admin/appBuilderJS.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/admin/sfWorkspaceCommonJsHeader.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/DesignImportFunctions.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/FormulaLanguage.js') }}"></script>
<script language="JavaScript" type="text/javascript">
var info = {
  "DocID" : "{{ widget ? widget.getId : '' }}",
  "DocKey" : "{{ widget ? widget.getId : '' }}",
  "DocumentNumber" : "",
  "ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
  "NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
  "PortalWebPath" : "{{ url('docova_homepage') }}",
  "PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
  "IsNewDoc" : "{{ widget ? '' : 1 }}",
  "isDocBeingEdited" : "true",
  "SSLState" : "{{ 'https' in app.request.getscheme|lower ? 'ON' : 'OFF' }}",
  "DocTypeID":"",
  "FormUNID":"{{ widget ? widget.getId : '' }}",
  "DesignElementType" : "Widget",
  "DesignElementLabel" : "Widget",
  "TriggerDesignCreation" : "{{ app.request.query.get('TriggerDesignCreation') }}"
};
function getinfovar(){
   return info;
}
InitVars(info);

var initFormName = "";
var editor = null;
var activeObj = null;
var elementEvents = [];
var currElem = null;
var dropIntervalId;
var currManualEntry;
var currRange; //current range in contenteditable div
var currSel;  //current selection in contenteditable div
var editor = null; //For ACE.
var $draghelper;
var initFormName = "";
var formID;
var resizefrompanel=false;
var defaultVal = null; //hold last val for.inputEntry class fields
var currEditAction = ""  //global so that it can be set in setColor where colorpicker utilizes a callback funtion to setTextColor
var is_ie = false;

$(function() {
	//---is IE browser
	is_ie = (detectIE() !== false);
	
	//---Loads the Widget design---
	LoadContent();
	$(".ui-layout-east").resizable({
		handles: 'w',
 		ghost: true,
 		resize:function( e,ui ){
 			$(".ui-resizable-helper").css("border-left", " 8px solid  rgb(221,221,221)");
 		},
 		stop: function(e, ui){
 			resizeNewPanelHorizontal(ui);	
			setSelectors();
			var bcWidth = $(".ui-layout-center").width() - 40;
			$("#eBreadCrumbs").css("width",  bcWidth + "px");
		}
	});
	
	$("#selectEmbView").change( function() {
		getViewType($(this).find("option:selected").text());
	});
	
	//calculate the widths of the panels - horizontal
	$("#eastpane").width("414px").css({
		'left' : 'auto',
		'right' : '0'
	});
	$("#inner-center").width($("#divContentSection").width() - $("#eastpane").outerWidth() - 15);
	
	$(window).resize(function(e) {
		e = e || event;
		if (e.target == window) {
			$("#inner-center").width($("#divContentSection").width() - $(".ui-layout-east").outerWidth() - 15);
			$(".ui-layout-east").css("left", "");
		}
	});

	$("#ltab").click(function(event){
		event.preventDefault();
		$(".selectable").removeClass("selected");
		$("#layout").sortable("disable");
		$("#layout-tabs").css("display", "");
		$('#element-type').html('{% trans %}Widget Properties{% endtrans %}');
		$("#tabsForm").css("display", "");
		$("#element_properties").css("display", "none");
		$('#prStyle').css('display', 'none');
		$('#prHideShow').css('display', 'none');
		$('#prEvents').css('display', 'none');
		$(".selector").hide();
		currElem = null; //make currElem nothing
	});

	$('h3.tool_box_header').on('click', function(){
		var header = '';
		var showTarget = $(this).attr('target');
		if (!currElem) {
			switch(showTarget) {
    			case 'prProperties':
    				$("#tabsForm").show();
    				$("#element_properties").css("display", "none");
    				header = '{% trans %}Widget Properties{% endtrans %}';
    				$('#element-type').html(header.replace(/^\w/, c => c.toUpperCase()));
    				break;
    			case 'prStyle':
    				$('#frmStyle').show();
    				$('#elmStyle').hide();
    				break;
    			case 'prHideShow':
        			break;
    			case 'prEvents':
    				break;
			}
			if ($('#'+showTarget).is(':hidden')) {
				$('#'+showTarget).slideDown();
			}
			else {
				$('#'+showTarget).slideUp();
			}
		}
		else {
			$('#frmStyle').hide();
			$("#tabsForm").hide();
			switch(showTarget) {
				case 'prProperties':
    				$("#element_properties").show();
					break;
				case 'prStyle':
    				$('#frmStyle').hide();
					$('#elmStyle').show();
					break;
				case 'prHideShow':
					break;
				case 'prEvents':
					break;
			}
			if ($('#'+showTarget).is(':hidden')) {
				$('#'+showTarget).slideDown();
			}
			else {
				$('#'+showTarget).slideUp();
			}
		}
	});

	//---Set tabs to tabs---
	$('#right-panel-tabs').tabs({
		collapsible: true,
		activate: function(e, ui) {
			if (!ui.newPanel.html()) {
				if ( e.cancelable) manualClose = true;
				$('#eastpane').width($('#vertical-tabs').width() + 10).css({
					'left' : 'auto',
					'right' : '0'
				});
			}
			else {
				$('#eastpane').width(414).css({
					'left' : 'auto',
					'right' : '0'
				});
				if ( e.cancelable) manualClose = false;
			}
			$("#inner-center").width($("#divContentSection").width() - $(".ui-layout-east").outerWidth() - 15);
			$(".ui-layout-east").css("left", "");
		}
	});

	var all$$funcs =  getAll$$Functions();
	$('span.longtext_values').on('click', function() {
		var $this = $(this);
		var target = $this.attr('target');
		var value = $('#'+target).val();
		if ($.trim(value) != '') {
			$('#divMultiLinePopup #multilineinput').text(value);
		}
		else {
			value = '';
			$('#divMultiLinePopup #multilineinput').text('');
		}
		var html = $('#divMultiLinePopup').html();
		var dlgTextInput = window.top.Docova.Utils.createDialog({
			id: "divDlgMultiLineInput",
			title: "{% trans %}Enter Script/Value{% endtrans %}",
			height: 250,
			width: 500,
			dlghtml: html,
			resizable: true,
			sourcewindow: window,
			sourcedocument: document,
			onOpen : function () 
			{
				
				var obj = $( "#divDlgMultiLineInput #docova_formula_helper" , window.top.document);
				var dlg = $("#divDlgMultiLineInput", window.top.document);
				var tbox = $("#divDlgMultiLineInput #multilineinput", window.top.document);
				var btn = $( "#divDlgMultiLineInput #btnInsertFormula", window.top.document );
				obj.autocomplete({
  					source: all$$funcs,
  					appendTo: dlg,
  					open : function () {
  						$("#divDlgMultiLineInput ul.ui-menu", window.top.document).width( $(this).innerWidth() ); 
  						$("#divDlgMultiLineInput ul.ui-menu", window.top.document).height( dlg.height() -30 ); 
  						$("#divDlgMultiLineInput ul.ui-menu", window.top.document).css("overflow-x", "hidden")
  					},
   					select : function(e, ui) {
  	  					if ($.trim(ui.item.value) != '')
  	  	  				{
      						if (tbox.val() != "" ){
      				  			tbox.val(tbox.val() + "\n" + $.trim(ui.item.value));
      				  		}else{
      				  			tbox.val($.trim(ui.item.value));
      				  		}
  	  	  				}
  	  				}
				});

				btn.on('click', function()
				{
					if ( trim(obj.val()) == "" ) return;

					if ( tbox.val() != "" ){
			  			tbox.val (tbox.val() + "\n" + $.trim(obj.val()) );
			  		}else{
			  			tbox.val ($.trim(obj.val()));
			  		}
				});

			},

			buttons: {
				"{% trans %}OK{% endtrans %}": function (){
					var tbox = $("#divDlgMultiLineInput #multilineinput", window.top.document);
					var input_value = tbox.val();
					$('#'+target).val(input_value);
					$this.text(input_value);
					setProperties();
					dlgTextInput.closeDialog();
				},
				"{% trans %}Cancel{% endtrans %}": function(){
					dlgTextInput.closeDialog();
				}
			}
		});
	});

	$('#layout').on('drop', function(e) {
		elementDropped(e);
	});

	$('#prStyle TH[expcol^="pr"]').on('click', function(){
		if ($('#prStyle TR.'+ $(this).attr('expcol')).first().is(':visible')) {
			$('#prStyle TR.'+ $(this).attr('expcol')).hide();
			$(this).children('i').prop('class', 'far fa-caret-right');
		}
		else {
			$('#prStyle TR.'+ $(this).attr('expcol')).show();
			$(this).children('i').prop('class', 'far fa-caret-down');
		}
	});

	//---Set add tab button function---
	$("#btnAddTab").button({
		text: false,
		label: "{% trans %}Add a new tab{% endtrans %}",
		icons: {primary: "ui-icon-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		addTab();
	});	
	//---Set delete tab button function---
	$("#btnDeleteTab").button({
		text: false,
		label: "{% trans %}Delete this tab{% endtrans %}",
		icons: {primary: "ui-icon-minus"}
	})
	.click(function( event ) {
		event.preventDefault();
		deleteTab();
	});	

	$("#btn-PrimaryIcon").button({
		text: false,
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		selectIcon("btn_PrimaryIcon");
	});
		
	$("#btn-SecondaryIcon").button({
		text: false,
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		selectIcon("btn_SecondaryIcon");
	});
		
	$("#btn-CellBorderApplyAll").button({
		text: false,
		label: "{% trans %}Apply border to all cells{% endtrans %}",
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		CellBorderApplyAll();
	});
	
	$("#btn-CellBorderReset").button({
		text: false,
		label: "{% trans %}Reset cell to default{% endtrans %}",
		icons: {primary: "ui-icon-squaresmall-minus"}
	})
	.click(function( event ) {
		event.preventDefault();
		CellBorderReset();
	});
	
	$("#btn-CellPaddingApplyAll").button({
		text: false,
		label: "{% trans %}Apply padding to all cells{% endtrans %}",
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		CellPaddingApplyAll();
	});

	$("#btn-CellColorApplyRow").button({
		text: false,
		label: "{% trans %}Apply color to row cells{% endtrans %}",
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		CellColorApplyRow();
	});

	$("#btn-CounterIcon").button({
		text: false,
		icons: {primary: "ui-icon-squaresmall-plus"}
	})
	.click(function( event ) {
		event.preventDefault();
		selectIcon("counterIcon");
	});
 
    $(".btnOpenApp") //view open app button
    	.button({
    		text: false,
    		icons: {primary: "ui-icon-copy"}
    	})
    	.click(function( event ) {
    		event.preventDefault();
    		ABOpenApp()
    	});

    $(".btnClearApp") //clear app buttons
		.button({
			text: false,
			icons: {primary: "ui-icon-arrowreturn-1-s"}
		})
		.click(function( event ) {
			event.preventDefault();
			ClearSelApp();
    	});

	//This establishes sortable for layout so that it can be used, then disables it.
	//Later code can then turn sortable on and off
	$("#layout").sortable();
	$("#layout").sortable("disable");
	
	//breadcrumb scoller
	$('.scrollleft').click(function() {
		$('#eBreadCrumbs').animate({
			scrollLeft: '-=153'
		}, 1000, 'easeOutQuad');
	});
	$('.scrollright').click(function() {
		$('#eBreadCrumbs').animate({
			scrollLeft: '+=153'
		}, 1000, 'easeOutQuad');
	});
	
	
	//show divContentSection
	$("#divContentSection").css("display", "block");
	if ( $("#FormUIStyle").val() == "System" ){
		$(".styleOverride").hide();
	}

	//special case where this document/form is being loaded with the sole intent of triggering the process of creating the back end design document
	if(docInfo && docInfo.TriggerDesignCreation && docInfo.TriggerDesignCreation != ""){
		doCreateDesignElement();
		window.location = "about:blank";  //clear the current contents
	}
	
	//Generate toolbar button html
	 loadToolBarButtons();
	 $("a[btnprimary='ui-icon-arrowreturnthick-1-w']").prop("title", "{% trans %}Undo{% endtrans %}");
	 
	 //Set for toolbar icons
	$( ".btngroup" ).buttonset();

	//set manualEntry behaviour
	$(".manualEntry").focus( function(event){
		$(this).prop("defaultValue", $(this).val());
		currManualEntry = $(this);
		var posleft = parseInt($(this).offset().left, 10) + parseInt($(this).outerWidth(),10);
		var postop = parseInt($(this).offset().top, 10) + 3;
	});
	
	//Set inputEntry behaviour
	$(".inputEntry").on('keypress', function(e) {
		if (e.keyCode == 13) {
			e.stopPropagation();
			var inputs = $('form[name=_AppFormBuilder]').find(":input:visible");
    		var idx = inputs.index(this);

    		if (idx == inputs.length - 1) {
        		inputs[0].select()
    		} else {
        		inputs[idx + 1].focus();
    		}
    		return false;
		}
	})
	.on('focus', function(e) {
		if (typeof $(this).val() == typeof undefined) {
			defaultVal = '';
		}
		else {
			defaultVal = $(this).val();
		}
	})
	.on ('blur', function(e){
		if ($(this).val() != defaultVal) {
       		$(this).effect("highlight", {color: "#008000"}, 1000);
    		setProperties();
		}
		defaultVal = null;
	});
	
	//---Set all buttons to prevent default---
	$('button').click(function( event ) {		
		event.preventDefault();
	});	

	$('#appelementSource').on('change', function() {
		switch($(this).val())
		{
			case 'F':
				$('#disp_appelement_source TD.frmLabel').html('{% trans %}Form Name{% endtrans %}:');
			break;
			case 'P':
				$('#disp_appelement_source TD.frmLabel').html('{% trans %}Page Name{% endtrans %}:');
			break;
			case 'V':
				$('#disp_appelement_source TD.frmLabel').html('{% trans %}View Name{% endtrans %}:');
			break;
		}

		if ($.trim($('#appelementLUApplication').val()) !== '')
		{
			getViewList('selectAppElementSource');
		}
	});

	$('#barcodeType').on('change', function() {
		if ($(this).val() == 'qrcode') {
			$('span.munits').text('px');
			$('TR.qrcode_hide').hide();
			$('TR.qrcode_show').show();
			$('#td_thickness_ratio').hide();
		}
		else {
			$('TR.qrcode_hide').show();
			$('TR.qrcode_show').hide();
			$('span.munits').text($('input[name="measureUnit"]:checked').val());
	   		if ($(this).val() == 'codabar' ||  $(this).val() == 'code39' || $(this).val() == 'code39ascii' || $(this).val() == 'i2of5') {
	   			$('#td_thickness_ratio').show();
	   		}
	   		else {
	   			$('#td_thickness_ratio').hide();
	   		}
		}
	});

	$('input[name="readableValue"]').on('click', function() {
		if ($(this).prop('checked') && $(this).val() == 'yes') {
			$('TR.text_visibility').show();
		}
		else {
			$('TR.text_visibility').hide();
		}
	});

	$('input[name="measureUnit"]').on('click', function() {
		if ($(this).prop('checked')) {
			$('span.munits').text($(this).val());
		}
	});
});

function LoadContent(){
	var nl = "\r\n";
	var temptype = docInfo.DesignElementType;
	var lctemptype = temptype.toLowerCase();
	
	if (docInfo.FormUNID && docInfo.FormUNID != ""){	
		var DesignDocUNID = docInfo.FormUNID;
		var elementURL = docInfo.PortalWebPath + "ReadContent/" + DesignDocUNID + "?OpenDocument&DesignElement=Widget&" + (new Date()).valueOf();	
	
		jQuery.ajax({
        	url: elementURL,
        	async: false, 
			success: function (results) {
    			//Get/Set formname
				jQuery("#DEName").val(jQuery(results).filter('#DEName').html());
				jQuery("#DEDescription").val(jQuery(results).filter('#DEDescription').html());
			
				jQuery("#layout").html(jQuery(results).filter("#DEHTML").html());
				jQuery('#layout iframe').each(function() {
					var tmpSrc = decodeURIComponent(jQuery(this).prop('src'));
					var tmpSrc = tmpSrc.replace("{{ '{{ path(\'docova_homepage\') }}' }}", '');
					jQuery(this).prop('src', tmpSrc);
				});
				adjustSourcePaths("full");
    
    			//-----Set the initFormName.  Use this global var to compare when saving or closing the form. If changed, the "old" design element will need to be deleted-----
    			initFormName = Docova.Utils.getField('DEName');
			}
		});
	}

	Init();
	//UpgradeCheck();
	return true;		
}

function Init() 
{
	//---Find any unlinked tiedto= attributes and link them
	$("[tiedto]").each(function(){
		if($(this).attr("tiedto") == ""){
			$(this).attr("tiedto", $(this).prev().prop("id"));
		}
	});

	//---selectors initially hidden---
	$(".selector").hide();
	
	$("#btn-Apply").click(function(event){
		setProperties();
	});
	
	$("#btn-Cancel").click(function(event){
		$(currManualEntry).val( $(currManualEntry).prop("defaultValue"));
	});

	//---context menu for fields
	$(document).on("contextmenu", function(e){ e.preventDefault(); e.stopPropagation();});
	$("#layout").on("contextmenu", function(e){ menuHandler(e); });

	//initialize mostly keystroke events for field sections
	initFieldsSections();
	bindElmOnFocus();
	
	//Initialize toolbar, mostly for keystroke events
	$("#divToolBar").keydown(function(e){
		e.preventDefault();
	});

	//---Resizable handles on table cells---
	$("table tr th:not(:last-child)").html("");
	resetRulers();
	
	//---Restrict characters that can be entered into element_id---
	$("#element_id").keyup(function(e) {
		var newstring = $(this).val().replace(/[^a-z0-9$_.\s]/gi, '').replace(/\s/g, '');
		$("#element_id").val(newstring);
	});
	
	//---Initiate dragstart on form controls
	$(".newElement").on("dragstart", function(e){
		if(!is_ie){ //if not IE, then use datatransfer
			e.originalEvent.dataTransfer.setData("text/html", $(this).prop("outerHTML"));
		}
	});

	setPropertiesTriggers();
	setSelectable();
	return;
}

function resizeNewPanelHorizontal( ui )
{
	var elem = ui.element.parent();
	var parentWidth = ui.element.parent().width();
	var divTwo = ui.element.prev();
	var id = ui.element.attr("id");
	var remainingSpace = parentWidth - ( ui.element.width() + 15);
	if (remainingSpace < 710) {
		remainingSpace = 710;
		ui.element.width(parentWidth - 690);
		$(".ui-layout-east").resizable();
	}
	else if (ui.element.width() <= 414) {
		$("#eastpane").width("414px").css({
			'left' : 'auto',
			'right' : '0'
		});
		$("#inner-center").width($("#divContentSection").width() - $("#eastpane").outerWidth() - 15);
		$(".ui-layout-east").resizable();
	}
    divTwo.width(remainingSpace);
	if (typeof setSelectors === 'function') { 
		setSelectors(); 
	}
	
	var bcWidth = jQuery(".ui-layout-center").width() - 35;
	jQuery("#eBreadCrumbs").css("width",  bcWidth + "px");

	if ($("#inner-center").width() > ($("#divContentSection").outerWidth() - $("#eastpane").outerWidth() - 40))
	{
		$("#inner-center").width($("#divContentSection").width() - $("#eastpane").width() - 15);
	}
}

function SaveWidget()
{
	var msg = "{% trans with {'%elabel%' : '" + docInfo.DesignElementLabel + "'} %}You are about to save this %elabel%{% endtrans %}.<br>{% trans %}Are you sure?{% endtrans %}";
	window.top.Docova.Utils.messageBox({
		prompt: msg,
		title: "{% trans %}Warning{% endtrans %}",
		width: 400,
		icontype : 2,
		msgboxtype : 4,
		onYes: function() {
			docInfo.IsNewDoc = "0"
			DoSaveWidget();
		},
		onNo: function() { 
			return false;
		}
	});	
}
</script>
</head>
<body text="#000000" bgcolor="#FFFFFF">
	<div id="divMultiLinePopup" style="display:none;">
		<input type="text" id="docova_formula_helper" placeholder = "Search $$DocovaScript functions" style="width:92%; margin-bottom:8px"></input> <i id="btnInsertFormula" title="Add Formula" class="fas fa-check"></i>
		<textarea id="multilineinput" style="width:98%; height:80%; outline:none; border:1px #CCC solid; border-radius:3px;"></textarea>
	</div>
	<form method="post" action="" name="_widgetBuilder">
		<div id="divContentSection" class="app-page" style="display: none;">
			<div class="ui-layout-center" id="inner-center">
				<div id="ltab" style="position:relative;">
					<div id="selector-topleft" class="selector" style="display: none;"></div>
					<div id="selector-topright" class="selector" style="display: none;"></div>
					<div id="selector-bottomleft" class="selector" style="display: none;"></div>
					<div id="selector-bottomright" class="selector" style="display: none;"></div>
        			<div id="layout" style="position: relative;" onpaste="catchPaste();">
        				<div id="divToolBar" style="min-height:31px; border: 1px solid #cfcfcf; margin-bottom: 5px;" ondrop="return false;" class="ui-widget-header"></div>
        				<div id="section_1" class="selectable" style="padding: 5px; overflow: hidden; background-color:#FFF;" elem="fields" elemtype="section" contenteditable=true>
        					<p class="selectable" elemtype="par" elem="par"></p>
        				</div>
        			</div>
        			<div id="footer">							
						<table style="border: 1px solid #B2B2B2; width:100%;">
							<tr>
								<td style="width: 10px; background-color: #D2D2D2"><i class="scrollleft far fa-caret-left" style="margin: 0px 3px 0px 3px; cursor: pointer; font-size: 14px;"></i></td>
								<td><div id="eBreadCrumbs" style="overflow: hidden;"></div></td>
								<td style="width: 10px; background-color: #D2D2D2"><i class="scrollright far fa-caret-right" style="margin: 0px 3px 0px 3px; cursor: pointer; font-size: 14px;"></i></td>
							</tr>
						</table>
					</div>
				</div>
				<!-- end div ltab -->
				<ul id="tdActionBar" style="top:5px; right:14px;">
					<li><a onclick="closeDocumentPrompt('{% trans %}Closing Page{% endtrans %}', '{% trans %}Would you like to save the changes to this page?{% endtrans %}'); return false;" href="" primary="ui-icon-close" secondary="">{% trans %}Close{% endtrans %}</a></li>
					<li><a onclick="SaveForm(true, false); return false;" href="" primary="ui-icon-disk" secondary="">{% trans %}Save{% endtrans %}</a></li>
					<li><a onclick="SaveForm(true, true); return false;" href="" primary="ui-icon-disk" secondary="">{% trans %}Save and Close{% endtrans %}</a></li>
					<li><a onclick="popUndo(); return false;" href="" primary="ui-icon-arrowreturnthick-1-w" secondary="" id="undoBtn"></a></li>
				</ul>
			</div>
			<!-- end inner-center -->
			<div class="ui-layout-east" id="eastpane" style="right:0;">
        		<div id="right-panel-tabs">
        			<ul id="vertical-tabs">
        				<li title="{% trans %}Properties{% endtrans %}"><a href="#frm-properties" class="far fa-tasks"></a></li>
        				<li title="{% trans %}Elements{% endtrans %}"><a href="#frm-elements" class="far fa-th"></a></li>
        			</ul>
        			<div id="frm-properties">
        			{% include 'DocovaBundle:AppBuilder:sfBuilderCommonSection.html.twig' with {'docForm' : '', 'elmType' : 'Widget'} %}
					</div>
        			<div id="frm-elements">
                       	<div class="classified">
		                    <a href="#" elem="appelement" eltype="field" class="newElement" draggable="true"><i class="far fa-code"></i><span class="elemLabel">{% trans %}App Elements{% endtrans %}</span></a>
                        </div>
                        <div class="classified">
		                    <a href="#" elem="chart" eltype="field" class="newElement" draggable="true"><i class="far fa-chart-pie"></i><span class="elemLabel">{% trans %}Chart{% endtrans %}</span></a>                    
		                    <a href="#" elem="googlemap" eltype="field" class="newElement" draggable="true"><i class="far fa-map-marker"></i><span class="elemLabel">{% trans %}Google Map{% endtrans %}</span></a>
		                    <a href="#" elem="barcode" eltype="field" class="newElement" draggable="true"><i class="far fa-barcode"></i><span class="elemLabel">{% trans %}Barcode{% endtrans %}</span></a>
		                    <a href="#" elem="weather" eltype="field" class="newElement" draggable="true"><i class="far fa-cloud"></i><span class="elemLabel">{% trans %}Weather{% endtrans %}</span></a>
		                    <a href="#" elem="counterbox" eltype="field" class="newElement" draggable="true"><i class="fab fa-digital-ocean"></i><span class="elemLabel">{% trans %}Counter Box{% endtrans %}</span></a>
                        </div>
        			</div>
        			<!-- end frm-elements -->
				</div>
			</div><!-- end eastpane -->
		</div>  <!--- end Content section -->
	</form>
</body>
</html>