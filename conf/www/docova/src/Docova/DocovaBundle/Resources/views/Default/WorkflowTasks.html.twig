<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Workflow</title>
<META content="0" http-equiv="expires">
<META content="0" http-equiv="cache-control">
<META content="no-cache" http-equiv="Pragma">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleFormsViews.css') }}"	type="text/css" />
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/popupmenu.js') }}" charset="UTF-8"></script>
{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
<script language="JavaScript" type="text/javascript">
var info = {
	"UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
	"UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
	"UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
	"UserRoles" : "$$WebClient;[User]",
	"HTTP_Referer" : "{{ url('docova_hometop') }}?ReadForm",
	"Query_String" : "ReadForm",
	"Query_String_Decoded" : "ReadForm",
	"Path_Info_Decoded" : "{{ path('docova_workflowtasks') }}?ReadForm",
	"ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
	"ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
	"NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
	"PortalWebPath" : "{{ path('docova_homepage') }}",
	"PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}"
};
function getinfovar() {
	return info;
}
function SetDataDisplay(obj){
	var msgSpan = document.getElementById("No" + obj.id + "Msg");
	var dataDiv = document.getElementById("div" + obj.id);
	xmlDom = obj.XMLDocument;
	//-------------------------------------------------------		
	var node = xmlDom.selectSingleNode( "Documents/Document" );
	if (node == null)
	{
		msgSpan.style.display="";
		dataDiv.style.display="none";
	}
	else
	{
		msgSpan.style.display="none";
		dataDiv.style.display="";
	}
}

function OpenDocument(rs, row,docToOpen){
	var frame = parent.document.getElementById("fraLeftFrame");
     if (frame.scrollWidth == 0){
     	window.parent.fsSubLayout.cols = "251,*";	
     }
	rs.AbsolutePosition = row
	var libID = rs.Fields("LibraryKey").Value;
	var libPath = getLibraryURL(libID, true);
	if(!libPath)
		{
			alert("Could not locate the source library for this document.");
			return; 
		}
	var folderID = rs.Fields("FolderID").Value
	//var docKey = rs.Fields("ParentDocKey").Value
	if(docToOpen == "Parent" || docToOpen == "" || docToOpen == undefined) {
		var docKey = rs.Fields("ParentDocID").Value;
	} else {
		var docKey = rs.Fields("Unid").Value;
	}

	var loadQs = "&loaddoc=" + docKey;
	var url = libPath + "/luAllByDocKey/" + folderID + "?OpenDocument&syncnav=1" + loadQs;
	window.top.fraToolbar.document.getElementById("TD_3").className="out"; // to remove highlighting of tab
	window.top.fraToolbar.document.getElementById("TD_2").className="clicked"; 	// to highlight the tab
	parent.frames["fraLeftFrame"].LoadFrame(url );
}

function SetRowColor(obj, mode){

	if (mode == true){
		obj.runtimeStyle.backgroundColor='#dfefff';
		obj.title = "Click to open the document";
	}else{
		obj.runtimeStyle.backgroundColor='';
		obj.title = "";
	}	
}

function HasValidRecords(xmlObj)
{
	try{
		var rs = xmlObj.recordset;
		rs.MoveFirst;
		var unid = rs.FIELDS("Unid").Value;
		return true;
	}
	catch(e){
		return false;
	}
			
}

function DeleteRecords(xmlObj)
{
	if(!HasValidRecords(xmlObj)) {return false;}
	var rs = xmlObj.recordset;
	var idList = "";
	rs.MoveFirst;
	while(!rs.EOF)
		{
		if(rs.FIELDS.Count > 0)
			{
				if(rs.FIELDS("Selected").Value=="-1") //highlight current item
				{
					 idList += "<Unid>" + rs.FIELDS("Unid").Value + "</Unid>";
				}
			}
		rs.MoveNext
		}

	if(! idList) {return;}
	
	var request="";

	//--collect the xml for all nodes to be processed
	request += "<Request>";
	request += "<Action>REMOVE</Action>";
	request += "<UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>";
	request += idList;
	request += "</Request>";
	PostData(request);
	xmlObj.src=xmlObj.src;
}

function PostData(xmldoc) 
{ 
	//var xmlhttp = new ActiveXObject ("Microsoft.XMLHTTP"); 
	var url = docInfo.ServerUrl + "/" + docInfo.NsfName + "/LibraryServices?OpenAgent",
		status = '';

	$.ajax({
		'type' : 'POST',
		'url' : url,
		'processData' : false,
		'async' : false,
		'dataType' : 'xml',
		'data' : xmldoc
	})
	.done(function( data ) {
		if (data.xml) {
			var statusNode = responseXml.selectSingleNode('/Result[@id="Status"]');
			status = (statusNode)? statusNode.text : "";
			var errorNode = responseXml.selectSingleNode('/Result[@id="ErrMsg"]');
			var error = (errorNode)? errorNode.text : "";
			if(status == "FAILED")
			{
				alert("Data could not be submitted to server.\rError: " + error);
			}
		}
	})
	.fail(function(jqXHR) {
		alert("Data could not be submitted to server. Status code: " + jqXHR.status);
		status = 'FAILED';
	});

	if (status == 'OK') {
		return true;
	}
	return false;
/*
	xmlhttp.Open("POST", url , false); 
	xmlhttp.Send(xmldoc); 
	var responseXml = xmlhttp.responseXML;
	if(xmlhttp.status == 200)
		{
		//check for errors etc
		if(responseXml)
		{
			var statusNode = responseXml.selectSingleNode('/Result[@id="Status"]');
			var status = (statusNode)? statusNode.text : "";
			var errorNode = responseXml.selectSingleNode('/Result[@id="ErrMsg"]');
			var error = (errorNode)? errorNode.text : "";
			if(status == "FAILED")
				{
				alert("Data could not be submitted to server.\rError: " + error);
				xmlhttp = null;
				return false;
				}
		}
		xmlhttp = null;
		return true;
		} 
		else
		{
		alert("Data could not be submitted to server. Status code: " + xmlhttp.status);
		xmlhttp = null;
		return false;
		}
*/
} 
</script>
</head>
<body text="#000000" bgcolor="#FFFFFF" SCROLL="no" onload="InitVars(info); document.recalc(true);">
	<form action="">
		<!-- Subform -- thingFactory -->
		<script src="{{ path('docova_dlextensions') }}" language="javascript"></script>
		<!-- End Subform -- thingFactory -->
		<div id="divHeaderSection" class="ButtonSectionStyle">
			<div class="HeadingTitle">Document Life Cycle - Workflow Actions for {{ user.getUserNameDnAbbreviated }}</div>
		</div>
		<!------------------------------------------------------------>
		<div id="divContent" style="width: expression(document.body.clientWidth); height: expression(document.body.clientHeight - document.all.divHeaderSection.offsetHeight); position: absolute; top: expression(document.all.divHeaderSection.offsetHeight); padding: 0px; 0 px 0px 0px; margin: 0px 0px 0px 0px; overflow: hidden; padding: 10px;">
			<!------------------------------------------------------------>
			<table id="tblGridTable" style="width: 100%; height: 100%; border-collapse: collapse; table-layout: fixed;">
				<tr>
					<td colspan="2" style="padding: 5px 5px 5px 0px; width: 50%;">
						<fieldset style="height: 100%; width: 100%;">
							<legend class="SubheadingTitle">Pending Actions&nbsp;</legend>
							<div style="width: expression(( document.all.tblGridTable.clientWidth) -18); height: expression(( document.all.tblGridTable.clientHeight/ 2) -40); border: 1px solid #efefef; margin-top: 5px; overflow: auto;">
								<xml id="CurrentActions" ondatasetcomplete="SetDataDisplay(this)" src="{{ path('docova_xViewData') }}?ReadForm&view=workflowTasks.xml&lkey={{ user.getUserNameDnAbbreviated|url_encode }}wfItem"></xml>
								<!------------------------------------------------------------>
								<span id="NoCurrentActionsMsg" style="display: none; font: 13px verdana, arial;">You have no pending document workflow actions.</span>
								<div id="divCurrentActions" style="display: none; width: 100%;">
									<!------------------------------------------------------------>
									<table id="tblCurrentActions" datasrc="#CurrentActions"	border=0 style="width: 100%; border-collapse: collapse;">
										<!------------------------------------------------------------>
										<thead>
											<tr>
												<td width="80" class="ListHeader">Start</td>
												<td width="80" class="ListHeader">Due</td>
												<td class="ListHeader">Action</td>
												<td width="120" class="ListHeader">Folder Name</td>
												<td width="80" class="ListHeader">From</td>
											</tr>
										</thead>
										<!------------------------------------------------------------>
										<tr	onClick="OpenDocument(CurrentActions.recordset, this.recordNumber);" onMouseOver="SetRowColor(this, true)" onMouseOut="SetRowColor(this, false)">
											<td class="ListItem">
												<span mode="0" datafld="wfStartDate" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td class="ListItem">
												<span mode="0" datafld="wfDueDate" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td class="ListItem">
												<span mode="0" datafld="Title" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td class="ListItem">
												<span mode="0" datafld="FolderName" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td class="ListItem">
												<span mode="0" datafld="wfOriginator" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
										</tr>
									</table>
								</div>
							</div>
						</fieldset>
					</td>
				</tr>
				<tr>
					<td colspan="2" style="padding: 5px 5px 5px 0px;">
						<fieldset style="height: 100%; width: 100%;">
							<legend class="SubheadingTitle"">Completed Actions&nbsp;</legend>
							<div style="width: expression(( document.all.tblGridTable.clientWidth) -18); height: expression(( document.all.tblGridTable.clientHeight/ 2) -40); border: 1px solid #efefef; margin-top: 5px; overflow: auto;">
								<!------------------------------------------------------------>
								{# src="{{ path('docova_homepage') }}workflowTasks.xml?OpenPage&RestrictToCategory={{ user.getUserNameDnAbbreviated|url_encode }}wfLog&{{ 'now'|date('m/d/Y h:i:s A') }}")" #}
								<xml id="CompletedActions" ondatasetcomplete="SetDataDisplay(this)" src=""></xml>
								<!------------------------------------------------------------>
								<span id="NoCompletedActionsMsg" style="display: none; font: 13px verdana, arial;">No completed workflow actions have been found for you.</span>
								<div id="divCompletedActions" style="display: none; width: 100%;">
									<!------------------------------------------------------------>
									<table id="tblCompletedActions" datasrc="#CompletedActions" border=0 style="width: 100%; border-collapse: collapse;">
										<!------------------------------------------------------------>
										<thead>
											<tr>
												<td width="30" align="left" class="ListHeader">&nbsp;</td>
												<td width="80" class="ListHeader">Completed</td>
												<td class="ListHeader">Action</td>
												<td width="160" class="ListHeader">From</td>
											</tr>
										</thead>
										<!------------------------------------------------------------>
										<tr onMouseOver="SetRowColor(this, true)" onMouseOut="SetRowColor(this, false)">
											<td class="ListItem">
												<span style="width: 100%; font: 11px Verdana, Arial; color: #000080;">
													<input type="checkbox" name="docSelect" id="docSelect" datafld="Selected" />
												</span>
											</td>
											<td onClick="OpenDocument(CompletedActions.recordset, this.recordNumber);" class="ListItem">
												<span mode="0" datafld="wfCompletedDate" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td onClick="OpenDocument(CompletedActions.recordset, this.recordNumber);" class="ListItem">
												<span mode="0" datafld="Title" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
											<td	onClick="OpenDocument(CompletedActions.recordset, this.recordNumber);" class="ListItem">
												<span mode="0" datafld="wfOriginator" style="width: 100%; font: 11px Verdana, Arial; color: #000080;"></span>
											</td>
										</tr>
									</table>
								</div>
							</div>
						</fieldset> <!------------------------------------------------------------>
						<div id="divButtonBar" style="position: absolute; top: expression(parentNode.offsetTop +8); left: expression(parentNode.scrollLeft + parentNode.clientWidth-this.clientWidth); background-color: white; padding: 2px 5px 2px 5px;">
							<button	style="width: 22px; height: 22px; cursor: hand; border: 1px solid #cccccc;"	title="Delete selected"
								onClick="DeleteRecords(CompletedActions);"
								onMouseDown="this.runtimeStyle.border='1px groove';"
								onMouseOver="this.runtimeStyle.border='1px ridge';"
								onMouseOut="this.runtimeStyle.border='1px solid #cccccc';">
								<img src="{{ asset('bundles/docova/images/TrashFull.gif') }}">
							</button>
						</div>
					</td>
				</tr>
			</table>
		</div>
	</form>
</body>
</html>
