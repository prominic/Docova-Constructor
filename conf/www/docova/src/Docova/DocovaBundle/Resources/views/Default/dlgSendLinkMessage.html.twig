<!doctype html>
<html>
<head>
<title>{% trans %}Email Notification{% endtrans %}</title>
<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="0">
<META HTTP-EQUIV="EXPIRES" CONTENT="0">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleViewDialogBase.css') }}" type="text/css" />
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}" ></script>

<style type="text/css">
.ui-icon-group{
	width: 2.4em !important;
	height: 2.4em !important;
	background-image: url("{{ asset('bundles/docova/images/icons/vwicn004.gif') }}") !important;
	background-repeat: no-repeat !important;
	vertical-align: bottom !important;
}
</style>
{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
<script language="JavaScript" type="text/javascript">
var dlgDoc = null;
{% if (folder.getDocTitle is defined and folder.getFolder.getLibrary.getPublicAccessEnabled is defined and folder.getFolder.getLibrary.getPublicAccessEnabled) %}
    {% set publicAccessEnabled=true %}
{% elseif folder.getDocTitle is defined and folder.getApplication is defined and folder.getApplication and folder.getApplication.getPublicAccessEnabled %}
    {% set publicAccessEnabled=true %}
{% elseif (folder.getDocTitle is not defined and folder.getLibrary.getPublicAccessEnabled is defined and folder.getLibrary.getPublicAccessEnabled and user_access.docrole=='Manager') %}
	{% set publicAccessEnabled=true %}
{% else %}
	{% set publicAccessEnabled=false %}
{% endif %}

{% if (publicAccessEnabled and folder.getDocTitle is defined and folder.getFolder.getLibrary.getPublicAccessExpiration is defined) %}
    {% set publicAccessExpiration= "now" | date('Y-m-d H:i:s') | date_modify("+"~folder.getFolder.getLibrary.getPublicAccessExpiration~" day") | date('Y-m-d')%}
{% elseif publicAccessEnabled and folder.getDocTitle is defined and folder.getApplication.getPublicAccessExpiration is defined %}
    {% set publicAccessExpiration= "now" | date('Y-m-d H:i:s') | date_modify("+"~folder.getApplication.getPublicAccessExpiration~" day") | date('Y-m-d')%}
{% elseif (publicAccessEnabled and folder.getDocTitle is not defined and folder.getLibrary.getPublicAccessExpiration is defined ) %}
	{% set publicAccessExpiration= "now" | date('Y-m-d H:i:s') | date_modify("+"~folder.getLibrary.getPublicAccessExpiration~" day") | date('Y-m-d')%}
{% else %}
	{% set publicAccessExpiration= "now" | date('Y-m-d H:i:s') | date_modify("+1 day") | date('Y-m-d') %}
{% endif %}
  
var info = {
	"UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
	"UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}", 
	"UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
	"UserRoles" : "$$WebClient;[User]",
	"HTTP_Referer" : "",
	"DocID" : "{{ folder.getId }}",
	"SourceType" : "{{ folder.getDocTitle is defined ?  'Document' : 'Folder' }}",
	"Query_String" : "OpenForm&ParentUNID={{ folder.getId }}",
	"Query_String_Decoded" : "OpenForm&ParentUNID={{ folder.getId }}",
	"Path_Info_Decoded" : "{{ path('docova_sendlinkmessage') }}?OpenForm&ParentUNID={{ folder.getId }}",
	"ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
	"ServerUrl"  :"{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
	"NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
	"PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length - 1] }}",
	"PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
	"DocAccessRole" : "{{ user_access is defined ? user_access.docrole : 'unknown' }}",	
	"PublicAccessEnabled" : "{{ publicAccessEnabled ? 'true' : 'false' }}",
	"PublicAccessExpiration" : "{{ publicAccessExpiration }}",
	"ParentUNID" : "{{ app.request.query.get('ParentUNID') }}",
	"ReplicaId" : "",
	"HomeServer" : "" // get from global settings
};
function getinfovar() {
	return info;
}

var dlgParams = new Array();
var parentWin = window.top.Docova.GlobalStorage["divDlgSendDocMessage"].sourcewindow;
var parentDoc = window.top.Docova.GlobalStorage["divDlgSendDocMessage"].sourcedocument;
var params = parentWin.dlgParams;
var selectedDocIds = (params[3]) ? params[3] : new Array();
var dlgForm = null; //declare global variable to represent current form
var dlgDoc = null;
var maxTries=300;
var attempts=0;
var retValues;

$(document).ready(function(){
    $("#btnRecipients").button({
    	text: false
    }).click(function(event){
        
    	parent.Docova.Utils.showAddressDialog({ fieldname: "SendTo", dlgtype: "multi", sourcedocument:document});
    	event.preventDefault();
	});

	if ($("#CopyPW").length) {
    	if(window.top.Docova.IsPluginAlive){
    		$("#CopyPW").css("display", "");
    	}else{
    		$("#CopyPW").css("display", "none");
    	}
	}
});

function copyPassword(){
	var pw = $("#Password").val();
	var flag = window.top.DocovaExtensions.SetCBData("text", pw);
	alert("{% trans %}The selected Public Access password has been copied to your clipboard.{% endtrans %}");
}

function createPAP(){	
	try{
    	$("#publicAccessId").val('');
    	$("#publicAccessError").val('');
    
    	var name =  $("#publicAccessName").val();
    	if (name==null || name=='')
    		name = $("#SendTo").val();
    	
    	var requirePassword =$("#pwd").css('display')=='inline';	
    	if (!requirePassword)
    		$("#Password").val('');
    
    	var password =  $("#Password").val();	
    	var expiration = $("#publicAccessExpiration").val();		
        var defaultExpiration = info.PublicAccessExpiration;		
    
    	var attachments = $("#publicAccessFiles").val();
    	
        if (!info.DocID){
    	    alert("The source id of the target document or folder must be provided.");
    	    return;
        }	
        
    	var postData = 	{
        	'Action'           : 'createPAP',
        	'Source_Id'        : info.DocID,
        	'Source_Type'      : info.SourceType,
        	'Source_Password'  : (password ? password : ''), 
            'Expiration_Date'  : (expiration && expiration!='' ? expiration : defaultExpiration ),
            'Attachment_Names' : (attachments ? attachments : '')
    	};
    	
    	var $post = $.ajax({
    		  type: 'POST',
    		  url: info.ServerUrl+"/"+info.NsfName+"/PublicAccessAdmin",
    		  data: postData,	
    		  async: false
    	})			
    	.error (function() {
    		alert("Unable to post request");
    	})
    	.success ( function(data) {
    			document.getElementById("publicAccessId").value=data;
    	});
	}
	catch (e){
		alert("An error has occurred attempting to created a public access profile! - "+e);
	}
			
	
}
function showPublicAccessDialog() {

	//set the dialog arguments
	dlgParams.length = 0;
	dlgParams.push(window);	
	
	var name=$("#publicAccessName").val();
	var files = $("#publicAccessFiles").val();
	var expiration = $("#publicAccessExpiration").val();
	//if not available assign the default expiration
	if (!expiration)
		expiration = info.PublicAccessExpiration;
	var accesstype = $("#publicAccessType").val();
	name ? dlgParams.push(name) : dlgParams.push("");
	files ? dlgParams.push(files) : dlgParams.push("");
	expiration ? dlgParams.push(expiration) : dlgParams.push("");
	accesstype ? dlgParams.push(accesstype) : dlgParams.push("");

	//pass the selected document ids
	dlgParams[5] = selectedDocIds;

	//URL
	var dlgUrl = "dlgPublicAccessSettings?OpenForm&ParentUNID=" + info.DocID + "&SourceType="+info.SourceType;
	if (selectedDocIds && selectedDocIds.length<50 && selectedDocIds.length>0){
		dlgUrl+="&SelectedDocIds="+selectedDocIds.join();
   }

	if (selectedDocIds.length>50){
		alert("Please note that the individual attachment files displayed are restricted to the first 50 documents selected only\n\n"+
			  "Please select 50 or fewer documents to display attachment content for selected documents or deselect all selected documents to display attachment content for all folder documents.");

		//trim the array down to 50 selected items
	   	for (var i=selectedDocIds.length;i>50;i--){
	   	   	  selectedDocIds.pop();
	   	}
	}


	window.top.Docova.GlobalStorage["divPASettingsParams"] = { "params" : dlgParams };
	
	var fadlg = window.top.Docova.Utils.createDialog({
		id: "divPASettings", 
		url: dlgUrl,
		title: "{% trans %}Public Access Options{% endtrans %}",	
		height: 425,
		width: 400, 
		useiframe: true,
		sourcedocument: document,
		sourcewindow: window,
		buttons: {
        	"{% trans %}Apply{% endtrans %}": function(e) {
				var dlgWin = window.top.$("#divPASettingsIFrame")[0].contentWindow;

				var result = dlgWin.completeWizard();
				if(result){		
					jQuery("#publicAccessName").val( result.Name );
					jQuery("#publicAccessFiles").val( result.Files );
					jQuery("#publicAccessExpiration").val( result.Expiration );
					jQuery("#publicAccessType").val( result.Type);
				
					fadlg.closeDialog();
				}
			},					
        	"{% trans %}Close{% endtrans %}": function() {
				fadlg.closeDialog();
        	}
      	}
	});
 }
 
document.oncontextmenu = stopContextMenu;
// For convenience
function stopContextMenu() { return false; }

function completeWizard()
{
	createPAP();
	closeWindow();
}

function closeWindow(){
	//read the service response parameters
	var publicAccessId = document.getElementById("publicAccessId");
	publicAccessId = publicAccessId.value ? publicAccessId.value : null;
	var publicAccessError = document.getElementById("publicAccessError");
	publicAccessError = publicAccessError.value ? publicAccessError.value : null;

	//timeout after 300 attempts	waiting for public access service response  (9s)
	//If we do not have a response yet, call this function again after pausing
	if(attempts<maxTries && (publicAccessId==null && publicAccessError==null) ){
		//retry until we have a response or time out
     	window.setTimeout(closeWindow,300);	
		attempts++;
		return;
	}	
	else if (attempts>=maxTries){
		alert("{% trans %}A timeout has occured creating a public access profile{% endtrans %}");
		return;
	}
		
	if (publicAccessError!=null){
		alert("{% trans %}An error occurred attempting to create public access profile{% endtrans %} - "+publicAccessError);
		return;
	}
	
	//compute the public access link and provide as a parameter if necssary
	if (publicAccessId==null){
		alert("{% trans %}A public access ID could not be created for the public access profile.{% endtrans %}");
		return;
	}else{
		var publicAccessLink = getPublicAccessLink( publicAccessId );
		var tmpurl = "HomeFrame?ReadForm&goto=" + parentWin.docInfo.LibraryKey + "," + parentWin.docInfo.FolderID;
		var folderPath = parentWin.docInfo.ServerUrl + parentWin.docInfo.PortalWebPath + "/publicAccess?OpenPage&gotourl=" + tmpurl;
		var sendto = $.trim($("#SendTo").val());
		var subject = $.trim($("#Subject").val());
		var body = $.trim($("#Body").val());

		var request = "<?xml version='1.0' encoding='UTF-8' ?>";
		request += "<Request>";
		request += "<Action>";
		request += "SENDPUBLICACCESSMSG";
		request += "</Action>";
		request += "<SendTo><![CDATA[" + sendto +  "]]></SendTo>";
		request += "<Subject><![CDATA[" + subject +  "]]></Subject>";
		request += "<Body><![CDATA[" + body +  "]]></Body>";
		request += "<UserName><![CDATA[" + parentWin.docInfo.UserName +  "]]></UserName>";	
		request += "<FolderName><![CDATA[" + parentWin.docInfo.FolderName +  "]]></FolderName>";
		request += "<FolderPath><![CDATA["  + folderPath +  "]]></FolderPath>";
		request += "<Unid>" + parentWin.docInfo.DocID +  "</Unid>";
		request += "<PublicAccessLink><![CDATA["  + publicAccessLink +  "]]></PublicAccessLink>";
		request += "</Request>"
		parentWin.DoSendDocumentMessage(request);
		params[2].closeDialog(); // params[2] holds this dialog object in window.top set in SendDocumentMessage function of wDocument so it can be closed here.
	}
}

function getPublicAccessLink(publicAccessId){
	if (!publicAccessId)
		return '';
     //compute the  public access link
	var protocol = info.PublicAccessSSL=='Yes' ?  'https://' : 'http://';
	var host = info.PublicAccessWebServer;
	var port = info.PublicAccessPort=='' ? '' : ":"+info.PublicAccessPort;
	var fqdn = protocol+ host + port;
	var link = info.ServerUrl+"/"+info.NsfName+"/publicAccess?PublicAccessID="+publicAccessId;
	return link;
}


// -------------------------- OnLoad initialization ----------------------------------------------
function initDialog()
{
	//Global variables for convenience
	InitVars(info);
	jQuery("#Subject").val(params[0]);
	jQuery("#Body").val(params[1]);
	jQuery("#Body").focus();
}
</script>
</head>

<body text="#000000" bgcolor="white" class="dlgBody" SCROLL="no" onload="initDialog();">
	<table class="DlgTable" width="100%" border="0" cellspacing="0" cellpadding="0">
		<tr valign="top">
			<td class="DlgContentCell" width="100%">
				<div id="dlgContentNh" class="ui-widget" style="width:100%;">
					{% trans %}Recipients{% endtrans %}:&nbsp&nbsp
					<button style="padding:5px; margin:2px" id="btnRecipients" class="ui-icon-group"></button>
					<div style="float:left">
						<textarea style="width: 375px; margin-bottom:5px;padding:2px;" class="txFld" id="SendTo" name="SendTo" cols="50" rows = "3" ></textarea>
					</div>
					<div style="float:left; margin-top:8px">
						{% trans %}Subject{% endtrans %}:<br/>
						<input name="Subject" value="Re: {{ folder.getDocTitle is defined ? folder.getDocTitle : folder.getFolderName }}" id="Subject" class="txFld" style="width:375px;margin-bottom:5px;padding:2px;">
					</div>
					<div style="float:left; margin-top:8px">
						{% trans %}Message{% endtrans %}:<br/>
						<textarea style="width:375px;padding:2px;" class="txFld" id="Body" name="Body" rows = "5"></textarea>
					</div>
					<div style="float:left; padding-top:8px">{% trans %}Append{% endtrans %}: </div>
					<div style="float:left; padding-top:6px">
						<span id="contentOptions">
							<label><input type="radio" name="ContentInclude" value="L" checked onclick="var isEnabled = this.value=='P';
if (isEnabled){
	document.getElementById('publicAccessTable').style.display = 'inline';	
	document.getElementById('publicAccessOptions').style.display = 'inline';	
}
else{
	document.getElementById('publicAccessTable').style.display = 'none';	
	document.getElementById('publicAccessOptions').style.display = 'none';	
}"
							id="ContentInclude">{% trans %}Link to document(s){% endtrans %}</label><br>
{% if folder.getDocTitle is defined and app.request.query.get('FwdAtt') != '0' %}
							<label><input type="radio" name="ContentInclude" value="A" onclick="var isEnabled = this.value=='P';
if (isEnabled){
	document.getElementById('publicAccessTable').style.display = 'inline';	
	document.getElementById('publicAccessOptions').style.display = 'inline';	
}
else{
	document.getElementById('publicAccessTable').style.display = 'none';	
	document.getElementById('publicAccessOptions').style.display = 'none';	
}"
							id="ContentInclude" >{% trans %}File Attachments{% endtrans %}</label><br>
{% endif %}
							
{%  if publicAccessEnabled %}
		<label>
		<input type="radio" name="ContentInclude" value="P" onclick="var isEnabled = this.value=='P';
		if (isEnabled){
			document.getElementById('publicAccessTable').style.display = 'inline';	
			document.getElementById('publicAccessOptions').style.display = 'inline';	
		}
		else{
			document.getElementById('publicAccessTable').style.display = 'none';	
			document.getElementById('publicAccessOptions').style.display = 'none';	
		}"
									id="ContentInclude">{% trans %}Allow Public Access to File(s){% endtrans %}
		</label>
{% endif %}
						</span>
					</div>
{% if publicAccessEnabled %}
					<div id="publicAccessTable" class="txFldLabel" style="padding:0px;margin:0px;display:none;float:left;"> 
						<span style="display:none">
							<input name="AccessID" value="" id="AccessID" class="txFld" style="width:240px;margin-bottom:5px;padding:2px;disabled:true" disabled=true title="{% trans %}A common name for this access profile{% endtrans %}">
						</span>
						<div style="float:left; padding-top:8px">
							<label><input type="checkbox" name="SecurityOptions" value="1" checked onclick="if (document.getElementById('SecurityOptions').checked)
	document.getElementById('pwd').style.display='inline';
else{
	document.getElementById('pwd').style.display='none';
}"
							id="SecurityOptions" title="{% trans %}Security options for this profile"{% endtrans %}>{% trans %}Require Password{% endtrans %}</label>
							<span id='pwd' style:"display:none;">
							{% set pwd = '' %}							
							{% for i in 1..10 %}
    							{%  set pwd = pwd ~ random("A!BC$FJ5TX*1234D6G7K8L9") %} 
							{% endfor %}
		               		<input name="Password" value="{{ pwd }}" id="Password" class="txFld" style="width:125px;margin-bottom:5px;padding:2px;" title="{% trans %}An optional access password{% endtrans %}">
							</span>	
							<span id="publicAccessOptions" style="color:blue;text-decoration:underline;cursor:pointer;" onclick="showPublicAccessDialog()">{% trans %}Options{% endtrans %}</span>&nbsp;&nbsp;
							<span id="CopyPW" onclick="copyPassword()" style="display:none; color:blue;text-decoration:underline;cursor:pointer;">{% trans %}Copy{% endtrans %}</span>
						</div>

						<input name="DefaultPassword" value="" id="DefaultPassword" class="txFld" type='hidden'>
						<input name="DefaultExpiration" value="" id="DefaultExpiration" type='hidden'>
						<input name="publicAccessError" value="" id="publicAccessError" type="hidden">
						<input name="publicAccessId" value="" id="publicAccessId" type="hidden">
						<input name="publicAccessLink" value="" id="publicAccessLink" type="hidden">
						<input name="publicAccessName" value="" id="publicAccessName" type="hidden">
						<input name="publicAccessFiles" value="" id="publicAccessFiles" type="hidden">
						<input name="publicAccessExpiration" value="" id="publicAccessExpiration" type="hidden">
						<input name="publicAccessType" value="" id="publicAccessType" type="hidden">
					</div>
					<div id="dlgPublicAccessOptions" style="display:none;"></div>
{% endif %}
				</div>
			</td>
		</tr>

		<tr valign="top">
			<td id="buttonCell" class="DlgButtonCell" width="100%" valign="middle">
				<div align="right"> </div>
			</td>
		</tr>
	</table>
	<!------------------ SUBFORM sfKillCache ------------>
	<!------------------Microsoft suggestion to force no cacheing of documents------------>
	<HEAD>
	<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
	<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="0">
	<META HTTP-EQUIV="EXPIRES" CONTENT="0">
	</HEAD>
	<!------------------END SUBFORM sfKillCache  ------------>
</body>
</html>
