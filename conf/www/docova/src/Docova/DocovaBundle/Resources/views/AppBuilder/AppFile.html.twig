<!doctype html>
<html>
<head>
<title>Image File</title>
<META content="0" http-equiv="expires">
<META content="0" http-equiv="cache-control">
<META content="no-cache" http-equiv="Pragma">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness-flat/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/admin/styleAdministration.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/uploader.css') }}?OpenPage" type="text/css" />
<link rel="stylesheet" href="{{ asset('bundles/docova/font-awesome/css/all.min.css') }}">
<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/Docova.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa_ieemu_xpath.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/admin/appBuilderJS.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/js/admin/sfWorkspaceCommonJsHeader.js') }}"></script>
<script language="JavaScript" type="text/javascript">
var isImageUpdated = false;
var info = {
  "DocID" : "{{ appFile ? appFile.getId : '' }}",
  "DocKey" : "{{ appFile ? appFile.getId : '' }}",
  "DocumentNumber" : "",
  "ThreadKey" : "{{ appFile ? appFile.getId : '' }}",
  "UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
  "UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
  "UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
  "UserNamesList" : "",
  "TodayDate" : "{{ 'now'|date(settings.getDefaultDateFormat|lower|replace({'mm' : 'm', 'dd' : 'd', 'yyyy' : 'Y'})) }}",
  "isNewDoc" : "{{ appFile ? '' : 'true'}}",
  "isDocBeingEdited" : "true",
  "Mode" : "",
  "LoadAction" : "",
  "HTTP_Referer" : "{{ url('docova_appbuilderframes') }}",
  "Query_String" : "openForm",
  "Query_String_Decoded" : "openForm",
  "Path_Info_Decoded" : "{{ path('docova_appimages') }}?openForm",
  "ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
  "ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
  "NsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 2] }}",
  "PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length -1] }}",
  "PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length-2] }}",
  "SSLState" : "{{ 'https' in app.request.getscheme|lower ? 'ON' : 'OFF' }}",
  "AppID" : "{{ app.request.query.get('AppID') }}",
  "CreatedBy" : "",
  "CreatedDate" : "",
  "LastModifiedBy" : "",
  "LastModifiedDate" : "",
  "LastModifiedServer" : "",
  "DocAccessLevel" : "7",
  "CanDeleteDocuments" : "true",
  "DocAccessRole" : "Manager",
  "DbAccessLevel" : "7",
  "AllowedFileExtensions" : "",
  "MaxFiles" : "0",
  "isEditable" : "true",
  "DocovaEnvironment" : "",
  "DesignElementType" : "Image",
  "DesignElementLabel" : "Image",
  "isUIDoc" : true
};
function getinfovar(){
   return info;
}
InitVars(info);

$(document).ready(function(){
    $( "button" ).button().click(function( event ) {
		event.preventDefault();
    });

    if (docInfo.DocKey) {
    	if(docInfo.isDocBeingEdited == "true"){
//    		var fpath = docInfo.ServerUrl + "/" + docInfo.NsfName + "/" + $("#DEName").val()
//    		$("#imgPreview").prop("src", fpath )
    	}else{
    		var fpath = docInfo.ServerUrl + "/" + docInfo.NsfName + "/" + $("#dspDEName").text()
    		$("#imgPreview").prop("src", fpath )
    	}
    }
});

function SaveAndClose(refreshView){
	//If the image was not updated, then no need to submit a request to update the image resource, just save(andclose).
	if(isImageUpdated == false){
		var uidoc = Docova.getUIDocument();
		uidoc.save({ andclose: true});
		return;
	}
	var agentName = "DesignServices"
	//---- Check to see this design element is okay to save to prevent overwriting system design elements---
	/**
	****** CANNOT BE APPLIED IN SE *******************************
	var elementOK = checkDesignElement("image", agentName)
	if(elementOK == "NOTOK"){
		alert("An image design element with this name is already in use. Please attach a different file.")
		return;
	}
	*/

	//Before saving the document, import the image as an image resource
	var fname = $("#DEName").val();
	var ext = fname.split('.');
	var imgArray = $("#imgPreview").prop("src").split(",") // eg. data:image/jpeg;base64, encoded text
	var imgComponents = imgArray[0].split(";")
	var imgMimeData = imgComponents[0].split(":")
	var mimetype = imgMimeData[1]; //should returnjust the mimetype like "image/jpeg".
	
	if(mimetype == "image/jpeg" || mimetype == "image/png"){ //jpeg and png mimetypes get jpeg tags
		var imgStartTag = "<jpeg>"
		var imgEndTag = "</jpeg>"
	}else{ //gif mimetypes get gif tags
		var imgStartTag = "<gif>"
		var imgEndTag = "</gif>"	
	}

	if (ext.lenght < 2) {
		if (mimetype == 'image/jpeg') {
			ext = 'jpg';
		}
		else if (mimetype == 'image/png') {
			ext = 'png';
		}
		else {
			ext = 'gif';
		}
	}
	
	var request = "<Request><Action>SAVEIMAGERESOURCE</Action><UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>";
	request += "<AppID>" + docInfo.AppID + "</AppID>";
	request += "<FileUNID>" + docInfo.DocKey+ "</FileUNID>";
	request += "<ProhibitDesignUpdate>" + ($('#ProhibitDesignUpdate').prop('checked') ? 'PDU' : '') + "</ProhibitDesignUpdate>";
	request += "<Document>";
	request += "<imgName><![CDATA[" + fname + "]]></imgName>";
	request += "<imgContent><![CDATA[" + imgArray[1] + "]]></imgContent>";
	request += '<imgExtension><![CDATA['+ ext +']]></imgExtension>';
	request += "<imgMimeType>" + mimetype + "</imgMimeType>";
	request += "</Document>"
	request += "</Request>"
	
	var result = SubmitRequest(request, agentName);
	if(result !== false){
		var frmAction = $('form').attr('action');
		if (frmAction.indexOf('&FileUNID=&') > -1) {
			frmAction = frmAction.replace('&FileUNID=&', '&FileUNID=' + result + '&');
			$('form').attr('action', frmAction);
		}
		var uidoc = Docova.getUIDocument();
		uidoc.save({ andclose: true});	
	}else{
		alert("{% trans %}There was an issue saving the image.  Please contact an Administrator.{% endtrans %}")
		return;
	}
}

function CloseDocument(refreshView){
	if(window.parent.fraTabbedTable && window.parent.fraTabbedTable.objTabBar){
		window.parent.fraTabbedTable.objTabBar.CloseTab(docInfo.DocID);
	}	
}

function previewFile() {
	var preview = $('img');
	var file    = $("#fileattach")[0].files[0];
	var reader  = new FileReader();

	reader.addEventListener("load", function () {
		$("#imgPreview").prop("src", reader.result)
		$("#imgBody").text(reader.result)
	}, false);

	if(file) {
		//check that file extension is only gif/png/jpg/jpeg
		var ext = (file.name).split('.').pop().toLowerCase();
		if($.inArray(ext, ['gif','png','jpg','jpeg']) == -1) {
    			alert('{% trans %}Invalid file type.  Only jpg, jpeg, gif and png are allowed.{% endtrans %}');
    			return;
		}
	
		if($.trim($("#DEName").val()) == ""){ //only change the filename if it is blank
			$("#DEName").val(file.name);
		}
		$("#FileSize").val(file.size);
		$("#dispFileSize").text(file.size);
		reader.readAsDataURL(file);
		
		isImageUpdated = true; //if the image was updated, then set this flag, only want to create the ImageResource is flag is true in the save and close function
  	}
}

//check to unsure this is a design element we can update
function checkDesignElement(type, agentName){
	var elementname = "";
	var appPath = docInfo.NsfName
	
	if(type == "view"){ //view's name is in ViewName field
		elementname = $("#ViewName").val();
	}else if(type == "image"){
		elementname = $("#DEName").val();
	}else{ //all other elements, form, subform, dialog, page...use the dsnFormName field for their element name
		elementname = $("#dsnFormName").val();
	}
	
	var request = "<Request><Action>CHECKDESIGNELEMENT</Action>";
	request += "<Document>";
	request += "<ElementType><![CDATA[" + type + "]]></ElementType>";	
	request += "<ElementName><![CDATA[" + elementname + "]]></ElementName>";
	request += "<AppPath>" + appPath + "</AppPath>";
	request += "</Document>";
	request += "</Request>";
	
	var result = SubmitRequest(request, agentName);
	
	return result;
}

function SubmitRequest(request, agentName){
	//send the request to server
	var processUrl = docInfo.ServerUrl + "/" + docInfo.NsfName + "/" + agentName  + "?OpenAgent";
	var httpObj = new objHTTP();
	if(!httpObj.PostData(request, processUrl) || httpObj.status=="FAILED"){
		HideProgressMessage();
		return false;
	}
	return (httpObj.status == 'OK' && httpObj.results.length) ? httpObj.results[0] : false;
}
</script>
</head>
<body text="#000000" bgcolor="#FFFFFF">
	<form method="post" action="{{ path('docova_appimages') }}?editDocument&FileUNID={{ appFile ? appFile.getId }}&AppID={{ app.request.query.get('AppID') }}" name="_AppFile">
		<div id="FormHeader" style="background-color: white; padding-top: 2px; padding-bottom: 2px; border-bottom: 1px solid #BBBBBB; display:none;">
			<table border=0 cellspacing=0 cellpadding=0 width=100%>
				<tr>
					<td id="tdActionBar">
						<a onclick="SaveAndClose(true); return false;" href="" primary="ui-icon-check" secondary="">{% trans %}Save and Close{% endtrans %}</a>
						<a onclick="closeDocumentPrompt('Closing document', 'Would you like to save the changes to this document?'); return false" href="" primary="ui-icon-close" secondary="">{% trans %}Close{% endtrans %}</a>
						<a onclick="$('#fileattach').click(); return false;" href="" primary="ui-icon-image" secondary="">{% trans %}Add an Image{% endtrans %}</a>
					</td>
				</tr>
			</table>
		</div>
		<div id="divContentSection" class="ui-widget">
			<span id="lblFileTemplateFormTitle" class="bold verdana eighteen">{% trans %}Image File{% endtrans %}</span>
			</br>
			<table class="tblFields" width="100%" border="0" cellspacing="0" cellpadding="0">
				<tr valign="top">
					<td width="24%" bgcolor="#FFFFFF"><span class="frmLabel" id="lblFileName">{% trans %}Filename{% endtrans %}:</span></td>
					<td width="44%" bgcolor="#FFFFFF"><span id="dispDEName"><input name="DEName" value="{{ appFile ? appFile.getFileName : '' }}" id="DEName" style="width: 250px;"></span></td>
					<td width="32%" bgcolor="#FFFFFF">
						<label> <input type="checkbox" name="ProhibitDesignUpdate" value="PDU" {{ appFile and appFile.getPDU ? 'checked="checked"' : '' }} id="ProhibitDesignUpdate">{% trans %}Prohibit Design Update{% endtrans %}</label>
					</td>
				</tr>
				<tr valign="top">
					<td width="24%" bgcolor="#FFFFFF"><span class="frmLabel" id="lblFileSize">{% trans %}File Size{% endtrans %}:</span></td>
					<td width="76%" bgcolor="#FFFFFF" colspan="2"><span id="dispFileSize">{{ fileSize }}</span>&nbsp;&nbsp;bytes<br> 
						<font face="Verdana"> <input name="FileSize" value="" id="FileSize" style="width: 250px; display: none;"></font>
					</td>
				</tr>
				<tr valign="top">
					<td width="100%" bgcolor="#FFFFFF" colspan="3">
						<div style="display: none;">
							<input type="file" id="fileattach" name="fileattach" onchange="previewFile()"></input>
						</div>
						<span class="frmLabel" id="lblPreview">{% trans %}Image preview{% endtrans %}:</span> <br><br>
						<img id="imgPreview" src="{{ appFile and fileContent ? 'data:image/png;base64,' ~ fileContent|raw : '' }}" alt=""> <br><br>
						<span id="hlpFileTemplateFileAttachment" class="hlpText">{% trans %}Only one file attachment of jpg, gif or png is allowed here{% endtrans %}.</span>
					</td>
				</tr>
			</table>
			</br>
			<div style="display: none;">
				<input name="DEType" value="Image" id="DEType">
			</div>
			<div id="divImgBody" style="display: none;">
				<textarea name="imgBody" id="imgBody" rows="7" cols="50"></textarea>
			</div>
			{% trans %}Last modified by{% endtrans %}: {{ appFile ? appFile.getModifiedBy.getUserNameDnAbbreviated : user.getUserNameDnAbbreviated }} on {{ appFile ? appFile.getDateModified.format('d/m/Y h:i:s A') : 'now'|date('d/m/Y h:i:s A') }}
			<div style="display: none;">{{ appFile ? appFile.getId : '' }}</div>
		</div>
		<!-- end of divContentSection -->
	</form>
</body>
</html>