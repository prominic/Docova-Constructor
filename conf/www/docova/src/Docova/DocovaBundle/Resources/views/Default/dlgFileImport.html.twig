<!doctype html><html>
<head>
<title>{% trans %}File Import{% endtrans %}</title>
<META HTTP-EQUIV="Pragma" CONTENT="no-cache"> <META HTTP-EQUIV="CACHE-CONTROL" CONTENT="0"> <META HTTP-EQUIV="EXPIRES" CONTENT="0">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/smoothness/jquery-ui.css') }}">
<link rel="stylesheet" href="{{ asset('bundles/docova/css/styleDialogBase.css') }}" type="text/css" />
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery.js') }}"></script>
<script type="text/javascript" language="JavaScript" src="{{ asset('bundles/docova/jquery/jquery-ui.js') }}" ></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/sarissa_ieemu_xpath.js') }}"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/commonFunctions.js') }}" charset="UTF-8"></script>
<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/js/Docova.js') }}"></script>
{% include 'DocovaBundle:Default:scriptMessagesTranslation.html.twig' %}
{% set date_format = settings.getDefaultDateFormat|replace({'MM' : 'm', 'DD' : 'd', 'YYYY' : 'Y'}) %}
<script language="JavaScript" type="text/javascript">
var fileArray = new Array(); //array to store the file objects
var currentAction="select";
window.returnValue=false;
var docTypeOptions=null;
var info = {
	"UserName" : "{{ user.getUserNameDn|replace({'\\': '\\\\'}) }}",
	"UserNameAB" : "{{ user.getUserNameDnAbbreviated|replace({'\\': '\\\\'}) }}",
	"UserNameCN" : "{{ f_Name("[CN]", user.getUserNameDnAbbreviated)|replace({'\\': '\\\\'}) }}",
	"UserRoles" : "$$WebClient;[User]",
	"IsSuperuser" : "", 
	"HTTP_Referer" : "",
	"SystemKey" : "{{ settings.getSystemKey }}",
	"Query_String" : "OpenForm&ParentUNID={{ folder.getId }}",
	"Query_String_Decoded" : "OpenForm&ParentUNID={{ folder.getId }}",
	"Path_Info_Decoded" : "{{ path('docova_fileimport') }}?OpenForm&ParentUNID={{ folder.getId }}",	
	"ServerName" : "{{ app.request.server.get('HTTP_HOST') }}",
	"ServerUrl" : "{{ app.request.getscheme }}://{{ app.request.server.get('HTTP_HOST') }}",
	"NsfName" : "{{ path('docova_homepage')[1:] }}",
	"PortalWebPath" : "{{ path('docova_homepage')[:path('docova_homepage')|length - 1] }}",
	"PortalNsfName" : "{{ path('docova_homepage')[1:path('docova_homepage')|length - 1] }}",
	"Date" : "{{ "now"|date(date_format) }}",
	"DateTime" : "{{ "now"|date('m/d/Y h:i:s A') }}",
	"FolderID" : "{{ folder.getId }}",
	"NoRefresh" : ""
};
function getinfovar() {
	return info;
}
var fileArray = new Array(); //array to store the file objects
var currentAction="select";
window.returnValue=false;
var docTypeOptions=null;
//===================== uploader file add handler =======================

function createAttachmentList()
{
	var max=DLIUploader1.FileCount();
	var pathName="";
	var newDocObj = null;
	for (var a = 1; a <= max; a++){
		pathName = DLIUploader1.FileName(a);
		newDocObj = new objDocument();
		newDocObj.FilePath = pathName;
		newDocObj.FileType = DLIUploader1.GetFileType(a);
		newDocObj.FileLength =  DLIUploader1.GetFileLength(a);
		newDocObj.FileDate = DLIUploader1.GetFileDate(a);
		fileNameArray = pathName.split("\\");
		newDocObj.Filename= fileNameArray[ fileNameArray.length - 1 ];
		newDocObj.Subject = newDocObj.Filename;
		
		fileArray[fileArray.length] = newDocObj;				
	}
	DLIUploader1.SelectAll();
	DLIUploader1.RemoveSelectedFiles();
}

//========== Finish button click handler ============
function completeWizard(cb)
{
	if(DLIUploader1.FileCount==0){
			alert("{% trans %}Please select the files to import.{% endtrans %}");
			return false;
		}
	if(Docova.Utils.getField( "DocumentTypeKey")=="N"){
			alert("{% trans %}Please select the document type.{% endtrans %}");
			return false;
		}
	
	//var actionBase = document.forms["_Document"].action.split("&typekey=");
	//document.forms["_Document"].action = actionBase[0] + "&typekey=" + thingFactory.GetHTMLItemValue( "DocumentTypeKey");
	createAttachmentList();
	uploadFiles(cb);

	
	return true;
}


function uploadFilesEx(currentFile, fullList , cb){

	DLIUploader1.GenerateThumbnails = docTypeOptions.GenerateThumbnails;			
		if(docTypeOptions.ThumbnailWidth != ""){
			DLIUploader1.ThumbnailWidth = docTypeOptions.ThumbnailWidth;
		}
		if(docTypeOptions.ThumbnailHeight != ""){
			DLIUploader1.ThumbnailHeight = docTypeOptions.ThumbnailHeight;					
		}					
			
		DLIUploader1.UploadFile(currentFile.FilePath, currentFile.Filename, currentFile.FileDate, currentFile.FileSize, currentFile.FileType);
		fileindex = DLIUploader1.GetFileIndex(currentFile.FilePath);
		OFileDate = DLIUploader1.GetFileDate(fileindex);
		Docova.Utils.setField({field: "Subject", value: currentFile.Subject});
		Docova.Utils.setField({field:"OFileNames", value: currentFile.Filename});
		Docova.Utils.setField({field:"OFileDates", value:OFileDate});		

		container = this;
		retValue = DLIUploader1.Submit({
			Navigate: false, 
			GetResults: false,
			onOk: function() {
					fullList.splice(0,1);
					if ( fullList.length == 0) 
					{
							if(docTypeOptions.UpdateFtIndex=="1"){
								updateFtIndex();
							}
							cb.call(this );
					}else{
						var currentFile = fullList[0];
						DLIUploader1.RemoveFile(1);
						uploadFilesEx(currentFile, fullList , cb);
					}
			},
			onOtherwise: function(){
					alert ( "File Import Cancelled.");
					cb.call(this);
			}
		} );

}

function uploadFiles(cb)
{
	var retValue;
	var fileindex = "";
	var thumbindex = "";
	var OFileDate = "";
	
	
	var cont = true;
	var processed = 1;
	
	
	var currentFile = fileArray[0];
	uploadFilesEx(currentFile, fileArray , cb);
	return;
}

//---------------------- object to store file/document info----------
function objDocument()
{
	this.Subject="";
	this.Filename="";
	this.OFileNames="";	
	this.FilePath="";
	this.FileLength = "";
	this.FileType = "";
	this.FileDate = "";
}

//------------ doc type options object
function objDocumentType()
{
	this.Description="";
	this.UpdateFtIndex="";
	this.GenerateThumbnails="";
	this.ThumbnailWidth="";
	this.ThumbnailHeight="";
}

//------------ get selected doc type options
function loadTypeOptions(selectObj)
{
	var key = selectObj.options[ selectObj.selectedIndex ].value;

	if(key == ""){return false;}
	var httpObj = new objHTTP();
	
	var request = "<Request>";
	request += "<Action>GETTYPEINFO</Action>";
	request += "<UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>";
	request += "<TypeKey>" + key + "</TypeKey>";	
	request += "</Request>";	

	var url=  docInfo.ServerUrl + docInfo.PortalWebPath + "/LibraryServices?openAgent";
	if(!httpObj.PostData(request, url)){return false;}	
	if(httpObj.status!="OK"){return false;}
	if(httpObj.resultCount == 0){return false;}
	
	docTypeOptions.Description= httpObj.results[1];
	docTypeOptions.UpdateFtIndex = httpObj.results[2];
	docTypeOptions.GenerateThumbnails= httpObj.results[3];
	docTypeOptions.ThumbnailWidth= httpObj.results[4];	
	docTypeOptions.ThumbnailHeight= httpObj.results[5];
}

//---- index update request
function updateFtIndex()
{
	//--- processing agent url
	var url = docInfo.ServerUrl + "/" + docInfo.NsfName + "/LibraryServices?OpenAgent";
	var request="";

	//--build the update request
	request += "<Request>";
	request += "<Action>UPDATEFTINDEX</Action>";
	request += "<UserName><![CDATA[" + docInfo.UserNameAB + "]]></UserName>";
	request += "</Request>";
	ShowProgressMessage("{% trans %}Updating full text search index. Please wait{% endtrans %}...");
	var httpObj = new objHTTP();
	
	if(httpObj.PostData(request, url))
	{
	 if(httpObj.status=="OK") //all OK
		{
			HideProgressMessage();
			return true;
		}
	}
	
	HideProgressMessage();
	return false;
}
</script>
</head>

<body text="#000000" bgcolor="white" class="dlgBody" SCROLL="no" onload="// set default values
InitVars(info);
docTypeOptions = new  objDocumentType();
//doc.DLIUploader1.AddFile();">
	<form method="post" action="{{ path('docova_fileimport') }}?OpenForm&amp;ParentUNID={{ folder.getId }}&amp;Seq=1" enctype="multipart/form-data" name="_dlgFileImport">
		<link rel="stylesheet" href="{{ asset('bundles/docova/font-awesome/css/all.min.css') }}">
		<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.ui.widget.js') }}" charset="UTF-8"></script>
		<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.fileupload.js') }}" charset="UTF-8"></script>
		<script language="JavaScript" type="text/javascript" src="{{ asset('bundles/docova/jquery/jquery.iframe-transport.js') }}" charset="UTF-8"></script>
		<script language="JavaScript" type="text/javascript" src ="{{ asset('bundles/docova/jquery/jQueryFileDownload.js') }}"></script>
		<script language="JavaScript" type="text/javascript" src ="{{ asset('bundles/docova/js/Uploader.js') }}"></script>
		<link rel="stylesheet" type="text/css" href="{{ asset('bundles/docova/css/uploader.css') }}">
		<span style="display:none;">
			<input name="Subject" value="" class="txFld" style="width: 382px;"> 
			<input name="OFileNames" value="">
			<input name="OFileDates" value="">
			<input name="SyncCreate" value="">
			<input name="SyncRemoveFile" value=""> 
			<input name="SyncUnid" value="">
			<input name="tmpAddedFiles" value="" id="tmpAddedFiles">
			<input name="tmpEditedFiles" value="" id="tmpEditedFiles">
		</span>
		<div id="dlgContentNhs" style="padding:10px 10px 10px 10px;font-size: 11px; font-family: verdana, arial, helvetica, sans-serif;">
			<div style="font: bold 11px verdana, arial, helvetica, sans-serif; margin-bottom:5px;">
				<IMG SRC= "{{ asset('bundles/docova/images/folder-open.gif') }}" border=0 align=top>{{ folder.getFolderName }}
			</div>
			<table style="width:530px;" cellpadding="0" border="0" cellspacing="0">
				<tr>
					<td>
						<span style="font-size: 11px; color: black; font-family: verdana, arial, helvetica, sans-serif; ">{% trans %}Files to import (a document will be created for each file){% endtrans %}:</span>
					</td>
					<td width="210px" align="right">
						<button type="button" onclick="DLIUploader1.AddFile();" value="{% trans %}Add Files{% endtrans %}" id="btnAddFiles" class="txButton" style="margin-bottom:3px;"></button>
						<button type="button" onclick="DLIUploader1.RemoveSelectedFiles();" value="{% trans %}Remove Files{% endtrans %}" id="btnRemoveFiles" class="txButton"></button>
					</td>
				</tr>
			</table>
			<!--------------------------------------------- DLI Uploader Section ---------------------------------------------------->
 			<input name="MultiFileCtrlStorage" value="" style="display:none">
			<input name="RefreshStorage" value="" style="display:none"> 
			<input id="BaseUpld" style="display: none" type="file" name="Uploader_DLI_Tools[]"> 
			<div align=right id="divUploaderButtons-1" style="right: 20px; top: 5px; font:11px Verdana, Arial; z-index:1;">
				<span align=left style="padding-right: 20px" id="uploaderMode" >{% trans %}Mode{% endtrans %} : 
					<span id="upmode" style="font-weight:normal">{% trans %}Basic{% endtrans %}</span>
				</span>
			</div>
			<div class="ui-widget ui-widget-content itemcontainer" id="attachDisplay" style="height: 200px"></div>
		</div>
		<!--------------------------------------------------------------------------------------------------------->
		<table style="margin-top:5px;" cellpadding="0" border="0" cellspacing="0">
			<tr>
				<td>
					<span style="font-size: 11px; color: black; font-family: verdana, arial, helvetica, sans-serif; ">{% trans %}Import as document type{% endtrans %}:</span>
				</td>
				<td width="350" align="right">
					<select name="DocumentTypeKey" onchange="loadTypeOptions(this)" id="DocumentTypeKey" style="width: 340px; ">
						<option value="N">----- {% trans %}Select Document Type{% endtrans %} ----- 
						{% if doc_types|length > 0 %} 
							{% for option in doc_types %}
						<option value="{{ option.getId }}">{{ option.getDocName }} 
							{% endfor %} 
						{% endif %}
					</select>
				</td>
			</tr>
		</table>
	<script type="text/javascript">
	$(document).ready(function()
	{
		$.support.cors = true;
		DLIUploader1= new Docova.Uploader({ 
				divId : "attachDisplay",
				AttachmentNames : "",
				AttachmentLengths:  "",
				AttachmentDates:  "{% trans %}Incorrect data type for operator or @Function: Time/Date expected{% endtrans %}",
				Height: "160",
				FileCtrlId: "BaseUpld",
				ListType: "D",
				
			});
		DLIUploader1.init();
		$( "#btnAddFiles" )
				.button({
					text:false,
					label: "Add Files"
		});
		$( "#btnRemoveFiles" )
				.button({
					text:false,
					label: "Remove Files"
		});
	});
	</script>
	<!------------------ SUBFORM sfKillCache ------------>
	<!------------------Microsoft suggestion to force no cacheing of documents------------>
	<HEAD>
		<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
		<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="0">
		<META HTTP-EQUIV="EXPIRES" CONTENT="0">
	</HEAD>
	<!------------------END SUBFORM sfKillCache  ------------>
	</form>
</body>
</html>
