<?php
namespace Docova\DocovaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * PublicAccessResourcesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PublicAccessResourcesRepository extends EntityRepository
{
	public function getPublicAccessResource($pai){
		$qb = $this->createQueryBuilder("par");
		$qb->select("par")
		->where("par.id=?1")
		->setParameter(1, $pai);
		$result= $qb->getQuery()->getResult();
		if (!empty($result) && !empty($result[0]))
			return $result[0];
		else
			return null;
	}
	
	public function getExpired(){
		$qb = $this->createQueryBuilder("par");
		$date = new \DateTime();
		$qb->select("par")		
		->where("par.Expiration_Date < ?1")
		->setParameter(1, $date->format("Y-m-d H:i:s"));
		$result= $qb->getQuery()->getResult();
		if (!empty($result) && !empty($result[0]))
			return $result;
		else
			return null;
	}
	
	public function isPublic($pai){
		$qb = $this->createQueryBuilder("par");
		$qb->select("par")
		->where("par.id=?1")
		->setParameter(1, $pai);
		$result= $qb->getQuery()->getResult();
		if (!empty($result) && !empty($result[0])){
			$ph = $result[0]->getPasswordHash();
			if (empty($ph))
				return true;
			else
				return false;			
		}
		return false;
	}
	public function getPublicAccessSource($pai,$passwordHash){
		$qb = $this->createQueryBuilder("par");
		$qb->select("par")
		->where("par.id=?1")
		->setParameter(1, $pai);
		$result= $qb->getQuery()->getResult();
		if (!empty($result) && !empty($result[0])){
			$resource = $result[0];	
			$resourcePasswordHash =$resource->getPasswordHash(); 		
			if (!empty( $resourcePasswordHash ) && $resourcePasswordHash!=$passwordHash){
			    throw new \Exception("Invalid password");	
			}			
			
		    $sourceType = $resource->getSourceType();
			if ($sourceType=="Document"){
				$dr = $this->_em->getRepository("DocovaBundle:Documents");
				return $dr->find($resource->getSourceId());
			}
			else if ($sourceType=="Folder") {
				$dr = $this->_em->getRepository("DocovaBundle:Folders");
				return $dr->find($resource->getSourceId());
			}
		}
		else
			throw new \Exception("Invalid access id");
	}
}