<?php
namespace Docova\DocovaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * @author javad rahimi
 * ReviewItemsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReviewItemsRepository extends EntityRepository 
{
	/**
	 * Get pending review items for specific document and user
	 * 
	 * @param integer $document
	 * @param integer $user
	 * @return ReviewItems|mixed
	 */
	public function getPendingReviewItem($document, $user)
	{
		$query = $this->createQueryBuilder('RI')
			->join('RI.pendingReviewers', 'R')
			->where("RI.Document = :document AND R.id = :user AND RI.status ='Pending'")
			->setParameters(array('document' => $document, 'user' => $user))
			->getQuery();
		
		$result = $query->getOneOrNullResult();
		return $result;
	}
	
	/**
	 * Get pending review items for a user
	 * @param string $user
	 * @return array
	 */
	public function getUserPendingReviewItems($user)
	{
		$query = $this->createQueryBuilder('RI')
			->join('RI.pendingReviewers', 'R')
			->where("R.id = :user AND RI.status ='Pending'")
			->setParameter('user', $user)
			->getQuery();
		
		$result = $query->getResult();
		return $result;
	}
	
	/**
	 * Get document reviewers which status is pending
	 * 
	 * @param string $document
	 * @return string[]
	 */
	public function getPendingDocumentReviewers($document)
	{
		$query = $this->createQueryBuilder('RI')
			->join('RI.pendingReviewers', 'R')
			->select('R.userNameDnAbbreviated')
			->addOrderBy('R.userNameDnAbbreviated', 'ASC')
			->where("RI.Document = :document AND RI.status = 'Pending'")
			->setParameter('document', $document)
			->getQuery();
		
		$output = array();
		$result = $query->getArrayResult();
		if (!empty($result[0])) {
			foreach ($result as $row) {
				$output[] = $row['userNameDnAbbreviated'];
			}
		}
		return $output;
	}
}