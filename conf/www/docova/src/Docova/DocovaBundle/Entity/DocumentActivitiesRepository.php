<?php
namespace Docova\DocovaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ActivitiesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DocumentActivitiesRepository extends EntityRepository
{
	/**
	 * Specific document activities which are assigned to specific user
	 * 
	 * @param string $assignee
	 * @param string $document
	 * @return array
	 */
	public function getDocActivitiesAssignedTo($assignee, $document)
	{
		$result = array();
		
		if (!empty($assignee) && !empty($document)) 
		{
			$query = $this->createQueryBuilder('DA')
				->where('DA.isComplete = false AND DA.document = :doc_id AND DA.assignee = :user_id')
				->setParameter('doc_id', $document)
				->setParameter('user_id', $assignee)
				->getQuery();

			$result = $query->getResult();
		}
		
		return $result;
	}

	/**
	 * Get all incomplete activities assigned to the user
	 * 
	 * @param integer $user
	 * @return mixed
	 */
	public function getIncompleteUserActivities($user)
	{
		$query = $this->createQueryBuilder('DA')
			->join('DA.document', 'D')
			->join('D.folder', 'F')
			->addSelect(array('D', 'F'))
			->where('DA.isComplete = false')
			->andWhere('DA.assignee = :user')
			->setParameter('user', $user)
			->getQuery();
		
		$result = $query->getResult();
		
		return $result;
	}
	
	/**
	 * Get all actvities for a document
	 * 
	 * @param string $document
	 * @return array|NULL
	 */
	public function getDocumentActivities($document)
	{
		$query = $this->createQueryBuilder('DA')
			->join('DA.createdBy', 'C')
			->join('DA.assignee', 'A')
			->addSelect(array('C', 'A'))
			->where('DA.document = :doc')
			->setParameter('doc', $document)
			->getQuery();

		$result = $query->getResult();
		if (!empty($result)) {
			return $result;
		}
		return null;
	}
	
	/**
	 * @param string $document
	 * @param string $type
	 * @return array
	 */
	public function getAllSameActivities($document, $type)
	{
		$query = $this->createQueryBuilder('DA')
			->where('DA.document = :document')
			->andWhere('DA.activityAction = :type')
			->setParameters(array('document' => $document, 'type' => $type))
			->getQuery();
		
		$result = $query->getResult();
		
		return $result;
	}
}